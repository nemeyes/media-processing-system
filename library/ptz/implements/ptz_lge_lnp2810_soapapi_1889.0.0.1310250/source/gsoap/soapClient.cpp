/* soapClient.cpp
   Generated by gSOAP 2.7.13 from lge_lw9424_soapapi.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "gsoap/soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.13 2013-05-12 10:23:37 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZProtocolList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocolList *ns1__GetPTZProtocolList, _ns1__GetPTZProtocolListResponse *ns1__GetPTZProtocolListResponse)
{	struct __ns2__GetPTZProtocolList soap_tmp___ns2__GetPTZProtocolList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocolList";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZProtocolList.ns1__GetPTZProtocolList = ns1__GetPTZProtocolList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZProtocolList(soap, &soap_tmp___ns2__GetPTZProtocolList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZProtocolList(soap, &soap_tmp___ns2__GetPTZProtocolList, "-ns2:GetPTZProtocolList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZProtocolList(soap, &soap_tmp___ns2__GetPTZProtocolList, "-ns2:GetPTZProtocolList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolListResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolListResponse->soap_get(soap, "ns1:GetPTZProtocolListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocol *ns1__GetPTZProtocol, _ns1__GetPTZProtocolResponse *ns1__GetPTZProtocolResponse)
{	struct __ns2__GetPTZProtocol soap_tmp___ns2__GetPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZProtocol.ns1__GetPTZProtocol = ns1__GetPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZProtocol(soap, &soap_tmp___ns2__GetPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZProtocol(soap, &soap_tmp___ns2__GetPTZProtocol, "-ns2:GetPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZProtocol(soap, &soap_tmp___ns2__GetPTZProtocol, "-ns2:GetPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolResponse->soap_get(soap, "ns1:GetPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZProtocol *ns1__SetPTZProtocol, _ns1__SetPTZProtocolResponse *ns1__SetPTZProtocolResponse)
{	struct __ns2__SetPTZProtocol soap_tmp___ns2__SetPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetPTZProtocol.ns1__SetPTZProtocol = ns1__SetPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetPTZProtocol(soap, &soap_tmp___ns2__SetPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetPTZProtocol(soap, &soap_tmp___ns2__SetPTZProtocol, "-ns2:SetPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetPTZProtocol(soap, &soap_tmp___ns2__SetPTZProtocol, "-ns2:SetPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__SetPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZProtocolResponse->soap_get(soap, "ns1:SetPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPTZProtocol *ns1__AddPTZProtocol, _ns1__AddPTZProtocolResponse *ns1__AddPTZProtocolResponse)
{	struct __ns2__AddPTZProtocol soap_tmp___ns2__AddPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/AddPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddPTZProtocol.ns1__AddPTZProtocol = ns1__AddPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddPTZProtocol(soap, &soap_tmp___ns2__AddPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddPTZProtocol(soap, &soap_tmp___ns2__AddPTZProtocol, "-ns2:AddPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddPTZProtocol(soap, &soap_tmp___ns2__AddPTZProtocol, "-ns2:AddPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AddPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__AddPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddPTZProtocolResponse->soap_get(soap, "ns1:AddPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemovePTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RemovePTZProtocol *ns1__RemovePTZProtocol, _ns1__RemovePTZProtocolResponse *ns1__RemovePTZProtocolResponse)
{	struct __ns2__RemovePTZProtocol soap_tmp___ns2__RemovePTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/RemovePTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemovePTZProtocol.ns1__RemovePTZProtocol = ns1__RemovePTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemovePTZProtocol(soap, &soap_tmp___ns2__RemovePTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemovePTZProtocol(soap, &soap_tmp___ns2__RemovePTZProtocol, "-ns2:RemovePTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemovePTZProtocol(soap, &soap_tmp___ns2__RemovePTZProtocol, "-ns2:RemovePTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RemovePTZProtocolResponse)
		return soap_closesock(soap);
	ns1__RemovePTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemovePTZProtocolResponse->soap_get(soap, "ns1:RemovePTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZProtocolInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocolInfo *ns1__GetPTZProtocolInfo, _ns1__GetPTZProtocolInfoResponse *ns1__GetPTZProtocolInfoResponse)
{	struct __ns2__GetPTZProtocolInfo soap_tmp___ns2__GetPTZProtocolInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocolInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZProtocolInfo.ns1__GetPTZProtocolInfo = ns1__GetPTZProtocolInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZProtocolInfo(soap, &soap_tmp___ns2__GetPTZProtocolInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZProtocolInfo(soap, &soap_tmp___ns2__GetPTZProtocolInfo, "-ns2:GetPTZProtocolInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZProtocolInfo(soap, &soap_tmp___ns2__GetPTZProtocolInfo, "-ns2:GetPTZProtocolInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolInfoResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolInfoResponse->soap_get(soap, "ns1:GetPTZProtocolInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZCommandList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZCommandList *ns1__GetPTZCommandList, _ns1__GetPTZCommandListResponse *ns1__GetPTZCommandListResponse)
{	struct __ns2__GetPTZCommandList soap_tmp___ns2__GetPTZCommandList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZCommandList";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZCommandList.ns1__GetPTZCommandList = ns1__GetPTZCommandList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZCommandList(soap, &soap_tmp___ns2__GetPTZCommandList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZCommandList(soap, &soap_tmp___ns2__GetPTZCommandList, "-ns2:GetPTZCommandList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZCommandList(soap, &soap_tmp___ns2__GetPTZCommandList, "-ns2:GetPTZCommandList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZCommandListResponse)
		return soap_closesock(soap);
	ns1__GetPTZCommandListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZCommandListResponse->soap_get(soap, "ns1:GetPTZCommandListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ControlPTZ(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ControlPTZ *ns1__ControlPTZ, _ns1__ControlPTZResponse *ns1__ControlPTZResponse)
{	struct __ns2__ControlPTZ soap_tmp___ns2__ControlPTZ;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/ControlPTZ";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ControlPTZ.ns1__ControlPTZ = ns1__ControlPTZ;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ControlPTZ(soap, &soap_tmp___ns2__ControlPTZ);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ControlPTZ(soap, &soap_tmp___ns2__ControlPTZ, "-ns2:ControlPTZ", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ControlPTZ(soap, &soap_tmp___ns2__ControlPTZ, "-ns2:ControlPTZ", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ControlPTZResponse)
		return soap_closesock(soap);
	ns1__ControlPTZResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ControlPTZResponse->soap_get(soap, "ns1:ControlPTZResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Stop *ns1__Stop, _ns1__StopResponse *ns1__StopResponse)
{	struct __ns2__Stop soap_tmp___ns2__Stop;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/Stop";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Stop.ns1__Stop = ns1__Stop;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Stop(soap, &soap_tmp___ns2__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Stop(soap, &soap_tmp___ns2__Stop, "-ns2:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Stop(soap, &soap_tmp___ns2__Stop, "-ns2:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopResponse)
		return soap_closesock(soap);
	ns1__StopResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopResponse->soap_get(soap, "ns1:StopResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPresetList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPresetList *ns1__GetPresetList, _ns1__GetPresetListResponse *ns1__GetPresetListResponse)
{	struct __ns2__GetPresetList soap_tmp___ns2__GetPresetList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPresetList";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPresetList.ns1__GetPresetList = ns1__GetPresetList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPresetList(soap, &soap_tmp___ns2__GetPresetList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPresetList(soap, &soap_tmp___ns2__GetPresetList, "-ns2:GetPresetList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPresetList(soap, &soap_tmp___ns2__GetPresetList, "-ns2:GetPresetList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPresetListResponse)
		return soap_closesock(soap);
	ns1__GetPresetListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPresetListResponse->soap_get(soap, "ns1:GetPresetListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPreset *ns1__AddPreset, _ns1__AddPresetResponse *ns1__AddPresetResponse)
{	struct __ns2__AddPreset soap_tmp___ns2__AddPreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/AddPreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddPreset.ns1__AddPreset = ns1__AddPreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddPreset(soap, &soap_tmp___ns2__AddPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddPreset(soap, &soap_tmp___ns2__AddPreset, "-ns2:AddPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddPreset(soap, &soap_tmp___ns2__AddPreset, "-ns2:AddPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AddPresetResponse)
		return soap_closesock(soap);
	ns1__AddPresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddPresetResponse->soap_get(soap, "ns1:AddPresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GotoPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GotoPreset *ns1__GotoPreset, _ns1__GotoPresetResponse *ns1__GotoPresetResponse)
{	struct __ns2__GotoPreset soap_tmp___ns2__GotoPreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GotoPreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GotoPreset.ns1__GotoPreset = ns1__GotoPreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GotoPreset(soap, &soap_tmp___ns2__GotoPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GotoPreset(soap, &soap_tmp___ns2__GotoPreset, "-ns2:GotoPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GotoPreset(soap, &soap_tmp___ns2__GotoPreset, "-ns2:GotoPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GotoPresetResponse)
		return soap_closesock(soap);
	ns1__GotoPresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GotoPresetResponse->soap_get(soap, "ns1:GotoPresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemovePreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RemovePreset *ns1__RemovePreset, _ns1__RemovePresetResponse *ns1__RemovePresetResponse)
{	struct __ns2__RemovePreset soap_tmp___ns2__RemovePreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/RemovePreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemovePreset.ns1__RemovePreset = ns1__RemovePreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemovePreset(soap, &soap_tmp___ns2__RemovePreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemovePreset(soap, &soap_tmp___ns2__RemovePreset, "-ns2:RemovePreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemovePreset(soap, &soap_tmp___ns2__RemovePreset, "-ns2:RemovePreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RemovePresetResponse)
		return soap_closesock(soap);
	ns1__RemovePresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemovePresetResponse->soap_get(soap, "ns1:RemovePresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPresetTour *ns1__GetPresetTour, _ns1__GetPresetTourResponse *ns1__GetPresetTourResponse)
{	struct __ns2__GetPresetTour soap_tmp___ns2__GetPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPresetTour.ns1__GetPresetTour = ns1__GetPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPresetTour(soap, &soap_tmp___ns2__GetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPresetTour(soap, &soap_tmp___ns2__GetPresetTour, "-ns2:GetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPresetTour(soap, &soap_tmp___ns2__GetPresetTour, "-ns2:GetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPresetTourResponse)
		return soap_closesock(soap);
	ns1__GetPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPresetTourResponse->soap_get(soap, "ns1:GetPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPresetTour *ns1__SetPresetTour, _ns1__SetPresetTourResponse *ns1__SetPresetTourResponse)
{	struct __ns2__SetPresetTour soap_tmp___ns2__SetPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetPresetTour.ns1__SetPresetTour = ns1__SetPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetPresetTour(soap, &soap_tmp___ns2__SetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetPresetTour(soap, &soap_tmp___ns2__SetPresetTour, "-ns2:SetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetPresetTour(soap, &soap_tmp___ns2__SetPresetTour, "-ns2:SetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPresetTourResponse)
		return soap_closesock(soap);
	ns1__SetPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPresetTourResponse->soap_get(soap, "ns1:SetPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PlayPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PlayPresetTour *ns1__PlayPresetTour, _ns1__PlayPresetTourResponse *ns1__PlayPresetTourResponse)
{	struct __ns2__PlayPresetTour soap_tmp___ns2__PlayPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PlayPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PlayPresetTour.ns1__PlayPresetTour = ns1__PlayPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PlayPresetTour(soap, &soap_tmp___ns2__PlayPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PlayPresetTour(soap, &soap_tmp___ns2__PlayPresetTour, "-ns2:PlayPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PlayPresetTour(soap, &soap_tmp___ns2__PlayPresetTour, "-ns2:PlayPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PlayPresetTourResponse)
		return soap_closesock(soap);
	ns1__PlayPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PlayPresetTourResponse->soap_get(soap, "ns1:PlayPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopPresetTour *ns1__StopPresetTour, _ns1__StopPresetTourResponse *ns1__StopPresetTourResponse)
{	struct __ns2__StopPresetTour soap_tmp___ns2__StopPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopPresetTour.ns1__StopPresetTour = ns1__StopPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopPresetTour(soap, &soap_tmp___ns2__StopPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopPresetTour(soap, &soap_tmp___ns2__StopPresetTour, "-ns2:StopPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopPresetTour(soap, &soap_tmp___ns2__StopPresetTour, "-ns2:StopPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopPresetTourResponse)
		return soap_closesock(soap);
	ns1__StopPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopPresetTourResponse->soap_get(soap, "ns1:StopPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StartPatternRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StartPatternRecording *ns1__StartPatternRecording, _ns1__StartPatternRecordingResponse *ns1__StartPatternRecordingResponse)
{	struct __ns2__StartPatternRecording soap_tmp___ns2__StartPatternRecording;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StartPatternRecording";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StartPatternRecording.ns1__StartPatternRecording = ns1__StartPatternRecording;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StartPatternRecording(soap, &soap_tmp___ns2__StartPatternRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StartPatternRecording(soap, &soap_tmp___ns2__StartPatternRecording, "-ns2:StartPatternRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StartPatternRecording(soap, &soap_tmp___ns2__StartPatternRecording, "-ns2:StartPatternRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StartPatternRecordingResponse)
		return soap_closesock(soap);
	ns1__StartPatternRecordingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StartPatternRecordingResponse->soap_get(soap, "ns1:StartPatternRecordingResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopPatternRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopPatternRecording *ns1__StopPatternRecording, _ns1__StopPatternRecordingResponse *ns1__StopPatternRecordingResponse)
{	struct __ns2__StopPatternRecording soap_tmp___ns2__StopPatternRecording;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopPatternRecording";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopPatternRecording.ns1__StopPatternRecording = ns1__StopPatternRecording;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopPatternRecording(soap, &soap_tmp___ns2__StopPatternRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopPatternRecording(soap, &soap_tmp___ns2__StopPatternRecording, "-ns2:StopPatternRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopPatternRecording(soap, &soap_tmp___ns2__StopPatternRecording, "-ns2:StopPatternRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopPatternRecordingResponse)
		return soap_closesock(soap);
	ns1__StopPatternRecordingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopPatternRecordingResponse->soap_get(soap, "ns1:StopPatternRecordingResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PlayRecordedPattern(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PlayRecordedPattern *ns1__PlayRecordedPattern, _ns1__PlayRecordedPatternResponse *ns1__PlayRecordedPatternResponse)
{	struct __ns2__PlayRecordedPattern soap_tmp___ns2__PlayRecordedPattern;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PlayRecordedPattern";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PlayRecordedPattern.ns1__PlayRecordedPattern = ns1__PlayRecordedPattern;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PlayRecordedPattern(soap, &soap_tmp___ns2__PlayRecordedPattern);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PlayRecordedPattern(soap, &soap_tmp___ns2__PlayRecordedPattern, "-ns2:PlayRecordedPattern", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PlayRecordedPattern(soap, &soap_tmp___ns2__PlayRecordedPattern, "-ns2:PlayRecordedPattern", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PlayRecordedPatternResponse)
		return soap_closesock(soap);
	ns1__PlayRecordedPatternResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PlayRecordedPatternResponse->soap_get(soap, "ns1:PlayRecordedPatternResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopRecordedPattern(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopRecordedPattern *ns1__StopRecordedPattern, _ns1__StopRecordedPatternResponse *ns1__StopRecordedPatternResponse)
{	struct __ns2__StopRecordedPattern soap_tmp___ns2__StopRecordedPattern;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopRecordedPattern";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopRecordedPattern.ns1__StopRecordedPattern = ns1__StopRecordedPattern;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopRecordedPattern(soap, &soap_tmp___ns2__StopRecordedPattern);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopRecordedPattern(soap, &soap_tmp___ns2__StopRecordedPattern, "-ns2:StopRecordedPattern", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopRecordedPattern(soap, &soap_tmp___ns2__StopRecordedPattern, "-ns2:StopRecordedPattern", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopRecordedPatternResponse)
		return soap_closesock(soap);
	ns1__StopRecordedPatternResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopRecordedPatternResponse->soap_get(soap, "ns1:StopRecordedPatternResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZConfiguration *ns1__GetPTZConfiguration, _ns1__GetPTZConfigurationResponse *ns1__GetPTZConfigurationResponse)
{	struct __ns2__GetPTZConfiguration soap_tmp___ns2__GetPTZConfiguration;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZConfiguration.ns1__GetPTZConfiguration = ns1__GetPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZConfiguration(soap, &soap_tmp___ns2__GetPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZConfiguration(soap, &soap_tmp___ns2__GetPTZConfiguration, "-ns2:GetPTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZConfiguration(soap, &soap_tmp___ns2__GetPTZConfiguration, "-ns2:GetPTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZConfigurationResponse->soap_get(soap, "ns1:GetPTZConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZConfiguration *ns1__SetPTZConfiguration, _ns1__SetPTZConfigurationResponse *ns1__SetPTZConfigurationResponse)
{	struct __ns2__SetPTZConfiguration soap_tmp___ns2__SetPTZConfiguration;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetPTZConfiguration.ns1__SetPTZConfiguration = ns1__SetPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetPTZConfiguration(soap, &soap_tmp___ns2__SetPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetPTZConfiguration(soap, &soap_tmp___ns2__SetPTZConfiguration, "-ns2:SetPTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetPTZConfiguration(soap, &soap_tmp___ns2__SetPTZConfiguration, "-ns2:SetPTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZConfigurationResponse->soap_get(soap, "ns1:SetPTZConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPTZPort(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZPort *ns1__GetPTZPort, _ns1__GetPTZPortResponse *ns1__GetPTZPortResponse)
{	struct __ns2__GetPTZPort soap_tmp___ns2__GetPTZPort;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZPort";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPTZPort.ns1__GetPTZPort = ns1__GetPTZPort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPTZPort(soap, &soap_tmp___ns2__GetPTZPort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPTZPort(soap, &soap_tmp___ns2__GetPTZPort, "-ns2:GetPTZPort", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPTZPort(soap, &soap_tmp___ns2__GetPTZPort, "-ns2:GetPTZPort", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZPortResponse)
		return soap_closesock(soap);
	ns1__GetPTZPortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZPortResponse->soap_get(soap, "ns1:GetPTZPortResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetPTZPort(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZPort *ns1__SetPTZPort, _ns1__SetPTZPortResponse *ns1__SetPTZPortResponse)
{	struct __ns2__SetPTZPort soap_tmp___ns2__SetPTZPort;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZPort";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetPTZPort.ns1__SetPTZPort = ns1__SetPTZPort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetPTZPort(soap, &soap_tmp___ns2__SetPTZPort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetPTZPort(soap, &soap_tmp___ns2__SetPTZPort, "-ns2:SetPTZPort", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetPTZPort(soap, &soap_tmp___ns2__SetPTZPort, "-ns2:SetPTZPort", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZPortResponse)
		return soap_closesock(soap);
	ns1__SetPTZPortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZPortResponse->soap_get(soap, "ns1:SetPTZPortResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PTZByPass(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PTZByPass *ns1__PTZByPass, _ns1__PTZByPassResponse *ns1__PTZByPassResponse)
{	struct __ns2__PTZByPass soap_tmp___ns2__PTZByPass;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PTZByPass";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PTZByPass.ns1__PTZByPass = ns1__PTZByPass;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PTZByPass(soap, &soap_tmp___ns2__PTZByPass);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PTZByPass(soap, &soap_tmp___ns2__PTZByPass, "-ns2:PTZByPass", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PTZByPass(soap, &soap_tmp___ns2__PTZByPass, "-ns2:PTZByPass", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PTZByPassResponse)
		return soap_closesock(soap);
	ns1__PTZByPassResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PTZByPassResponse->soap_get(soap, "ns1:PTZByPassResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__OSDMenu(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OSDMenu *ns1__OSDMenu, _ns1__OSDMenuResponse *ns1__OSDMenuResponse)
{	struct __ns2__OSDMenu soap_tmp___ns2__OSDMenu;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/OSDMenu";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__OSDMenu.ns1__OSDMenu = ns1__OSDMenu;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__OSDMenu(soap, &soap_tmp___ns2__OSDMenu);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__OSDMenu(soap, &soap_tmp___ns2__OSDMenu, "-ns2:OSDMenu", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__OSDMenu(soap, &soap_tmp___ns2__OSDMenu, "-ns2:OSDMenu", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__OSDMenuResponse)
		return soap_closesock(soap);
	ns1__OSDMenuResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OSDMenuResponse->soap_get(soap, "ns1:OSDMenuResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZProtocolList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocolList *ns1__GetPTZProtocolList, _ns1__GetPTZProtocolListResponse *ns1__GetPTZProtocolListResponse)
{	struct __ns3__GetPTZProtocolList soap_tmp___ns3__GetPTZProtocolList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocolList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZProtocolList.ns1__GetPTZProtocolList = ns1__GetPTZProtocolList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZProtocolList(soap, &soap_tmp___ns3__GetPTZProtocolList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZProtocolList(soap, &soap_tmp___ns3__GetPTZProtocolList, "-ns3:GetPTZProtocolList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZProtocolList(soap, &soap_tmp___ns3__GetPTZProtocolList, "-ns3:GetPTZProtocolList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolListResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolListResponse->soap_get(soap, "ns1:GetPTZProtocolListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocol *ns1__GetPTZProtocol, _ns1__GetPTZProtocolResponse *ns1__GetPTZProtocolResponse)
{	struct __ns3__GetPTZProtocol soap_tmp___ns3__GetPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZProtocol.ns1__GetPTZProtocol = ns1__GetPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZProtocol(soap, &soap_tmp___ns3__GetPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZProtocol(soap, &soap_tmp___ns3__GetPTZProtocol, "-ns3:GetPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZProtocol(soap, &soap_tmp___ns3__GetPTZProtocol, "-ns3:GetPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolResponse->soap_get(soap, "ns1:GetPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SetPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZProtocol *ns1__SetPTZProtocol, _ns1__SetPTZProtocolResponse *ns1__SetPTZProtocolResponse)
{	struct __ns3__SetPTZProtocol soap_tmp___ns3__SetPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SetPTZProtocol.ns1__SetPTZProtocol = ns1__SetPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SetPTZProtocol(soap, &soap_tmp___ns3__SetPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetPTZProtocol(soap, &soap_tmp___ns3__SetPTZProtocol, "-ns3:SetPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetPTZProtocol(soap, &soap_tmp___ns3__SetPTZProtocol, "-ns3:SetPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__SetPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZProtocolResponse->soap_get(soap, "ns1:SetPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__AddPTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPTZProtocol *ns1__AddPTZProtocol, _ns1__AddPTZProtocolResponse *ns1__AddPTZProtocolResponse)
{	struct __ns3__AddPTZProtocol soap_tmp___ns3__AddPTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/AddPTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__AddPTZProtocol.ns1__AddPTZProtocol = ns1__AddPTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__AddPTZProtocol(soap, &soap_tmp___ns3__AddPTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__AddPTZProtocol(soap, &soap_tmp___ns3__AddPTZProtocol, "-ns3:AddPTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__AddPTZProtocol(soap, &soap_tmp___ns3__AddPTZProtocol, "-ns3:AddPTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AddPTZProtocolResponse)
		return soap_closesock(soap);
	ns1__AddPTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddPTZProtocolResponse->soap_get(soap, "ns1:AddPTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__RemovePTZProtocol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RemovePTZProtocol *ns1__RemovePTZProtocol, _ns1__RemovePTZProtocolResponse *ns1__RemovePTZProtocolResponse)
{	struct __ns3__RemovePTZProtocol soap_tmp___ns3__RemovePTZProtocol;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/RemovePTZProtocol";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__RemovePTZProtocol.ns1__RemovePTZProtocol = ns1__RemovePTZProtocol;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__RemovePTZProtocol(soap, &soap_tmp___ns3__RemovePTZProtocol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__RemovePTZProtocol(soap, &soap_tmp___ns3__RemovePTZProtocol, "-ns3:RemovePTZProtocol", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__RemovePTZProtocol(soap, &soap_tmp___ns3__RemovePTZProtocol, "-ns3:RemovePTZProtocol", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RemovePTZProtocolResponse)
		return soap_closesock(soap);
	ns1__RemovePTZProtocolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemovePTZProtocolResponse->soap_get(soap, "ns1:RemovePTZProtocolResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZProtocolInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZProtocolInfo *ns1__GetPTZProtocolInfo, _ns1__GetPTZProtocolInfoResponse *ns1__GetPTZProtocolInfoResponse)
{	struct __ns3__GetPTZProtocolInfo soap_tmp___ns3__GetPTZProtocolInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZProtocolInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZProtocolInfo.ns1__GetPTZProtocolInfo = ns1__GetPTZProtocolInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZProtocolInfo(soap, &soap_tmp___ns3__GetPTZProtocolInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZProtocolInfo(soap, &soap_tmp___ns3__GetPTZProtocolInfo, "-ns3:GetPTZProtocolInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZProtocolInfo(soap, &soap_tmp___ns3__GetPTZProtocolInfo, "-ns3:GetPTZProtocolInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZProtocolInfoResponse)
		return soap_closesock(soap);
	ns1__GetPTZProtocolInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZProtocolInfoResponse->soap_get(soap, "ns1:GetPTZProtocolInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZCommandList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZCommandList *ns1__GetPTZCommandList, _ns1__GetPTZCommandListResponse *ns1__GetPTZCommandListResponse)
{	struct __ns3__GetPTZCommandList soap_tmp___ns3__GetPTZCommandList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZCommandList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZCommandList.ns1__GetPTZCommandList = ns1__GetPTZCommandList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZCommandList(soap, &soap_tmp___ns3__GetPTZCommandList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZCommandList(soap, &soap_tmp___ns3__GetPTZCommandList, "-ns3:GetPTZCommandList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZCommandList(soap, &soap_tmp___ns3__GetPTZCommandList, "-ns3:GetPTZCommandList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZCommandListResponse)
		return soap_closesock(soap);
	ns1__GetPTZCommandListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZCommandListResponse->soap_get(soap, "ns1:GetPTZCommandListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__ControlPTZ(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ControlPTZ *ns1__ControlPTZ, _ns1__ControlPTZResponse *ns1__ControlPTZResponse)
{	struct __ns3__ControlPTZ soap_tmp___ns3__ControlPTZ;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/ControlPTZ";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__ControlPTZ.ns1__ControlPTZ = ns1__ControlPTZ;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__ControlPTZ(soap, &soap_tmp___ns3__ControlPTZ);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__ControlPTZ(soap, &soap_tmp___ns3__ControlPTZ, "-ns3:ControlPTZ", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__ControlPTZ(soap, &soap_tmp___ns3__ControlPTZ, "-ns3:ControlPTZ", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ControlPTZResponse)
		return soap_closesock(soap);
	ns1__ControlPTZResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ControlPTZResponse->soap_get(soap, "ns1:ControlPTZResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Stop *ns1__Stop, _ns1__StopResponse *ns1__StopResponse)
{	struct __ns3__Stop soap_tmp___ns3__Stop;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/Stop";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__Stop.ns1__Stop = ns1__Stop;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__Stop(soap, &soap_tmp___ns3__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__Stop(soap, &soap_tmp___ns3__Stop, "-ns3:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__Stop(soap, &soap_tmp___ns3__Stop, "-ns3:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopResponse)
		return soap_closesock(soap);
	ns1__StopResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopResponse->soap_get(soap, "ns1:StopResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPresetList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPresetList *ns1__GetPresetList, _ns1__GetPresetListResponse *ns1__GetPresetListResponse)
{	struct __ns3__GetPresetList soap_tmp___ns3__GetPresetList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPresetList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPresetList.ns1__GetPresetList = ns1__GetPresetList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPresetList(soap, &soap_tmp___ns3__GetPresetList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPresetList(soap, &soap_tmp___ns3__GetPresetList, "-ns3:GetPresetList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPresetList(soap, &soap_tmp___ns3__GetPresetList, "-ns3:GetPresetList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPresetListResponse)
		return soap_closesock(soap);
	ns1__GetPresetListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPresetListResponse->soap_get(soap, "ns1:GetPresetListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__AddPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPreset *ns1__AddPreset, _ns1__AddPresetResponse *ns1__AddPresetResponse)
{	struct __ns3__AddPreset soap_tmp___ns3__AddPreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/AddPreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__AddPreset.ns1__AddPreset = ns1__AddPreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__AddPreset(soap, &soap_tmp___ns3__AddPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__AddPreset(soap, &soap_tmp___ns3__AddPreset, "-ns3:AddPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__AddPreset(soap, &soap_tmp___ns3__AddPreset, "-ns3:AddPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AddPresetResponse)
		return soap_closesock(soap);
	ns1__AddPresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddPresetResponse->soap_get(soap, "ns1:AddPresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GotoPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GotoPreset *ns1__GotoPreset, _ns1__GotoPresetResponse *ns1__GotoPresetResponse)
{	struct __ns3__GotoPreset soap_tmp___ns3__GotoPreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GotoPreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GotoPreset.ns1__GotoPreset = ns1__GotoPreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GotoPreset(soap, &soap_tmp___ns3__GotoPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GotoPreset(soap, &soap_tmp___ns3__GotoPreset, "-ns3:GotoPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GotoPreset(soap, &soap_tmp___ns3__GotoPreset, "-ns3:GotoPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GotoPresetResponse)
		return soap_closesock(soap);
	ns1__GotoPresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GotoPresetResponse->soap_get(soap, "ns1:GotoPresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__RemovePreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RemovePreset *ns1__RemovePreset, _ns1__RemovePresetResponse *ns1__RemovePresetResponse)
{	struct __ns3__RemovePreset soap_tmp___ns3__RemovePreset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/RemovePreset";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__RemovePreset.ns1__RemovePreset = ns1__RemovePreset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__RemovePreset(soap, &soap_tmp___ns3__RemovePreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__RemovePreset(soap, &soap_tmp___ns3__RemovePreset, "-ns3:RemovePreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__RemovePreset(soap, &soap_tmp___ns3__RemovePreset, "-ns3:RemovePreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RemovePresetResponse)
		return soap_closesock(soap);
	ns1__RemovePresetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemovePresetResponse->soap_get(soap, "ns1:RemovePresetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPresetTour *ns1__GetPresetTour, _ns1__GetPresetTourResponse *ns1__GetPresetTourResponse)
{	struct __ns3__GetPresetTour soap_tmp___ns3__GetPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPresetTour.ns1__GetPresetTour = ns1__GetPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPresetTour(soap, &soap_tmp___ns3__GetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPresetTour(soap, &soap_tmp___ns3__GetPresetTour, "-ns3:GetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPresetTour(soap, &soap_tmp___ns3__GetPresetTour, "-ns3:GetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPresetTourResponse)
		return soap_closesock(soap);
	ns1__GetPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPresetTourResponse->soap_get(soap, "ns1:GetPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPresetTour *ns1__SetPresetTour, _ns1__SetPresetTourResponse *ns1__SetPresetTourResponse)
{	struct __ns3__SetPresetTour soap_tmp___ns3__SetPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SetPresetTour.ns1__SetPresetTour = ns1__SetPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SetPresetTour(soap, &soap_tmp___ns3__SetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetPresetTour(soap, &soap_tmp___ns3__SetPresetTour, "-ns3:SetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetPresetTour(soap, &soap_tmp___ns3__SetPresetTour, "-ns3:SetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPresetTourResponse)
		return soap_closesock(soap);
	ns1__SetPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPresetTourResponse->soap_get(soap, "ns1:SetPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PlayPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PlayPresetTour *ns1__PlayPresetTour, _ns1__PlayPresetTourResponse *ns1__PlayPresetTourResponse)
{	struct __ns3__PlayPresetTour soap_tmp___ns3__PlayPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PlayPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__PlayPresetTour.ns1__PlayPresetTour = ns1__PlayPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__PlayPresetTour(soap, &soap_tmp___ns3__PlayPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__PlayPresetTour(soap, &soap_tmp___ns3__PlayPresetTour, "-ns3:PlayPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__PlayPresetTour(soap, &soap_tmp___ns3__PlayPresetTour, "-ns3:PlayPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PlayPresetTourResponse)
		return soap_closesock(soap);
	ns1__PlayPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PlayPresetTourResponse->soap_get(soap, "ns1:PlayPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__StopPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopPresetTour *ns1__StopPresetTour, _ns1__StopPresetTourResponse *ns1__StopPresetTourResponse)
{	struct __ns3__StopPresetTour soap_tmp___ns3__StopPresetTour;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopPresetTour";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__StopPresetTour.ns1__StopPresetTour = ns1__StopPresetTour;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__StopPresetTour(soap, &soap_tmp___ns3__StopPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__StopPresetTour(soap, &soap_tmp___ns3__StopPresetTour, "-ns3:StopPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__StopPresetTour(soap, &soap_tmp___ns3__StopPresetTour, "-ns3:StopPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopPresetTourResponse)
		return soap_closesock(soap);
	ns1__StopPresetTourResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopPresetTourResponse->soap_get(soap, "ns1:StopPresetTourResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__StartPatternRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StartPatternRecording *ns1__StartPatternRecording, _ns1__StartPatternRecordingResponse *ns1__StartPatternRecordingResponse)
{	struct __ns3__StartPatternRecording soap_tmp___ns3__StartPatternRecording;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StartPatternRecording";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__StartPatternRecording.ns1__StartPatternRecording = ns1__StartPatternRecording;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__StartPatternRecording(soap, &soap_tmp___ns3__StartPatternRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__StartPatternRecording(soap, &soap_tmp___ns3__StartPatternRecording, "-ns3:StartPatternRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__StartPatternRecording(soap, &soap_tmp___ns3__StartPatternRecording, "-ns3:StartPatternRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StartPatternRecordingResponse)
		return soap_closesock(soap);
	ns1__StartPatternRecordingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StartPatternRecordingResponse->soap_get(soap, "ns1:StartPatternRecordingResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__StopPatternRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopPatternRecording *ns1__StopPatternRecording, _ns1__StopPatternRecordingResponse *ns1__StopPatternRecordingResponse)
{	struct __ns3__StopPatternRecording soap_tmp___ns3__StopPatternRecording;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopPatternRecording";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__StopPatternRecording.ns1__StopPatternRecording = ns1__StopPatternRecording;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__StopPatternRecording(soap, &soap_tmp___ns3__StopPatternRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__StopPatternRecording(soap, &soap_tmp___ns3__StopPatternRecording, "-ns3:StopPatternRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__StopPatternRecording(soap, &soap_tmp___ns3__StopPatternRecording, "-ns3:StopPatternRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopPatternRecordingResponse)
		return soap_closesock(soap);
	ns1__StopPatternRecordingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopPatternRecordingResponse->soap_get(soap, "ns1:StopPatternRecordingResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PlayRecordedPattern(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PlayRecordedPattern *ns1__PlayRecordedPattern, _ns1__PlayRecordedPatternResponse *ns1__PlayRecordedPatternResponse)
{	struct __ns3__PlayRecordedPattern soap_tmp___ns3__PlayRecordedPattern;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PlayRecordedPattern";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__PlayRecordedPattern.ns1__PlayRecordedPattern = ns1__PlayRecordedPattern;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__PlayRecordedPattern(soap, &soap_tmp___ns3__PlayRecordedPattern);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__PlayRecordedPattern(soap, &soap_tmp___ns3__PlayRecordedPattern, "-ns3:PlayRecordedPattern", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__PlayRecordedPattern(soap, &soap_tmp___ns3__PlayRecordedPattern, "-ns3:PlayRecordedPattern", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PlayRecordedPatternResponse)
		return soap_closesock(soap);
	ns1__PlayRecordedPatternResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PlayRecordedPatternResponse->soap_get(soap, "ns1:PlayRecordedPatternResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__StopRecordedPattern(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__StopRecordedPattern *ns1__StopRecordedPattern, _ns1__StopRecordedPatternResponse *ns1__StopRecordedPatternResponse)
{	struct __ns3__StopRecordedPattern soap_tmp___ns3__StopRecordedPattern;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/StopRecordedPattern";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__StopRecordedPattern.ns1__StopRecordedPattern = ns1__StopRecordedPattern;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__StopRecordedPattern(soap, &soap_tmp___ns3__StopRecordedPattern);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__StopRecordedPattern(soap, &soap_tmp___ns3__StopRecordedPattern, "-ns3:StopRecordedPattern", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__StopRecordedPattern(soap, &soap_tmp___ns3__StopRecordedPattern, "-ns3:StopRecordedPattern", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StopRecordedPatternResponse)
		return soap_closesock(soap);
	ns1__StopRecordedPatternResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopRecordedPatternResponse->soap_get(soap, "ns1:StopRecordedPatternResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZConfiguration *ns1__GetPTZConfiguration, _ns1__GetPTZConfigurationResponse *ns1__GetPTZConfigurationResponse)
{	struct __ns3__GetPTZConfiguration soap_tmp___ns3__GetPTZConfiguration;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZConfiguration.ns1__GetPTZConfiguration = ns1__GetPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZConfiguration(soap, &soap_tmp___ns3__GetPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZConfiguration(soap, &soap_tmp___ns3__GetPTZConfiguration, "-ns3:GetPTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZConfiguration(soap, &soap_tmp___ns3__GetPTZConfiguration, "-ns3:GetPTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZConfigurationResponse->soap_get(soap, "ns1:GetPTZConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SetPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZConfiguration *ns1__SetPTZConfiguration, _ns1__SetPTZConfigurationResponse *ns1__SetPTZConfigurationResponse)
{	struct __ns3__SetPTZConfiguration soap_tmp___ns3__SetPTZConfiguration;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SetPTZConfiguration.ns1__SetPTZConfiguration = ns1__SetPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SetPTZConfiguration(soap, &soap_tmp___ns3__SetPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetPTZConfiguration(soap, &soap_tmp___ns3__SetPTZConfiguration, "-ns3:SetPTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetPTZConfiguration(soap, &soap_tmp___ns3__SetPTZConfiguration, "-ns3:SetPTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZConfigurationResponse->soap_get(soap, "ns1:SetPTZConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPTZPort(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPTZPort *ns1__GetPTZPort, _ns1__GetPTZPortResponse *ns1__GetPTZPortResponse)
{	struct __ns3__GetPTZPort soap_tmp___ns3__GetPTZPort;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/GetPTZPort";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPTZPort.ns1__GetPTZPort = ns1__GetPTZPort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPTZPort(soap, &soap_tmp___ns3__GetPTZPort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPTZPort(soap, &soap_tmp___ns3__GetPTZPort, "-ns3:GetPTZPort", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPTZPort(soap, &soap_tmp___ns3__GetPTZPort, "-ns3:GetPTZPort", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPTZPortResponse)
		return soap_closesock(soap);
	ns1__GetPTZPortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPTZPortResponse->soap_get(soap, "ns1:GetPTZPortResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SetPTZPort(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetPTZPort *ns1__SetPTZPort, _ns1__SetPTZPortResponse *ns1__SetPTZPortResponse)
{	struct __ns3__SetPTZPort soap_tmp___ns3__SetPTZPort;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SetPTZPort";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SetPTZPort.ns1__SetPTZPort = ns1__SetPTZPort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SetPTZPort(soap, &soap_tmp___ns3__SetPTZPort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetPTZPort(soap, &soap_tmp___ns3__SetPTZPort, "-ns3:SetPTZPort", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetPTZPort(soap, &soap_tmp___ns3__SetPTZPort, "-ns3:SetPTZPort", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPTZPortResponse)
		return soap_closesock(soap);
	ns1__SetPTZPortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPTZPortResponse->soap_get(soap, "ns1:SetPTZPortResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PTZByPass(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PTZByPass *ns1__PTZByPass, _ns1__PTZByPassResponse *ns1__PTZByPassResponse)
{	struct __ns3__PTZByPass soap_tmp___ns3__PTZByPass;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/PTZByPass";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__PTZByPass.ns1__PTZByPass = ns1__PTZByPass;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__PTZByPass(soap, &soap_tmp___ns3__PTZByPass);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__PTZByPass(soap, &soap_tmp___ns3__PTZByPass, "-ns3:PTZByPass", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__PTZByPass(soap, &soap_tmp___ns3__PTZByPass, "-ns3:PTZByPass", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__PTZByPassResponse)
		return soap_closesock(soap);
	ns1__PTZByPassResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PTZByPassResponse->soap_get(soap, "ns1:PTZByPassResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__OSDMenu(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OSDMenu *ns1__OSDMenu, _ns1__OSDMenuResponse *ns1__OSDMenuResponse)
{	struct __ns3__OSDMenu soap_tmp___ns3__OSDMenu;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:3393/PTZ.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/OSDMenu";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__OSDMenu.ns1__OSDMenu = ns1__OSDMenu;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__OSDMenu(soap, &soap_tmp___ns3__OSDMenu);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__OSDMenu(soap, &soap_tmp___ns3__OSDMenu, "-ns3:OSDMenu", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__OSDMenu(soap, &soap_tmp___ns3__OSDMenu, "-ns3:OSDMenu", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__OSDMenuResponse)
		return soap_closesock(soap);
	ns1__OSDMenuResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OSDMenuResponse->soap_get(soap, "ns1:OSDMenuResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
