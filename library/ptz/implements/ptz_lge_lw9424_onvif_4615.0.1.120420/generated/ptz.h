/* ptz.h
   Generated by wsdl2h 1.2.16 from http://www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl and typemap_all.dat
   2012-11-28 08:21:34 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Build Notes

NOTE:

 - Run soapcpp2 on ptz.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tptz = "http://www.onvif.org/ver20/ptz/wsdl"
tt = "http://www.onvif.org/ver10/schema"
xmime5 = "http://www.w3.org/2005/05/xmlmime"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
xop = "http://www.w3.org/2004/08/xop/include"
wsa5 = "http://www.w3.org/2005/08/addressing"
wsbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_xmime5	"http://www.w3.org/2005/05/xmlmime"
//gsoap xmime5 schema namespace:	http://www.w3.org/2005/05/xmlmime
//gsoap xmime5 schema form:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_xop	"http://www.w3.org/2004/08/xop/include"
//gsoap xop   schema namespace:	http://www.w3.org/2004/08/xop/include
//gsoap xop   schema form:	unqualified

#define SOAP_NAMESPACE_OF_wsa5	"http://www.w3.org/2005/08/addressing"
//gsoap wsa5  schema namespace:	http://www.w3.org/2005/08/addressing
//gsoap wsa5  schema elementForm:	qualified
//gsoap wsa5  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsbf  schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsbf  schema elementForm:	qualified
//gsoap wsbf  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

/*
Warning -d option used: -p option disabled and xsd:anyType base class removed.
Use run-time SOAP_DOM_NODE flag to deserialize class instances into DOM nodes.
A DOM node is represented by the xsd__anyType object implemented in dom.cpp.
*/


/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "SOAP-ENV:Envelope"
typedef char* SOAP_ENV__Envelope;

/// Primitive built-in type "xs:NCName"
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType"
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
	struct soap *soap;
};

/// Primitive built-in type "xs:duration"
typedef char* xsd__duration;

/// Built-in type "xs:hexBinary".
class xsd__hexBinary { unsigned char *__ptr; int __size; };

/// Primitive built-in type "xs:integer"
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger"
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token"
typedef char* xsd__token;

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class tptz__Capabilities.
class tptz__Capabilities;

//  Forward declaration of class _tptz__GetServiceCapabilities.
class _tptz__GetServiceCapabilities;

//  Forward declaration of class _tptz__GetServiceCapabilitiesResponse.
class _tptz__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tptz__GetNodes.
class _tptz__GetNodes;

//  Forward declaration of class _tptz__GetNodesResponse.
class _tptz__GetNodesResponse;

//  Forward declaration of class _tptz__GetNode.
class _tptz__GetNode;

//  Forward declaration of class _tptz__GetNodeResponse.
class _tptz__GetNodeResponse;

//  Forward declaration of class _tptz__GetConfigurations.
class _tptz__GetConfigurations;

//  Forward declaration of class _tptz__GetConfigurationsResponse.
class _tptz__GetConfigurationsResponse;

//  Forward declaration of class _tptz__GetConfiguration.
class _tptz__GetConfiguration;

//  Forward declaration of class _tptz__GetConfigurationResponse.
class _tptz__GetConfigurationResponse;

//  Forward declaration of class _tptz__SetConfiguration.
class _tptz__SetConfiguration;

//  Forward declaration of class _tptz__SetConfigurationResponse.
class _tptz__SetConfigurationResponse;

//  Forward declaration of class _tptz__GetConfigurationOptions.
class _tptz__GetConfigurationOptions;

//  Forward declaration of class _tptz__GetConfigurationOptionsResponse.
class _tptz__GetConfigurationOptionsResponse;

//  Forward declaration of class _tptz__SendAuxiliaryCommand.
class _tptz__SendAuxiliaryCommand;

//  Forward declaration of class _tptz__SendAuxiliaryCommandResponse.
class _tptz__SendAuxiliaryCommandResponse;

//  Forward declaration of class _tptz__GetPresets.
class _tptz__GetPresets;

//  Forward declaration of class _tptz__GetPresetsResponse.
class _tptz__GetPresetsResponse;

//  Forward declaration of class _tptz__SetPreset.
class _tptz__SetPreset;

//  Forward declaration of class _tptz__SetPresetResponse.
class _tptz__SetPresetResponse;

//  Forward declaration of class _tptz__RemovePreset.
class _tptz__RemovePreset;

//  Forward declaration of class _tptz__RemovePresetResponse.
class _tptz__RemovePresetResponse;

//  Forward declaration of class _tptz__GotoPreset.
class _tptz__GotoPreset;

//  Forward declaration of class _tptz__GotoPresetResponse.
class _tptz__GotoPresetResponse;

//  Forward declaration of class _tptz__GetStatus.
class _tptz__GetStatus;

//  Forward declaration of class _tptz__GetStatusResponse.
class _tptz__GetStatusResponse;

//  Forward declaration of class _tptz__GotoHomePosition.
class _tptz__GotoHomePosition;

//  Forward declaration of class _tptz__GotoHomePositionResponse.
class _tptz__GotoHomePositionResponse;

//  Forward declaration of class _tptz__SetHomePosition.
class _tptz__SetHomePosition;

//  Forward declaration of class _tptz__SetHomePositionResponse.
class _tptz__SetHomePositionResponse;

//  Forward declaration of class _tptz__ContinuousMove.
class _tptz__ContinuousMove;

//  Forward declaration of class _tptz__ContinuousMoveResponse.
class _tptz__ContinuousMoveResponse;

//  Forward declaration of class _tptz__RelativeMove.
class _tptz__RelativeMove;

//  Forward declaration of class _tptz__RelativeMoveResponse.
class _tptz__RelativeMoveResponse;

//  Forward declaration of class _tptz__AbsoluteMove.
class _tptz__AbsoluteMove;

//  Forward declaration of class _tptz__AbsoluteMoveResponse.
class _tptz__AbsoluteMoveResponse;

//  Forward declaration of class _tptz__Stop.
class _tptz__Stop;

//  Forward declaration of class _tptz__StopResponse.
class _tptz__StopResponse;

//  Forward declaration of class _tptz__GetPresetTours.
class _tptz__GetPresetTours;

//  Forward declaration of class _tptz__GetPresetToursResponse.
class _tptz__GetPresetToursResponse;

//  Forward declaration of class _tptz__GetPresetTour.
class _tptz__GetPresetTour;

//  Forward declaration of class _tptz__GetPresetTourResponse.
class _tptz__GetPresetTourResponse;

//  Forward declaration of class _tptz__GetPresetTourOptions.
class _tptz__GetPresetTourOptions;

//  Forward declaration of class _tptz__GetPresetTourOptionsResponse.
class _tptz__GetPresetTourOptionsResponse;

//  Forward declaration of class _tptz__CreatePresetTour.
class _tptz__CreatePresetTour;

//  Forward declaration of class _tptz__CreatePresetTourResponse.
class _tptz__CreatePresetTourResponse;

//  Forward declaration of class _tptz__ModifyPresetTour.
class _tptz__ModifyPresetTour;

//  Forward declaration of class _tptz__ModifyPresetTourResponse.
class _tptz__ModifyPresetTourResponse;

//  Forward declaration of class _tptz__OperatePresetTour.
class _tptz__OperatePresetTour;

//  Forward declaration of class _tptz__OperatePresetTourResponse.
class _tptz__OperatePresetTourResponse;

//  Forward declaration of class _tptz__RemovePresetTour.
class _tptz__RemovePresetTour;

//  Forward declaration of class _tptz__RemovePresetTourResponse.
class _tptz__RemovePresetTourResponse;

//  Forward declaration of class tt__DeviceEntity.
class tt__DeviceEntity;

//  Forward declaration of class tt__IntRectangle.
class tt__IntRectangle;

//  Forward declaration of class tt__IntRectangleRange.
class tt__IntRectangleRange;

//  Forward declaration of class tt__IntRange.
class tt__IntRange;

//  Forward declaration of class tt__FloatRange.
class tt__FloatRange;

//  Forward declaration of class tt__DurationRange.
class tt__DurationRange;

//  Forward declaration of class tt__IntList.
class tt__IntList;

//  Forward declaration of class tt__FloatList.
class tt__FloatList;

//  Forward declaration of class tt__AnyHolder.
class tt__AnyHolder;

//  Forward declaration of class tt__VideoSource.
class tt__VideoSource;

//  Forward declaration of class tt__VideoSourceExtension.
class tt__VideoSourceExtension;

//  Forward declaration of class tt__VideoSourceExtension2.
class tt__VideoSourceExtension2;

//  Forward declaration of class tt__AudioSource.
class tt__AudioSource;

//  Forward declaration of class tt__Profile.
class tt__Profile;

//  Forward declaration of class tt__ProfileExtension.
class tt__ProfileExtension;

//  Forward declaration of class tt__ProfileExtension2.
class tt__ProfileExtension2;

//  Forward declaration of class tt__ConfigurationEntity.
class tt__ConfigurationEntity;

//  Forward declaration of class tt__VideoSourceConfiguration.
class tt__VideoSourceConfiguration;

//  Forward declaration of class tt__VideoSourceConfigurationExtension.
class tt__VideoSourceConfigurationExtension;

//  Forward declaration of class tt__VideoSourceConfigurationExtension2.
class tt__VideoSourceConfigurationExtension2;

//  Forward declaration of class tt__Rotate.
class tt__Rotate;

//  Forward declaration of class tt__RotateExtension.
class tt__RotateExtension;

//  Forward declaration of class tt__VideoSourceConfigurationOptions.
class tt__VideoSourceConfigurationOptions;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension.
class tt__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension2.
class tt__VideoSourceConfigurationOptionsExtension2;

//  Forward declaration of class tt__RotateOptions.
class tt__RotateOptions;

//  Forward declaration of class tt__RotateOptionsExtension.
class tt__RotateOptionsExtension;

//  Forward declaration of class tt__VideoEncoderConfiguration.
class tt__VideoEncoderConfiguration;

//  Forward declaration of class tt__VideoResolution.
class tt__VideoResolution;

//  Forward declaration of class tt__VideoRateControl.
class tt__VideoRateControl;

//  Forward declaration of class tt__Mpeg4Configuration.
class tt__Mpeg4Configuration;

//  Forward declaration of class tt__H264Configuration.
class tt__H264Configuration;

//  Forward declaration of class tt__VideoEncoderConfigurationOptions.
class tt__VideoEncoderConfigurationOptions;

//  Forward declaration of class tt__VideoEncoderOptionsExtension.
class tt__VideoEncoderOptionsExtension;

//  Forward declaration of class tt__VideoEncoderOptionsExtension2.
class tt__VideoEncoderOptionsExtension2;

//  Forward declaration of class tt__JpegOptions.
class tt__JpegOptions;

//  Forward declaration of class tt__JpegOptions2.
class tt__JpegOptions2;

//  Forward declaration of class tt__Mpeg4Options.
class tt__Mpeg4Options;

//  Forward declaration of class tt__Mpeg4Options2.
class tt__Mpeg4Options2;

//  Forward declaration of class tt__H264Options.
class tt__H264Options;

//  Forward declaration of class tt__H264Options2.
class tt__H264Options2;

//  Forward declaration of class tt__AudioSourceConfiguration.
class tt__AudioSourceConfiguration;

//  Forward declaration of class tt__AudioSourceConfigurationOptions.
class tt__AudioSourceConfigurationOptions;

//  Forward declaration of class tt__AudioSourceOptionsExtension.
class tt__AudioSourceOptionsExtension;

//  Forward declaration of class tt__AudioEncoderConfiguration.
class tt__AudioEncoderConfiguration;

//  Forward declaration of class tt__AudioEncoderConfigurationOptions.
class tt__AudioEncoderConfigurationOptions;

//  Forward declaration of class tt__AudioEncoderConfigurationOption.
class tt__AudioEncoderConfigurationOption;

//  Forward declaration of class tt__VideoAnalyticsConfiguration.
class tt__VideoAnalyticsConfiguration;

//  Forward declaration of class tt__MetadataConfiguration.
class tt__MetadataConfiguration;

//  Forward declaration of class tt__MetadataConfigurationExtension.
class tt__MetadataConfigurationExtension;

//  Forward declaration of class tt__PTZFilter.
class tt__PTZFilter;

//  Forward declaration of class tt__EventSubscription.
class tt__EventSubscription;

//  Forward declaration of class tt__MetadataConfigurationOptions.
class tt__MetadataConfigurationOptions;

//  Forward declaration of class tt__PTZStatusFilterOptions.
class tt__PTZStatusFilterOptions;

//  Forward declaration of class tt__PTZStatusFilterOptionsExtension.
class tt__PTZStatusFilterOptionsExtension;

//  Forward declaration of class tt__VideoOutput.
class tt__VideoOutput;

//  Forward declaration of class tt__VideoOutputExtension.
class tt__VideoOutputExtension;

//  Forward declaration of class tt__VideoOutputConfiguration.
class tt__VideoOutputConfiguration;

//  Forward declaration of class tt__VideoOutputConfigurationOptions.
class tt__VideoOutputConfigurationOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptions.
class tt__VideoDecoderConfigurationOptions;

//  Forward declaration of class tt__H264DecOptions.
class tt__H264DecOptions;

//  Forward declaration of class tt__JpegDecOptions.
class tt__JpegDecOptions;

//  Forward declaration of class tt__Mpeg4DecOptions.
class tt__Mpeg4DecOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptionsExtension.
class tt__VideoDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__AudioOutput.
class tt__AudioOutput;

//  Forward declaration of class tt__AudioOutputConfiguration.
class tt__AudioOutputConfiguration;

//  Forward declaration of class tt__AudioOutputConfigurationOptions.
class tt__AudioOutputConfigurationOptions;

//  Forward declaration of class tt__AudioDecoderConfiguration.
class tt__AudioDecoderConfiguration;

//  Forward declaration of class tt__AudioDecoderConfigurationOptions.
class tt__AudioDecoderConfigurationOptions;

//  Forward declaration of class tt__G711DecOptions.
class tt__G711DecOptions;

//  Forward declaration of class tt__AACDecOptions.
class tt__AACDecOptions;

//  Forward declaration of class tt__G726DecOptions.
class tt__G726DecOptions;

//  Forward declaration of class tt__AudioDecoderConfigurationOptionsExtension.
class tt__AudioDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__MulticastConfiguration.
class tt__MulticastConfiguration;

//  Forward declaration of class tt__StreamSetup.
class tt__StreamSetup;

//  Forward declaration of class tt__Transport.
class tt__Transport;

//  Forward declaration of class tt__MediaUri.
class tt__MediaUri;

//  Forward declaration of class tt__Scope.
class tt__Scope;

//  Forward declaration of class tt__NetworkInterface.
class tt__NetworkInterface;

//  Forward declaration of class tt__NetworkInterfaceExtension.
class tt__NetworkInterfaceExtension;

//  Forward declaration of class tt__Dot3Configuration.
class tt__Dot3Configuration;

//  Forward declaration of class tt__NetworkInterfaceExtension2.
class tt__NetworkInterfaceExtension2;

//  Forward declaration of class tt__NetworkInterfaceLink.
class tt__NetworkInterfaceLink;

//  Forward declaration of class tt__NetworkInterfaceConnectionSetting.
class tt__NetworkInterfaceConnectionSetting;

//  Forward declaration of class tt__NetworkInterfaceInfo.
class tt__NetworkInterfaceInfo;

//  Forward declaration of class tt__IPv6NetworkInterface.
class tt__IPv6NetworkInterface;

//  Forward declaration of class tt__IPv4NetworkInterface.
class tt__IPv4NetworkInterface;

//  Forward declaration of class tt__IPv4Configuration.
class tt__IPv4Configuration;

//  Forward declaration of class tt__IPv6Configuration.
class tt__IPv6Configuration;

//  Forward declaration of class tt__IPv6ConfigurationExtension.
class tt__IPv6ConfigurationExtension;

//  Forward declaration of class tt__NetworkProtocol.
class tt__NetworkProtocol;

//  Forward declaration of class tt__NetworkProtocolExtension.
class tt__NetworkProtocolExtension;

//  Forward declaration of class tt__NetworkHost.
class tt__NetworkHost;

//  Forward declaration of class tt__NetworkHostExtension.
class tt__NetworkHostExtension;

//  Forward declaration of class tt__IPAddress.
class tt__IPAddress;

//  Forward declaration of class tt__PrefixedIPv4Address.
class tt__PrefixedIPv4Address;

//  Forward declaration of class tt__PrefixedIPv6Address.
class tt__PrefixedIPv6Address;

//  Forward declaration of class tt__HostnameInformation.
class tt__HostnameInformation;

//  Forward declaration of class tt__HostnameInformationExtension.
class tt__HostnameInformationExtension;

//  Forward declaration of class tt__DNSInformation.
class tt__DNSInformation;

//  Forward declaration of class tt__DNSInformationExtension.
class tt__DNSInformationExtension;

//  Forward declaration of class tt__NTPInformation.
class tt__NTPInformation;

//  Forward declaration of class tt__NTPInformationExtension.
class tt__NTPInformationExtension;

//  Forward declaration of class tt__DynamicDNSInformation.
class tt__DynamicDNSInformation;

//  Forward declaration of class tt__DynamicDNSInformationExtension.
class tt__DynamicDNSInformationExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfiguration.
class tt__NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension.
class tt__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class tt__IPv6NetworkInterfaceSetConfiguration.
class tt__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__IPv4NetworkInterfaceSetConfiguration.
class tt__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkGateway.
class tt__NetworkGateway;

//  Forward declaration of class tt__NetworkZeroConfiguration.
class tt__NetworkZeroConfiguration;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension.
class tt__NetworkZeroConfigurationExtension;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension2.
class tt__NetworkZeroConfigurationExtension2;

//  Forward declaration of class tt__IPAddressFilter.
class tt__IPAddressFilter;

//  Forward declaration of class tt__IPAddressFilterExtension.
class tt__IPAddressFilterExtension;

//  Forward declaration of class tt__Dot11Configuration.
class tt__Dot11Configuration;

//  Forward declaration of class tt__Dot11SecurityConfiguration.
class tt__Dot11SecurityConfiguration;

//  Forward declaration of class tt__Dot11SecurityConfigurationExtension.
class tt__Dot11SecurityConfigurationExtension;

//  Forward declaration of class tt__Dot11PSKSet.
class tt__Dot11PSKSet;

//  Forward declaration of class tt__Dot11PSKSetExtension.
class tt__Dot11PSKSetExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension2.
class tt__NetworkInterfaceSetConfigurationExtension2;

//  Forward declaration of class tt__Dot11Capabilities.
class tt__Dot11Capabilities;

//  Forward declaration of class tt__Dot11Status.
class tt__Dot11Status;

//  Forward declaration of class tt__Dot11AvailableNetworks.
class tt__Dot11AvailableNetworks;

//  Forward declaration of class tt__Dot11AvailableNetworksExtension.
class tt__Dot11AvailableNetworksExtension;

//  Forward declaration of class tt__Capabilities.
class tt__Capabilities;

//  Forward declaration of class tt__CapabilitiesExtension.
class tt__CapabilitiesExtension;

//  Forward declaration of class tt__CapabilitiesExtension2.
class tt__CapabilitiesExtension2;

//  Forward declaration of class tt__AnalyticsCapabilities.
class tt__AnalyticsCapabilities;

//  Forward declaration of class tt__DeviceCapabilities.
class tt__DeviceCapabilities;

//  Forward declaration of class tt__DeviceCapabilitiesExtension.
class tt__DeviceCapabilitiesExtension;

//  Forward declaration of class tt__EventCapabilities.
class tt__EventCapabilities;

//  Forward declaration of class tt__IOCapabilities.
class tt__IOCapabilities;

//  Forward declaration of class tt__IOCapabilitiesExtension.
class tt__IOCapabilitiesExtension;

//  Forward declaration of class tt__IOCapabilitiesExtension2.
class tt__IOCapabilitiesExtension2;

//  Forward declaration of class tt__MediaCapabilities.
class tt__MediaCapabilities;

//  Forward declaration of class tt__MediaCapabilitiesExtension.
class tt__MediaCapabilitiesExtension;

//  Forward declaration of class tt__RealTimeStreamingCapabilities.
class tt__RealTimeStreamingCapabilities;

//  Forward declaration of class tt__RealTimeStreamingCapabilitiesExtension.
class tt__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class tt__ProfileCapabilities.
class tt__ProfileCapabilities;

//  Forward declaration of class tt__NetworkCapabilities.
class tt__NetworkCapabilities;

//  Forward declaration of class tt__NetworkCapabilitiesExtension.
class tt__NetworkCapabilitiesExtension;

//  Forward declaration of class tt__NetworkCapabilitiesExtension2.
class tt__NetworkCapabilitiesExtension2;

//  Forward declaration of class tt__SecurityCapabilities.
class tt__SecurityCapabilities;

//  Forward declaration of class tt__SecurityCapabilitiesExtension.
class tt__SecurityCapabilitiesExtension;

//  Forward declaration of class tt__SecurityCapabilitiesExtension2.
class tt__SecurityCapabilitiesExtension2;

//  Forward declaration of class tt__SystemCapabilities.
class tt__SystemCapabilities;

//  Forward declaration of class tt__SystemCapabilitiesExtension.
class tt__SystemCapabilitiesExtension;

//  Forward declaration of class tt__SystemCapabilitiesExtension2.
class tt__SystemCapabilitiesExtension2;

//  Forward declaration of class tt__OnvifVersion.
class tt__OnvifVersion;

//  Forward declaration of class tt__ImagingCapabilities.
class tt__ImagingCapabilities;

//  Forward declaration of class tt__PTZCapabilities.
class tt__PTZCapabilities;

//  Forward declaration of class tt__DeviceIOCapabilities.
class tt__DeviceIOCapabilities;

//  Forward declaration of class tt__DisplayCapabilities.
class tt__DisplayCapabilities;

//  Forward declaration of class tt__RecordingCapabilities.
class tt__RecordingCapabilities;

//  Forward declaration of class tt__SearchCapabilities.
class tt__SearchCapabilities;

//  Forward declaration of class tt__ReplayCapabilities.
class tt__ReplayCapabilities;

//  Forward declaration of class tt__ReceiverCapabilities.
class tt__ReceiverCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceCapabilities.
class tt__AnalyticsDeviceCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceExtension.
class tt__AnalyticsDeviceExtension;

//  Forward declaration of class tt__SystemLog.
class tt__SystemLog;

//  Forward declaration of class tt__SupportInformation.
class tt__SupportInformation;

//  Forward declaration of class tt__BinaryData.
class tt__BinaryData;

//  Forward declaration of class tt__AttachmentData.
class tt__AttachmentData;

//  Forward declaration of class tt__BackupFile.
class tt__BackupFile;

//  Forward declaration of class tt__SystemLogUriList.
class tt__SystemLogUriList;

//  Forward declaration of class tt__SystemLogUri.
class tt__SystemLogUri;

//  Forward declaration of class tt__SystemDateTime.
class tt__SystemDateTime;

//  Forward declaration of class tt__SystemDateTimeExtension.
class tt__SystemDateTimeExtension;

//  Forward declaration of class tt__DateTime.
class tt__DateTime;

//  Forward declaration of class tt__Date.
class tt__Date;

//  Forward declaration of class tt__Time.
class tt__Time;

//  Forward declaration of class tt__TimeZone.
class tt__TimeZone;

//  Forward declaration of class tt__RemoteUser.
class tt__RemoteUser;

//  Forward declaration of class tt__User.
class tt__User;

//  Forward declaration of class tt__UserExtension.
class tt__UserExtension;

//  Forward declaration of class tt__CertificateGenerationParameters.
class tt__CertificateGenerationParameters;

//  Forward declaration of class tt__CertificateGenerationParametersExtension.
class tt__CertificateGenerationParametersExtension;

//  Forward declaration of class tt__Certificate.
class tt__Certificate;

//  Forward declaration of class tt__CertificateStatus.
class tt__CertificateStatus;

//  Forward declaration of class tt__CertificateWithPrivateKey.
class tt__CertificateWithPrivateKey;

//  Forward declaration of class tt__CertificateInformation.
class tt__CertificateInformation;

//  Forward declaration of class tt__CertificateUsage.
class tt__CertificateUsage;

//  Forward declaration of class tt__CertificateInformationExtension.
class tt__CertificateInformationExtension;

//  Forward declaration of class tt__Dot1XConfiguration.
class tt__Dot1XConfiguration;

//  Forward declaration of class tt__Dot1XConfigurationExtension.
class tt__Dot1XConfigurationExtension;

//  Forward declaration of class tt__EAPMethodConfiguration.
class tt__EAPMethodConfiguration;

//  Forward declaration of class tt__EapMethodExtension.
class tt__EapMethodExtension;

//  Forward declaration of class tt__TLSConfiguration.
class tt__TLSConfiguration;

//  Forward declaration of class tt__GenericEapPwdConfigurationExtension.
class tt__GenericEapPwdConfigurationExtension;

//  Forward declaration of class tt__RelayOutputSettings.
class tt__RelayOutputSettings;

//  Forward declaration of class tt__RelayOutput.
class tt__RelayOutput;

//  Forward declaration of class tt__DigitalInput.
class tt__DigitalInput;

//  Forward declaration of class tt__PTZNode.
class tt__PTZNode;

//  Forward declaration of class tt__PTZNodeExtension.
class tt__PTZNodeExtension;

//  Forward declaration of class tt__PTZNodeExtension2.
class tt__PTZNodeExtension2;

//  Forward declaration of class tt__PTZPresetTourSupported.
class tt__PTZPresetTourSupported;

//  Forward declaration of class tt__PTZPresetTourSupportedExtension.
class tt__PTZPresetTourSupportedExtension;

//  Forward declaration of class tt__PTZConfiguration.
class tt__PTZConfiguration;

//  Forward declaration of class tt__PTZConfigurationExtension.
class tt__PTZConfigurationExtension;

//  Forward declaration of class tt__PTZConfigurationExtension2.
class tt__PTZConfigurationExtension2;

//  Forward declaration of class tt__PTControlDirection.
class tt__PTControlDirection;

//  Forward declaration of class tt__PTControlDirectionExtension.
class tt__PTControlDirectionExtension;

//  Forward declaration of class tt__EFlip.
class tt__EFlip;

//  Forward declaration of class tt__Reverse.
class tt__Reverse;

//  Forward declaration of class tt__PTZConfigurationOptions.
class tt__PTZConfigurationOptions;

//  Forward declaration of class tt__PTZConfigurationOptions2.
class tt__PTZConfigurationOptions2;

//  Forward declaration of class tt__PTControlDirectionOptions.
class tt__PTControlDirectionOptions;

//  Forward declaration of class tt__PTControlDirectionOptionsExtension.
class tt__PTControlDirectionOptionsExtension;

//  Forward declaration of class tt__EFlipOptions.
class tt__EFlipOptions;

//  Forward declaration of class tt__EFlipOptionsExtension.
class tt__EFlipOptionsExtension;

//  Forward declaration of class tt__ReverseOptions.
class tt__ReverseOptions;

//  Forward declaration of class tt__ReverseOptionsExtension.
class tt__ReverseOptionsExtension;

//  Forward declaration of class tt__PanTiltLimits.
class tt__PanTiltLimits;

//  Forward declaration of class tt__ZoomLimits.
class tt__ZoomLimits;

//  Forward declaration of class tt__PTZSpaces.
class tt__PTZSpaces;

//  Forward declaration of class tt__PTZSpacesExtension.
class tt__PTZSpacesExtension;

//  Forward declaration of class tt__Space2DDescription.
class tt__Space2DDescription;

//  Forward declaration of class tt__Space1DDescription.
class tt__Space1DDescription;

//  Forward declaration of class tt__Vector2D.
class tt__Vector2D;

//  Forward declaration of class tt__Vector1D.
class tt__Vector1D;

//  Forward declaration of class tt__PTZVector.
class tt__PTZVector;

//  Forward declaration of class tt__PTZSpeed.
class tt__PTZSpeed;

//  Forward declaration of class tt__PTZStatus.
class tt__PTZStatus;

//  Forward declaration of class tt__PTZPreset.
class tt__PTZPreset;

//  Forward declaration of class tt__PTZMoveStatus.
class tt__PTZMoveStatus;

//  Forward declaration of class tt__PresetTour.
class tt__PresetTour;

//  Forward declaration of class tt__PTZPresetTourExtension.
class tt__PTZPresetTourExtension;

//  Forward declaration of class tt__PTZPresetTourSpot.
class tt__PTZPresetTourSpot;

//  Forward declaration of class tt__PTZPresetTourSpotExtension.
class tt__PTZPresetTourSpotExtension;

//  Forward declaration of class tt__PTZPresetTourPresetDetail.
class tt__PTZPresetTourPresetDetail;

//  Forward declaration of class tt__PTZPresetTourTypeExtension.
class tt__PTZPresetTourTypeExtension;

//  Forward declaration of class tt__PTZPresetTourStatus.
class tt__PTZPresetTourStatus;

//  Forward declaration of class tt__PTZPresetTourStatusExtension.
class tt__PTZPresetTourStatusExtension;

//  Forward declaration of class tt__PTZPresetTourStartingCondition.
class tt__PTZPresetTourStartingCondition;

//  Forward declaration of class tt__PTZPresetTourStartingConditionExtension.
class tt__PTZPresetTourStartingConditionExtension;

//  Forward declaration of class tt__PTZPresetTourOptions.
class tt__PTZPresetTourOptions;

//  Forward declaration of class tt__PTZPresetTourSpotOptions.
class tt__PTZPresetTourSpotOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptions.
class tt__PTZPresetTourPresetDetailOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptionsExtension.
class tt__PTZPresetTourPresetDetailOptionsExtension;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptions.
class tt__PTZPresetTourStartingConditionOptions;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptionsExtension.
class tt__PTZPresetTourStartingConditionOptionsExtension;

//  Forward declaration of class tt__ImagingStatus.
class tt__ImagingStatus;

//  Forward declaration of class tt__FocusStatus.
class tt__FocusStatus;

//  Forward declaration of class tt__FocusConfiguration.
class tt__FocusConfiguration;

//  Forward declaration of class tt__ImagingSettings.
class tt__ImagingSettings;

//  Forward declaration of class tt__ImagingSettingsExtension.
class tt__ImagingSettingsExtension;

//  Forward declaration of class tt__Exposure.
class tt__Exposure;

//  Forward declaration of class tt__WideDynamicRange.
class tt__WideDynamicRange;

//  Forward declaration of class tt__BacklightCompensation.
class tt__BacklightCompensation;

//  Forward declaration of class tt__ImagingOptions.
class tt__ImagingOptions;

//  Forward declaration of class tt__WideDynamicRangeOptions.
class tt__WideDynamicRangeOptions;

//  Forward declaration of class tt__BacklightCompensationOptions.
class tt__BacklightCompensationOptions;

//  Forward declaration of class tt__FocusOptions.
class tt__FocusOptions;

//  Forward declaration of class tt__ExposureOptions.
class tt__ExposureOptions;

//  Forward declaration of class tt__WhiteBalanceOptions.
class tt__WhiteBalanceOptions;

//  Forward declaration of class tt__FocusMove.
class tt__FocusMove;

//  Forward declaration of class tt__AbsoluteFocus.
class tt__AbsoluteFocus;

//  Forward declaration of class tt__RelativeFocus.
class tt__RelativeFocus;

//  Forward declaration of class tt__ContinuousFocus.
class tt__ContinuousFocus;

//  Forward declaration of class tt__MoveOptions.
class tt__MoveOptions;

//  Forward declaration of class tt__AbsoluteFocusOptions.
class tt__AbsoluteFocusOptions;

//  Forward declaration of class tt__RelativeFocusOptions.
class tt__RelativeFocusOptions;

//  Forward declaration of class tt__ContinuousFocusOptions.
class tt__ContinuousFocusOptions;

//  Forward declaration of class tt__WhiteBalance.
class tt__WhiteBalance;

//  Forward declaration of class tt__ImagingStatus20.
class tt__ImagingStatus20;

//  Forward declaration of class tt__ImagingStatus20Extension.
class tt__ImagingStatus20Extension;

//  Forward declaration of class tt__FocusStatus20.
class tt__FocusStatus20;

//  Forward declaration of class tt__FocusStatus20Extension.
class tt__FocusStatus20Extension;

//  Forward declaration of class tt__ImagingSettings20.
class tt__ImagingSettings20;

//  Forward declaration of class tt__ImagingSettingsExtension20.
class tt__ImagingSettingsExtension20;

//  Forward declaration of class tt__ImagingSettingsExtension202.
class tt__ImagingSettingsExtension202;

//  Forward declaration of class tt__ImageStabilization.
class tt__ImageStabilization;

//  Forward declaration of class tt__ImageStabilizationExtension.
class tt__ImageStabilizationExtension;

//  Forward declaration of class tt__WideDynamicRange20.
class tt__WideDynamicRange20;

//  Forward declaration of class tt__BacklightCompensation20.
class tt__BacklightCompensation20;

//  Forward declaration of class tt__Exposure20.
class tt__Exposure20;

//  Forward declaration of class tt__ImagingOptions20.
class tt__ImagingOptions20;

//  Forward declaration of class tt__ImagingOptions20Extension.
class tt__ImagingOptions20Extension;

//  Forward declaration of class tt__ImagingOptions20Extension2.
class tt__ImagingOptions20Extension2;

//  Forward declaration of class tt__ImageStabilizationOptions.
class tt__ImageStabilizationOptions;

//  Forward declaration of class tt__ImageStabilizationOptionsExtension.
class tt__ImageStabilizationOptionsExtension;

//  Forward declaration of class tt__WideDynamicRangeOptions20.
class tt__WideDynamicRangeOptions20;

//  Forward declaration of class tt__BacklightCompensationOptions20.
class tt__BacklightCompensationOptions20;

//  Forward declaration of class tt__ExposureOptions20.
class tt__ExposureOptions20;

//  Forward declaration of class tt__MoveOptions20.
class tt__MoveOptions20;

//  Forward declaration of class tt__RelativeFocusOptions20.
class tt__RelativeFocusOptions20;

//  Forward declaration of class tt__WhiteBalance20.
class tt__WhiteBalance20;

//  Forward declaration of class tt__WhiteBalance20Extension.
class tt__WhiteBalance20Extension;

//  Forward declaration of class tt__FocusConfiguration20.
class tt__FocusConfiguration20;

//  Forward declaration of class tt__FocusConfiguration20Extension.
class tt__FocusConfiguration20Extension;

//  Forward declaration of class tt__WhiteBalanceOptions20.
class tt__WhiteBalanceOptions20;

//  Forward declaration of class tt__WhiteBalanceOptions20Extension.
class tt__WhiteBalanceOptions20Extension;

//  Forward declaration of class tt__FocusOptions20.
class tt__FocusOptions20;

//  Forward declaration of class tt__FocusOptions20Extension.
class tt__FocusOptions20Extension;

//  Forward declaration of class tt__MessageExtension.
class tt__MessageExtension;

//  Forward declaration of class tt__ItemList.
class tt__ItemList;

//  Forward declaration of class tt__ItemListExtension.
class tt__ItemListExtension;

//  Forward declaration of class tt__MessageDescription.
class tt__MessageDescription;

//  Forward declaration of class tt__MessageDescriptionExtension.
class tt__MessageDescriptionExtension;

//  Forward declaration of class tt__ItemListDescription.
class tt__ItemListDescription;

//  Forward declaration of class tt__ItemListDescriptionExtension.
class tt__ItemListDescriptionExtension;

//  Forward declaration of class tt__Vector.
class tt__Vector;

//  Forward declaration of class tt__Rectangle.
class tt__Rectangle;

//  Forward declaration of class tt__Polygon.
class tt__Polygon;

//  Forward declaration of class tt__Polyline.
class tt__Polyline;

//  Forward declaration of class tt__Color.
class tt__Color;

//  Forward declaration of class tt__ColorCovariance.
class tt__ColorCovariance;

//  Forward declaration of class tt__Appearance.
class tt__Appearance;

//  Forward declaration of class tt__AppearanceExtension.
class tt__AppearanceExtension;

//  Forward declaration of class tt__ShapeDescriptor.
class tt__ShapeDescriptor;

//  Forward declaration of class tt__ShapeDescriptorExtension.
class tt__ShapeDescriptorExtension;

//  Forward declaration of class tt__ColorDescriptor.
class tt__ColorDescriptor;

//  Forward declaration of class tt__ColorDescriptorExtension.
class tt__ColorDescriptorExtension;

//  Forward declaration of class tt__ClassDescriptor.
class tt__ClassDescriptor;

//  Forward declaration of class tt__ClassDescriptorExtension.
class tt__ClassDescriptorExtension;

//  Forward declaration of class tt__ClassDescriptorExtension2.
class tt__ClassDescriptorExtension2;

//  Forward declaration of class tt__OtherType.
class tt__OtherType;

//  Forward declaration of class tt__Object.
class tt__Object;

//  Forward declaration of class tt__ObjectExtension.
class tt__ObjectExtension;

//  Forward declaration of class tt__Transformation.
class tt__Transformation;

//  Forward declaration of class tt__TransformationExtension.
class tt__TransformationExtension;

//  Forward declaration of class tt__Frame.
class tt__Frame;

//  Forward declaration of class tt__FrameExtension.
class tt__FrameExtension;

//  Forward declaration of class tt__FrameExtension2.
class tt__FrameExtension2;

//  Forward declaration of class tt__Merge.
class tt__Merge;

//  Forward declaration of class tt__Split.
class tt__Split;

//  Forward declaration of class tt__Rename.
class tt__Rename;

//  Forward declaration of class tt__ObjectId.
class tt__ObjectId;

//  Forward declaration of class tt__Behaviour.
class tt__Behaviour;

//  Forward declaration of class tt__BehaviourExtension.
class tt__BehaviourExtension;

//  Forward declaration of class tt__ObjectTree.
class tt__ObjectTree;

//  Forward declaration of class tt__ObjectTreeExtension.
class tt__ObjectTreeExtension;

//  Forward declaration of class tt__MotionInCells.
class tt__MotionInCells;

//  Forward declaration of class tt__AnalyticsEngineConfiguration.
class tt__AnalyticsEngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineConfigurationExtension.
class tt__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class tt__RuleEngineConfiguration.
class tt__RuleEngineConfiguration;

//  Forward declaration of class tt__RuleEngineConfigurationExtension.
class tt__RuleEngineConfigurationExtension;

//  Forward declaration of class tt__Config.
class tt__Config;

//  Forward declaration of class tt__ConfigDescription.
class tt__ConfigDescription;

//  Forward declaration of class tt__ConfigDescriptionExtension.
class tt__ConfigDescriptionExtension;

//  Forward declaration of class tt__SupportedRules.
class tt__SupportedRules;

//  Forward declaration of class tt__SupportedRulesExtension.
class tt__SupportedRulesExtension;

//  Forward declaration of class tt__SupportedAnalyticsModules.
class tt__SupportedAnalyticsModules;

//  Forward declaration of class tt__SupportedAnalyticsModulesExtension.
class tt__SupportedAnalyticsModulesExtension;

//  Forward declaration of class tt__PolygonConfiguration.
class tt__PolygonConfiguration;

//  Forward declaration of class tt__PolylineArray.
class tt__PolylineArray;

//  Forward declaration of class tt__PolylineArrayExtension.
class tt__PolylineArrayExtension;

//  Forward declaration of class tt__PolylineArrayConfiguration.
class tt__PolylineArrayConfiguration;

//  Forward declaration of class tt__MotionExpression.
class tt__MotionExpression;

//  Forward declaration of class tt__MotionExpressionConfiguration.
class tt__MotionExpressionConfiguration;

//  Forward declaration of class tt__CellLayout.
class tt__CellLayout;

//  Forward declaration of class tt__MetadataStream.
class tt__MetadataStream;

//  Forward declaration of class tt__MetadataStreamExtension.
class tt__MetadataStreamExtension;

//  Forward declaration of class tt__VideoAnalyticsStream.
class tt__VideoAnalyticsStream;

//  Forward declaration of class tt__VideoAnalyticsStreamExtension.
class tt__VideoAnalyticsStreamExtension;

//  Forward declaration of class tt__PTZStream.
class tt__PTZStream;

//  Forward declaration of class tt__PTZStreamExtension.
class tt__PTZStreamExtension;

//  Forward declaration of class tt__EventStream.
class tt__EventStream;

//  Forward declaration of class tt__EventStreamExtension.
class tt__EventStreamExtension;

//  Forward declaration of class tt__PaneConfiguration.
class tt__PaneConfiguration;

//  Forward declaration of class tt__PaneLayout.
class tt__PaneLayout;

//  Forward declaration of class tt__Layout.
class tt__Layout;

//  Forward declaration of class tt__LayoutExtension.
class tt__LayoutExtension;

//  Forward declaration of class tt__CodingCapabilities.
class tt__CodingCapabilities;

//  Forward declaration of class tt__LayoutOptions.
class tt__LayoutOptions;

//  Forward declaration of class tt__LayoutOptionsExtension.
class tt__LayoutOptionsExtension;

//  Forward declaration of class tt__PaneLayoutOptions.
class tt__PaneLayoutOptions;

//  Forward declaration of class tt__PaneOptionExtension.
class tt__PaneOptionExtension;

//  Forward declaration of class tt__Receiver.
class tt__Receiver;

//  Forward declaration of class tt__ReceiverConfiguration.
class tt__ReceiverConfiguration;

//  Forward declaration of class tt__ReceiverStateInformation.
class tt__ReceiverStateInformation;

//  Forward declaration of class tt__SourceReference.
class tt__SourceReference;

//  Forward declaration of class tt__DateTimeRange.
class tt__DateTimeRange;

//  Forward declaration of class tt__RecordingSummary.
class tt__RecordingSummary;

//  Forward declaration of class tt__SearchScope.
class tt__SearchScope;

//  Forward declaration of class tt__SearchScopeExtension.
class tt__SearchScopeExtension;

//  Forward declaration of class tt__EventFilter.
class tt__EventFilter;

//  Forward declaration of class tt__PTZPositionFilter.
class tt__PTZPositionFilter;

//  Forward declaration of class tt__MetadataFilter.
class tt__MetadataFilter;

//  Forward declaration of class tt__FindRecordingResultList.
class tt__FindRecordingResultList;

//  Forward declaration of class tt__FindEventResultList.
class tt__FindEventResultList;

//  Forward declaration of class tt__FindEventResult.
class tt__FindEventResult;

//  Forward declaration of class tt__FindPTZPositionResultList.
class tt__FindPTZPositionResultList;

//  Forward declaration of class tt__FindPTZPositionResult.
class tt__FindPTZPositionResult;

//  Forward declaration of class tt__FindMetadataResultList.
class tt__FindMetadataResultList;

//  Forward declaration of class tt__FindMetadataResult.
class tt__FindMetadataResult;

//  Forward declaration of class tt__RecordingInformation.
class tt__RecordingInformation;

//  Forward declaration of class tt__RecordingSourceInformation.
class tt__RecordingSourceInformation;

//  Forward declaration of class tt__TrackInformation.
class tt__TrackInformation;

//  Forward declaration of class tt__MediaAttributes.
class tt__MediaAttributes;

//  Forward declaration of class tt__TrackAttributes.
class tt__TrackAttributes;

//  Forward declaration of class tt__TrackAttributesExtension.
class tt__TrackAttributesExtension;

//  Forward declaration of class tt__VideoAttributes.
class tt__VideoAttributes;

//  Forward declaration of class tt__AudioAttributes.
class tt__AudioAttributes;

//  Forward declaration of class tt__MetadataAttributes.
class tt__MetadataAttributes;

//  Forward declaration of class tt__RecordingConfiguration.
class tt__RecordingConfiguration;

//  Forward declaration of class tt__TrackConfiguration.
class tt__TrackConfiguration;

//  Forward declaration of class tt__GetRecordingsResponseItem.
class tt__GetRecordingsResponseItem;

//  Forward declaration of class tt__GetTracksResponseList.
class tt__GetTracksResponseList;

//  Forward declaration of class tt__GetTracksResponseItem.
class tt__GetTracksResponseItem;

//  Forward declaration of class tt__RecordingJobConfiguration.
class tt__RecordingJobConfiguration;

//  Forward declaration of class tt__RecordingJobConfigurationExtension.
class tt__RecordingJobConfigurationExtension;

//  Forward declaration of class tt__RecordingJobSource.
class tt__RecordingJobSource;

//  Forward declaration of class tt__RecordingJobSourceExtension.
class tt__RecordingJobSourceExtension;

//  Forward declaration of class tt__RecordingJobTrack.
class tt__RecordingJobTrack;

//  Forward declaration of class tt__RecordingJobStateInformation.
class tt__RecordingJobStateInformation;

//  Forward declaration of class tt__RecordingJobStateInformationExtension.
class tt__RecordingJobStateInformationExtension;

//  Forward declaration of class tt__RecordingJobStateSource.
class tt__RecordingJobStateSource;

//  Forward declaration of class tt__RecordingJobStateTracks.
class tt__RecordingJobStateTracks;

//  Forward declaration of class tt__RecordingJobStateTrack.
class tt__RecordingJobStateTrack;

//  Forward declaration of class tt__GetRecordingJobsResponseItem.
class tt__GetRecordingJobsResponseItem;

//  Forward declaration of class tt__ReplayConfiguration.
class tt__ReplayConfiguration;

//  Forward declaration of class tt__AnalyticsEngine.
class tt__AnalyticsEngine;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfiguration.
class tt__AnalyticsDeviceEngineConfiguration;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfigurationExtension.
class tt__AnalyticsDeviceEngineConfigurationExtension;

//  Forward declaration of class tt__EngineConfiguration.
class tt__EngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineInputInfo.
class tt__AnalyticsEngineInputInfo;

//  Forward declaration of class tt__AnalyticsEngineInputInfoExtension.
class tt__AnalyticsEngineInputInfoExtension;

//  Forward declaration of class tt__AnalyticsEngineInput.
class tt__AnalyticsEngineInput;

//  Forward declaration of class tt__SourceIdentification.
class tt__SourceIdentification;

//  Forward declaration of class tt__SourceIdentificationExtension.
class tt__SourceIdentificationExtension;

//  Forward declaration of class tt__MetadataInput.
class tt__MetadataInput;

//  Forward declaration of class tt__MetadataInputExtension.
class tt__MetadataInputExtension;

//  Forward declaration of class tt__AnalyticsEngineControl.
class tt__AnalyticsEngineControl;

//  Forward declaration of class tt__AnalyticsStateInformation.
class tt__AnalyticsStateInformation;

//  Forward declaration of class tt__AnalyticsState.
class tt__AnalyticsState;

//  Forward declaration of class tt__ActionEngineEventPayload.
class tt__ActionEngineEventPayload;

//  Forward declaration of class tt__ActionEngineEventPayloadExtension.
class tt__ActionEngineEventPayloadExtension;

//  Forward declaration of class _tt__Message.
class _tt__Message;

//  Forward declaration of class xmime5__base64Binary.
class xmime5__base64Binary;

//  Forward declaration of class xmime5__hexBinary.
class xmime5__hexBinary;

//  Forward declaration of class wsnt__QueryExpressionType.
class wsnt__QueryExpressionType;

//  Forward declaration of class wsnt__TopicExpressionType.
class wsnt__TopicExpressionType;

//  Forward declaration of class wsnt__FilterType.
class wsnt__FilterType;

//  Forward declaration of class wsnt__SubscriptionPolicyType.
class wsnt__SubscriptionPolicyType;

//  Forward declaration of class wsnt__NotificationMessageHolderType.
class wsnt__NotificationMessageHolderType;

//  Forward declaration of class wsnt__SubscribeCreationFailedFaultType.
class wsnt__SubscribeCreationFailedFaultType;

//  Forward declaration of class wsnt__InvalidFilterFaultType.
class wsnt__InvalidFilterFaultType;

//  Forward declaration of class wsnt__TopicExpressionDialectUnknownFaultType.
class wsnt__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class wsnt__InvalidTopicExpressionFaultType.
class wsnt__InvalidTopicExpressionFaultType;

//  Forward declaration of class wsnt__TopicNotSupportedFaultType.
class wsnt__TopicNotSupportedFaultType;

//  Forward declaration of class wsnt__MultipleTopicsSpecifiedFaultType.
class wsnt__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class wsnt__InvalidProducerPropertiesExpressionFaultType.
class wsnt__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class wsnt__InvalidMessageContentExpressionFaultType.
class wsnt__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class wsnt__UnrecognizedPolicyRequestFaultType.
class wsnt__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class wsnt__UnsupportedPolicyRequestFaultType.
class wsnt__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class wsnt__NotifyMessageNotSupportedFaultType.
class wsnt__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class wsnt__UnacceptableInitialTerminationTimeFaultType.
class wsnt__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class wsnt__NoCurrentMessageOnTopicFaultType.
class wsnt__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class wsnt__UnableToGetMessagesFaultType.
class wsnt__UnableToGetMessagesFaultType;

//  Forward declaration of class wsnt__UnableToDestroyPullPointFaultType.
class wsnt__UnableToDestroyPullPointFaultType;

//  Forward declaration of class wsnt__UnableToCreatePullPointFaultType.
class wsnt__UnableToCreatePullPointFaultType;

//  Forward declaration of class wsnt__UnacceptableTerminationTimeFaultType.
class wsnt__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class wsnt__UnableToDestroySubscriptionFaultType.
class wsnt__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class wsnt__PauseFailedFaultType.
class wsnt__PauseFailedFaultType;

//  Forward declaration of class wsnt__ResumeFailedFaultType.
class wsnt__ResumeFailedFaultType;

//  Forward declaration of class _wsnt__NotificationProducerRP.
class _wsnt__NotificationProducerRP;

//  Forward declaration of class _wsnt__SubscriptionManagerRP.
class _wsnt__SubscriptionManagerRP;

//  Forward declaration of class _wsnt__Notify.
class _wsnt__Notify;

//  Forward declaration of class _wsnt__UseRaw.
class _wsnt__UseRaw;

//  Forward declaration of class _wsnt__Subscribe.
class _wsnt__Subscribe;

//  Forward declaration of class _wsnt__SubscribeResponse.
class _wsnt__SubscribeResponse;

//  Forward declaration of class _wsnt__GetCurrentMessage.
class _wsnt__GetCurrentMessage;

//  Forward declaration of class _wsnt__GetCurrentMessageResponse.
class _wsnt__GetCurrentMessageResponse;

//  Forward declaration of class _wsnt__GetMessages.
class _wsnt__GetMessages;

//  Forward declaration of class _wsnt__GetMessagesResponse.
class _wsnt__GetMessagesResponse;

//  Forward declaration of class _wsnt__DestroyPullPoint.
class _wsnt__DestroyPullPoint;

//  Forward declaration of class _wsnt__DestroyPullPointResponse.
class _wsnt__DestroyPullPointResponse;

//  Forward declaration of class _wsnt__CreatePullPoint.
class _wsnt__CreatePullPoint;

//  Forward declaration of class _wsnt__CreatePullPointResponse.
class _wsnt__CreatePullPointResponse;

//  Forward declaration of class _wsnt__Renew.
class _wsnt__Renew;

//  Forward declaration of class _wsnt__RenewResponse.
class _wsnt__RenewResponse;

//  Forward declaration of class _wsnt__Unsubscribe.
class _wsnt__Unsubscribe;

//  Forward declaration of class _wsnt__UnsubscribeResponse.
class _wsnt__UnsubscribeResponse;

//  Forward declaration of class _wsnt__PauseSubscription.
class _wsnt__PauseSubscription;

//  Forward declaration of class _wsnt__PauseSubscriptionResponse.
class _wsnt__PauseSubscriptionResponse;

//  Forward declaration of class _wsnt__ResumeSubscription.
class _wsnt__ResumeSubscription;

//  Forward declaration of class _wsnt__ResumeSubscriptionResponse.
class _wsnt__ResumeSubscriptionResponse;

/// Imported complexType "http://www.w3.org/2004/08/xop/include":Include from typemap typemap_all.dat.
#import "xop.h"

//  Forward declaration of class wsa5__EndpointReferenceType.
class wsa5__EndpointReferenceType;

//  Forward declaration of class wsa5__ReferenceParametersType.
class wsa5__ReferenceParametersType;

//  Forward declaration of class wsa5__MetadataType.
class wsa5__MetadataType;

//  Forward declaration of class wsa5__RelatesToType.
class wsa5__RelatesToType;

//  Forward declaration of class wsa5__AttributedURIType.
class wsa5__AttributedURIType;

//  Forward declaration of class wsa5__AttributedUnsignedLongType.
class wsa5__AttributedUnsignedLongType;

//  Forward declaration of class wsa5__AttributedQNameType.
class wsa5__AttributedQNameType;

//  Forward declaration of class wsa5__AttributedAnyType.
class wsa5__AttributedAnyType;

//  Forward declaration of class wsa5__ProblemActionType.
class wsa5__ProblemActionType;

//  Forward declaration of class wsbf__BaseFaultType.
class wsbf__BaseFaultType;

//  Forward declaration of class wstop__Documentation.
class wstop__Documentation;

//  Forward declaration of class wstop__ExtensibleDocumented.
class wstop__ExtensibleDocumented;

//  Forward declaration of class wstop__QueryExpressionType.
class wstop__QueryExpressionType;

//  Forward declaration of class wstop__TopicNamespaceType.
class wstop__TopicNamespaceType;

//  Forward declaration of class wstop__TopicType.
class wstop__TopicType;

//  Forward declaration of class wstop__TopicSetType.
class wstop__TopicSetType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
typedef char* tt__IntAttrList;

/// "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
typedef char* tt__FloatAttrList;

/// "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
typedef char* tt__StringAttrList;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef char* wsnt__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// union of values "tns:RelationshipType xs:anyURI"
typedef char* wsa5__RelationshipTypeOpenEnum;

/// union of values "tns:FaultCodesType xs:QName"
typedef char* wsa5__FaultCodesOpenEnumType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of xs:string.
/// @brief Unique identifier for a physical or logical resource. Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef char* tt__ReferenceToken:64;

/// "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of xs:string.
/// @brief User readable name. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef char* tt__Name:64;

/// "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RotateMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RotateMode
{
	tt__RotateMode__OFF,	///< xs:string value="OFF"
	tt__RotateMode__ON,	///< xs:string value="ON"
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__VideoEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Mpeg4Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__H264Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__AudioEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__StreamType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__TransportProtocol' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ScopeDefinition' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DiscoveryMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of xs:integer.
/// Value range is [0..31]
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Duplex' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of xs:int.
/// @brief For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
typedef int tt__IANA_IfTypes;

/// "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPv6DHCPConfiguration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__NetworkProtocolType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__NetworkHostType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of xs:token.
typedef xsd__token tt__IPv4Address;

/// "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of xs:token.
typedef xsd__token tt__IPv6Address;

/// "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of xs:token.
typedef xsd__token tt__HwAddress;

/// "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of xs:token.
typedef xsd__token tt__DNSName;

/// "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of xs:token.
typedef xsd__token tt__Domain;

/// "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPAddressFilterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DynamicDNSType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of xs:hexBinary.
/// Length of this string is within 1..32 characters
typedef xsd__hexBinary tt__Dot11SSIDType 1:32;

/// "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11StationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11SecurityMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11Cipher' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of xs:hexBinary.
/// Length of this string is exactly 32 characters
typedef xsd__hexBinary tt__Dot11PSK;

/// "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of xs:string.
/// Content pattern is "[ -~]{8,63}" (note: not automatically enforced)
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11SignalStrength' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11AuthAndMangementSuite' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__CapabilityCategory' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available system log modes.
/// Note: enum values are prefixed with 'tt__SystemLogType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SystemLogType
{
/// @brief Indicates that a system log is requested.
	tt__SystemLogType__System,	///< xs:string value="System"
/// @brief Indicates that a access log is requested.
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available factory default modes.
/// Note: enum values are prefixed with 'tt__FactoryDefaultType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__FactoryDefaultType
{
/// @brief Indicates that a hard factory default is requested.
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// @brief Indicates that a soft factory default is requested.
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__SetDateTimeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SetDateTimeType
{
/// @brief Indicates that the date and time are set manually.
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// @brief Indicates that the date and time are set through NTP
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__UserLevel' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayLogicalState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__EFlipMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ReverseMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of xs:string.
/// Length of this string is within 0..128 characters
typedef char* tt__AuxiliaryData:128;

/// "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__MoveStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourDirection' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__AutoFocusMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__WideDynamicMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available backlight compenstation modes.
/// Note: enum values are prefixed with 'tt__BacklightCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__BacklightCompensationMode
{
/// @brief Backlight compensation is disabled.
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// @brief Backlight compensation is enabled.
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ExposurePriority' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ExposureMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Enabled' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__WhiteBalanceMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IrCutFilterMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ImageStabilizationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of xs:anyURI.
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PropertyOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Direction' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ClassType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ClassType
{
	tt__ClassType__Animal,	///< xs:string value="Animal"
	tt__ClassType__Face,	///< xs:string value="Face"
	tt__ClassType__Human,	///< xs:string value="Human"
	tt__ClassType__Vehical,	///< xs:string value="Vehical"
	tt__ClassType__Other,	///< xs:string value="Other"
};

/// "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of xs:string.
/// @brief Specifies a receiver connection mode.
/// Note: enum values are prefixed with 'tt__ReceiverMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverMode
{
/// @brief The receiver connects on demand, as required by consumers of the media streams.
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// @brief The receiver attempts to maintain a persistent connection to the configured endpoint.
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// @brief The receiver does not attempt to connect.
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// @brief This case should never happen.
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of xs:string.
/// @brief Specifies the current connection state of the receiver.
/// Note: enum values are prefixed with 'tt__ReceiverState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverState
{
/// @brief The receiver is not connected.
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// @brief The receiver is attempting to connect.
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// @brief The receiver is connected.
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// @brief This case should never happen.
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of xs:string.
typedef char* tt__Description;

/// "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of xs:string.
typedef char* tt__XPathExpression;

/// "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__SearchState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SearchState
{
/// @brief The search is queued and not yet started.
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// @brief The search is underway and not yet completed.
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// @brief The search has been completed and no new results will be found.
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// @brief The state of the search is unknown. (This is not a valid response from GetSearchState.)
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RecordingStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// @brief This case should never happen.
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__TrackType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// @brief Placeholder for future extension.
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of xs:string.
typedef char* tt__RecordingJobMode;

/// "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of xs:string.
typedef char* tt__RecordingJobState;

/// "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ModeOfOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// @brief This case should never happen.
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/2005/05/xmlmime":contentType is a simpleType restriction of xs:string.
/// Length of this string is within 3.. characters

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/2005/08/addressing":RelationshipType is a simpleType restriction of xs:anyURI.
/// Note: enum values are prefixed with 'wsa5__RelationshipType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsa5__RelationshipType
{
	wsa5__RelationshipType__http___x002f_x002fwww_x002ew3_x002eorg_x002f2005_x002f08_x002faddressing_x002freply,	///< xs:anyURI value="http://www.w3.org/2005/08/addressing/reply"
};

/// "http://www.w3.org/2005/08/addressing":FaultCodesType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'wsa5__FaultCodesType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsa5__FaultCodesType
{
	wsa5__FaultCodesType__wsa5__InvalidAddressingHeader,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidAddressingHeader"
	wsa5__FaultCodesType__wsa5__InvalidAddress,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidAddress"
	wsa5__FaultCodesType__wsa5__InvalidEPR,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidEPR"
	wsa5__FaultCodesType__wsa5__InvalidCardinality,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidCardinality"
	wsa5__FaultCodesType__wsa5__MissingAddressInEPR,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":MissingAddressInEPR"
	wsa5__FaultCodesType__wsa5__DuplicateMessageID,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":DuplicateMessageID"
	wsa5__FaultCodesType__wsa5__ActionMismatch,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":ActionMismatch"
	wsa5__FaultCodesType__wsa5__MessageAddressingHeaderRequired,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":MessageAddressingHeaderRequired"
	wsa5__FaultCodesType__wsa5__DestinationUnreachable,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":DestinationUnreachable"
	wsa5__FaultCodesType__wsa5__ActionNotSupported,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":ActionNotSupported"
	wsa5__FaultCodesType__wsa5__EndpointUnavailable,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":EndpointUnavailable"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of xs:token.
/// @brief TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*" (note: not automatically enforced)
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of xs:token.
/// @brief The pattern allows strings matching the following EBNF: ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*" (note: not automatically enforced)
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of xs:QName.
/// @brief The pattern allows strings matching the following EBNF: RootTopic ::= QName
typedef _QName wstop__SimpleTopicExpression;

/// "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__ReceiverReference;

/// "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__RecordingReference;

/// "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__TrackReference;

/// "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__JobToken;

/// "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__RecordingJobReference;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
class tptz__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// @brief Indicates whether or not EFlip is supported.
/// Attribute EFlip of type xs:boolean.
   @bool*                                EFlip                          0;	///< Optional attribute.
/// @brief Indicates whether or not reversing of PT control direction is supported.
/// Attribute Reverse of type xs:boolean.
   @bool*                                Reverse                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
class _tptz__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the PTZ service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
class _tptz__GetNodes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
class _tptz__GetNodesResponse
{ public:
/// @brief A list of the existing PTZ Nodes on the device.
/// Size of array of tt__PTZNode* is 0..unbounded
   $int                                  __sizePTZNode                  0;
/// Pointer to array tt__PTZNode* of length 0..unbounded
    tt__PTZNode*                        *PTZNode                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
class _tptz__GetNode
{ public:
/// @brief Token of the requested PTZNode.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
class _tptz__GetNodeResponse
{ public:
/// @brief A requested PTZNode.
/// Element PTZNode of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
class _tptz__GetConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
class _tptz__GetConfigurationsResponse
{ public:
/// @brief A list of all existing PTZConfigurations on the device.
/// Size of array of tt__PTZConfiguration* is 0..unbounded
   $int                                  __sizePTZConfiguration         0;
/// Pointer to array tt__PTZConfiguration* of length 0..unbounded
    tt__PTZConfiguration*               *PTZConfiguration               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
class _tptz__GetConfiguration
{ public:
/// @brief Token of the requested PTZConfiguration.
/// Element PTZConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
class _tptz__GetConfigurationResponse
{ public:
/// @brief A requested PTZConfiguration.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
class _tptz__SetConfiguration
{ public:
/// @brief
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// @brief Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
class _tptz__SetConfigurationResponse
{ public:
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0">
   $int                                  __size_SetConfigurationResponse_sequence 0;
    class __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence;
//  END OF SEQUENCE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
class _tptz__GetConfigurationOptions
{ public:
/// @brief Token of an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
class _tptz__GetConfigurationOptionsResponse
{ public:
/// @brief The requested PTZ configuration options.
/// Element PTZConfigurationOptions of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
class _tptz__SendAuxiliaryCommand
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief The Auxiliary request data.
/// Element AuxiliaryData of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// @brief The response contains the auxiliary response.
/// Element AuxiliaryResponse of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
class _tptz__GetPresets
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
class _tptz__GetPresetsResponse
{ public:
/// @brief A list of presets which are available for the requested MediaProfile.
/// Size of array of tt__PTZPreset* is 0..unbounded
   $int                                  __sizePreset                   0;
/// Pointer to array tt__PTZPreset* of length 0..unbounded
    tt__PTZPreset*                      *Preset                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
class _tptz__SetPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset name.
/// Element PresetName of type xs:string.
    char*                                PresetName                     0;	///< Optional element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
class _tptz__SetPresetResponse
{ public:
/// @brief A token to the Preset which has been set.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
class _tptz__RemovePreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
class _tptz__RemovePresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
class _tptz__GotoPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
class _tptz__GotoPresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
class _tptz__GetStatus
{ public:
/// @brief A reference to the MediaProfile where the PTZStatus should be requested.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
class _tptz__GetStatusResponse
{ public:
/// @brief The PTZStatus for the requested MediaProfile.
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
class _tptz__GotoHomePosition
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
class _tptz__GotoHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
class _tptz__SetHomePosition
{ public:
/// @brief A reference to the MediaProfile where the home position should be set.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
class _tptz__SetHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
class _tptz__ContinuousMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A Velocity vector specifying the velocity of pan, tilt and zoom.
/// Element Velocity of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// @brief An optional Timeout parameter.
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
class _tptz__ContinuousMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
class _tptz__RelativeMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A positional Translation relative to the current position
/// Element Translation of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// @brief An optional Speed parameter.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
class _tptz__RelativeMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
class _tptz__AbsoluteMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A Position vector specifying the absolute target position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// @brief An optional Speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
class _tptz__AbsoluteMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop

/// "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
class _tptz__Stop
{ public:
/// @brief A reference to the MediaProfile that indicate what should be stopped.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// Element PanTilt of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// @brief Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// Element Zoom of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
class _tptz__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
class _tptz__GetPresetTours
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
class _tptz__GetPresetToursResponse
{ public:
/// Size of array of tt__PresetTour* is 0..unbounded
   $int                                  __sizePresetTour               0;
/// Pointer to array tt__PresetTour* of length 0..unbounded
    tt__PresetTour*                     *PresetTour                     0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
class _tptz__GetPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
class _tptz__GetPresetTourResponse
{ public:
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
class _tptz__GetPresetTourOptions
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
class _tptz__CreatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
class _tptz__CreatePresetTourResponse
{ public:
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
class _tptz__ModifyPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
class _tptz__ModifyPresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
class _tptz__OperatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element Operation of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
class _tptz__OperatePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
class _tptz__RemovePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
class _tptz__RemovePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
/// @brief Base class for physical entities like inputs and outputs.
class tt__DeviceEntity
{ public:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
/// @brief Rectangle defined by lower left corner position and size. Units are pixel.
class tt__IntRectangle
{ public:
/// Attribute x of type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute y of type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute width of type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute height of type xs:int.
   @int                                  height                         1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
/// @brief Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
class tt__IntRectangleRange
{ public:
/// @brief Range of X-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// @brief Range of Y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// @brief Range of width.
/// Element WidthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// @brief Range of height.
/// Element HeightRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class tt__IntRange
{ public:
/// Element Min of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element Max of type xs:int.
    int                                  Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class tt__FloatRange
{ public:
/// Element Min of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element Max of type xs:float.
    float                                Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
/// @brief Range of duration greater equal Min duration and less equal Max duration.
class tt__DurationRange
{ public:
/// Element Min of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element Max of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntList is a complexType.
/// @brief List of values.
class tt__IntList
{ public:
/// Size of array of int is 0..unbounded
   $int                                  __sizeItems                    0;
/// Pointer to array int of length 0..unbounded
    int                                 *Items                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FloatList is a complexType.
class tt__FloatList
{ public:
/// Size of array of float is 0..unbounded
   $int                                  __sizeItems                    0;
/// Pointer to array float of length 0..unbounded
    float                               *Items                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
class tt__AnyHolder
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
class tt__VideoSourceExtension
{ public:
/// @brief Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
class tt__VideoSourceExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Profile is a complexType.
/// @brief A media profile consists of a set of media configurations. Media profiles are used by a client to configure properties of a media stream from an NVT.<br/> An NVT shall provide at least one media profile at boot. An NVT should provide ready to use profiles for the most common media configurations that the device offers.<br/> A profile consists of a set of interconnected configuration entities. Configurations are provided by the NVT and can be either static or created dynamically by the NVT. For example, the dynamic configurations can be created by the NVT depending on current available encoding resources.
class tt__Profile
{ public:
/// @brief User readable name of the profile.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Optional configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Video encoder.
/// Element VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the Audio encoder.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the video analytics module and rule engine.
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// @brief Optional configuration of the pan tilt zoom unit.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// @brief Optional configuration of the metadata stream.
/// Element MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// @brief Extensions defined in ONVIF 2.0
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// @brief Unique identifier of the profile.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @brief A value of true signals that the profile cannot be deleted. Default is false.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
class tt__ProfileExtension
{ public:
/// @brief Optional configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio decoder.
/// Element AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
class tt__ProfileExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
/// @brief Base type defining the common properties of a configuration.
class tt__ConfigurationEntity
{ public:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
class tt__VideoSourceConfigurationExtension
{ public:
/// @brief Optional element to configure rotation of captured image.
/// Element Rotate of type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
class tt__VideoSourceConfigurationExtension2
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Rotate is a complexType.
class tt__Rotate
{ public:
/// @brief Parameter to enable/disable Rotation feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// @brief Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// Element Degree of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
class tt__RotateExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
class tt__VideoSourceConfigurationOptions
{ public:
/// @brief Supported range for the capturing area.
/// Element BoundsRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    tt__IntRectangleRange*               BoundsRange                    1;	///< Required element.
/// @brief List of physical inputs.
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeVideoSourceTokensAvailable 1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *VideoSourceTokensAvailable     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
class tt__VideoSourceConfigurationOptionsExtension
{ public:
/// @brief Options of parameters for Rotation feature.
/// Element Rotate of type "http://www.onvif.org/ver10/schema":RotateOptions.
    tt__RotateOptions*                   Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
class tt__VideoSourceConfigurationOptionsExtension2
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
class tt__RotateOptions
{ public:
/// @brief Supported options of Rotate mode parameter.
/// Size of array of enum tt__RotateMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__RotateMode of length 1..unbounded
    enum tt__RotateMode                 *Mode                           1;
/// @brief List of supported degree value for rotation.
/// Element DegreeList of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         DegreeList                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    tt__RotateOptionsExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
class tt__RotateOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
class tt__VideoResolution
{ public:
/// @brief Number of the columns of the Video image.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief Number of the lines of the Video image.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
class tt__VideoRateControl
{ public:
/// @brief Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// Element FrameRateLimit of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// @brief Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// Element EncodingInterval of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// @brief the maximum output bitrate in kbps
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
class tt__Mpeg4Configuration
{ public:
/// @brief Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// Element Mpeg4Profile of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
class tt__H264Configuration
{ public:
/// @brief Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the H.264 profile, either baseline, main, extended or high
/// Element H264Profile of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
class tt__VideoEncoderConfigurationOptions
{ public:
/// @brief Range of the quality values. A high value means higher quality.
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        QualityRange                   1;	///< Required element.
/// @brief Optional JPEG encoder settings ranges (See also Extension element).
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions.
    tt__JpegOptions*                     JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges (See also Extension element).
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    tt__Mpeg4Options*                    MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges (See also Extension element).
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options.
    tt__H264Options*                     H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    tt__VideoEncoderOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
class tt__VideoEncoderOptionsExtension
{ public:
/// @brief Optional JPEG encoder settings ranges.
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    tt__JpegOptions2*                    JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    tt__Mpeg4Options2*                   MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options2.
    tt__H264Options2*                    H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    tt__VideoEncoderOptionsExtension2*   Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
class tt__VideoEncoderOptionsExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
class tt__JpegOptions
{ public:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
class tt__Mpeg4Options
{ public:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Pointer to array enum tt__Mpeg4Profile of length 1..unbounded
    enum tt__Mpeg4Profile               *Mpeg4ProfilesSupported         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264Options is a complexType.
class tt__H264Options
{ public:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Size of array of enum tt__H264Profile is 1..unbounded
   $int                                  __sizeH264ProfilesSupported    1;
/// Pointer to array enum tt__H264Profile of length 1..unbounded
    enum tt__H264Profile                *H264ProfilesSupported          1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
class tt__AudioSourceConfigurationOptions
{ public:
/// @brief Tokens of the audio source the configuration can be used for.
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeInputTokensAvailable     1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *InputTokensAvailable           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    tt__AudioSourceOptionsExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
class tt__AudioSourceOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
class tt__AudioEncoderConfigurationOptions
{ public:
/// @brief list of supported AudioEncoderConfigurations
/// Size of array of tt__AudioEncoderConfigurationOption* is 0..unbounded
   $int                                  __sizeOptions                  0;
/// Pointer to array tt__AudioEncoderConfigurationOption* of length 0..unbounded
    tt__AudioEncoderConfigurationOption* *Options                        0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
class tt__AudioEncoderConfigurationOption
{ public:
/// @brief The enoding used for audio data (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// @brief List of supported bitrates in kbps for the specified Encoding
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         BitrateList                    1;	///< Required element.
/// @brief List of supported Sample Rates in kHz for the specified Encoding
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
class tt__MetadataConfigurationExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
class tt__PTZFilter
{ public:
/// @brief True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// @brief True if the metadata stream shall contain the PTZ position
/// Element Position of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
/// @brief Subcription handling in the same way as base notification subscription.
class tt__EventSubscription
{ public:
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
    class _tt__EventSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
class tt__MetadataConfigurationOptions
{ public:
/// Element PTZStatusFilterOptions of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    tt__PTZStatusFilterOptions*          PTZStatusFilterOptions         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
class tt__PTZStatusFilterOptions
{ public:
/// @brief True if the device is able to stream pan or tilt status information.
/// Element PanTiltStatusSupported of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// @brief True if the device is able to stream zoom status inforamtion.
/// Element ZoomStatusSupported of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// @brief True if the device is able to stream the pan or tilt position.
/// Element PanTiltPositionSupported of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// @brief True if the device is able to stream zoom position information.
/// Element ZoomPositionSupported of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
class tt__PTZStatusFilterOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
class tt__VideoOutputExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
class tt__VideoOutputConfigurationOptions
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
class tt__VideoDecoderConfigurationOptions
{ public:
/// @brief If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// Element JpegDecOptions of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    tt__JpegDecOptions*                  JpegDecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// Element H264DecOptions of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    tt__H264DecOptions*                  H264DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// Element Mpeg4DecOptions of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    tt__Mpeg4DecOptions*                 Mpeg4DecOptions                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
class tt__H264DecOptions
{ public:
/// @brief List of supported H.264 Video Resolutions
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief List of supported H264 Profiles (either baseline, main, extended or high)
/// Size of array of enum tt__H264Profile is 1..unbounded
   $int                                  __sizeSupportedH264Profiles    1;
/// Pointer to array enum tt__H264Profile of length 1..unbounded
    enum tt__H264Profile                *SupportedH264Profiles          1;
/// @brief Supported H.264 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported H.264 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
class tt__JpegDecOptions
{ public:
/// @brief List of supported Jpeg Video Resolutions
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported Jpeg bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Jpeg framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
class tt__Mpeg4DecOptions
{ public:
/// @brief List of supported Mpeg4 Video Resolutions
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief List of supported Mpeg4 Profiles (either SP or ASP)
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded
   $int                                  __sizeSupportedMpeg4Profiles   1;
/// Pointer to array enum tt__Mpeg4Profile of length 1..unbounded
    enum tt__Mpeg4Profile               *SupportedMpeg4Profiles         1;
/// @brief Supported Mpeg4 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Mpeg4 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
class tt__VideoDecoderConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
class tt__AudioOutputConfigurationOptions
{ public:
/// @brief Tokens of the physical Audio outputs (typically one).
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeOutputTokensAvailable    1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *OutputTokensAvailable          1;
/// @brief An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Size of array of xsd__anyURI is 0..unbounded
   $int                                  __sizeSendPrimacyOptions       0;
/// Pointer to array xsd__anyURI of length 0..unbounded
    xsd__anyURI                         *SendPrimacyOptions             0;
/// @brief Minimum and maximum level range supported for this Output.
/// Element OutputLevelRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        OutputLevelRange               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
class tt__AudioDecoderConfigurationOptions
{ public:
/// @brief If the device is able to decode AAC encoded audio this section describes the supported configurations
/// Element AACDecOptions of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    tt__AACDecOptions*                   AACDecOptions                  0;	///< Optional element.
/// @brief If the device is able to decode G711 encoded audio this section describes the supported configurations
/// Element G711DecOptions of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    tt__G711DecOptions*                  G711DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode G726 encoded audio this section describes the supported configurations
/// Element G726DecOptions of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    tt__G726DecOptions*                  G726DecOptions                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
class tt__G711DecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
class tt__AACDecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
class tt__G726DecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
class tt__AudioDecoderConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
class tt__MulticastConfiguration
{ public:
/// @brief The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// Element Address of type "http://www.onvif.org/ver10/schema":IPAddress.
    tt__IPAddress*                       Address                        1;	///< Required element.
/// @brief The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// Element Port of type xs:int.
    int                                  Port                           1;	///< Required element.
/// @brief In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// Element TTL of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// @brief Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
class tt__StreamSetup
{ public:
/// @brief Defines if a multicast or unicast stream is requested
/// Element Stream of type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element Transport of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Transport                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Transport is a complexType.
class tt__Transport
{ public:
/// @brief Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// Element Protocol of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// @brief Optional element to describe further tunnel options. This element is normally not needed
/// Element Tunnel of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Tunnel                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
class tt__MediaUri
{ public:
/// @brief Stable Uri to be used for requesting the media stream
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @brief Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// Element InvalidAfterConnect of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// @brief Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// Element InvalidAfterReboot of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// @brief Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Scope is a complexType.
class tt__Scope
{ public:
/// @brief Indicates if the scope is fixed or configurable.
/// Element ScopeDef of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// @brief Scope item URI.
/// Element ScopeItem of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
class tt__NetworkInterfaceExtension
{ public:
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// @brief Extension point prepared for future 802.3 configuration.
/// Size of array of tt__Dot3Configuration* is 0..unbounded
   $int                                  __sizeDot3                     0;
/// Pointer to array tt__Dot3Configuration* of length 0..unbounded
    tt__Dot3Configuration*              *Dot3                           0;
/// Size of array of tt__Dot11Configuration* is 0..unbounded
   $int                                  __sizeDot11                    0;
/// Pointer to array tt__Dot11Configuration* of length 0..unbounded
    tt__Dot11Configuration*             *Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
class tt__Dot3Configuration
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
class tt__NetworkInterfaceExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
class tt__NetworkInterfaceLink
{ public:
/// @brief Configured link settings.
/// Element AdminSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// @brief Current active link settings.
/// Element OperSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// @brief Integer indicating interface type, for example: 6 is ethernet.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
class tt__NetworkInterfaceConnectionSetting
{ public:
/// @brief Auto negotiation on/off.
/// Element AutoNegotiation of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// @brief Speed.
/// Element Speed of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// @brief Duplex type, Half or Full.
/// Element Duplex of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
class tt__NetworkInterfaceInfo
{ public:
/// @brief Network interface name, for example eth0.
/// Element Name of type xs:string.
    char*                                Name                           0;	///< Optional element.
/// @brief Network interface MAC address.
/// Element HwAddress of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
class tt__IPv6NetworkInterface
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv6 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
class tt__IPv4NetworkInterface
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv4 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
class tt__IPv4Configuration
{ public:
/// @brief List of manually added IPv4 addresses.
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded
   $int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv4Address* of length 0..unbounded
    tt__PrefixedIPv4Address*            *Manual                         0;
/// @brief Link local address.
/// Element LinkLocal of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// @brief IPv4 address configured by using DHCP.
/// Element FromDHCP of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
class tt__IPv6Configuration
{ public:
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// @brief List of manually entered IPv6 addresses.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *Manual                         0;
/// @brief List of link local IPv6 addresses.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeLinkLocal                0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *LinkLocal                      0;
/// @brief List of IPv6 addresses configured by using DHCP.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeFromDHCP                 0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *FromDHCP                       0;
/// @brief List of IPv6 addresses configured by using router advertisment.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeFromRA                   0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *FromRA                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
class tt__IPv6ConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
class tt__NetworkProtocol
{ public:
/// @brief Network protocol type string.
/// Element Name of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// @brief Indicates if the protocol is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The port that is used by the protocol.
/// Size of array of int is 1..unbounded
   $int                                  __sizePort                     1;
/// Pointer to array int of length 1..unbounded
    int                                 *Port                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
class tt__NetworkProtocolExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
class tt__NetworkHost
{ public:
/// @brief Network host type: IPv4, IPv6 or DNS.
/// Element Type of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// @brief DNS name.
/// Element DNSname of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         DNSname                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
class tt__NetworkHostExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
class tt__IPAddress
{ public:
/// @brief Indicates if the address is an IPv4 or IPv6 address.
/// Element Type of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
class tt__PrefixedIPv4Address
{ public:
/// @brief IPv4 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
class tt__PrefixedIPv6Address
{ public:
/// @brief IPv6 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
class tt__HostnameInformation
{ public:
/// @brief Indicates whether the hostname is obtained from DHCP or not.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Indicates the hostname.
/// Element Name of type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
class tt__HostnameInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
class tt__DNSInformation
{ public:
/// @brief Indicates whether or not DNS information is retrieved from DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Search domain.
/// Size of array of xsd__token is 0..unbounded
   $int                                  __sizeSearchDomain             0;
/// Pointer to array xsd__token of length 0..unbounded
    xsd__token                          *SearchDomain                   0;
/// @brief List of DNS addresses received from DHCP.
/// Size of array of tt__IPAddress* is 0..unbounded
   $int                                  __sizeDNSFromDHCP              0;
/// Pointer to array tt__IPAddress* of length 0..unbounded
    tt__IPAddress*                      *DNSFromDHCP                    0;
/// @brief List of manually entered DNS addresses.
/// Size of array of tt__IPAddress* is 0..unbounded
   $int                                  __sizeDNSManual                0;
/// Pointer to array tt__IPAddress* of length 0..unbounded
    tt__IPAddress*                      *DNSManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
class tt__DNSInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
class tt__NTPInformation
{ public:
/// @brief Indicates if NTP information is to be retrieved by using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief List of NTP addresses retrieved by using DHCP.
/// Size of array of tt__NetworkHost* is 0..unbounded
   $int                                  __sizeNTPFromDHCP              0;
/// Pointer to array tt__NetworkHost* of length 0..unbounded
    tt__NetworkHost*                    *NTPFromDHCP                    0;
/// @brief List of manually entered NTP addresses.
/// Size of array of tt__NetworkHost* is 0..unbounded
   $int                                  __sizeNTPManual                0;
/// Pointer to array tt__NetworkHost* of length 0..unbounded
    tt__NetworkHost*                    *NTPManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
class tt__NTPInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
class tt__DynamicDNSInformation
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// @brief Time to live.
/// Element TTL of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
class tt__DynamicDNSInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
class tt__NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
class tt__NetworkInterfaceSetConfigurationExtension
{ public:
/// Size of array of tt__Dot3Configuration* is 0..unbounded
   $int                                  __sizeDot3                     0;
/// Pointer to array tt__Dot3Configuration* of length 0..unbounded
    tt__Dot3Configuration*              *Dot3                           0;
/// Size of array of tt__Dot11Configuration* is 0..unbounded
   $int                                  __sizeDot11                    0;
/// Pointer to array tt__Dot11Configuration* of length 0..unbounded
    tt__Dot11Configuration*             *Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
class tt__IPv6NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief List of manually added IPv6 addresses.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *Manual                         0;
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
class tt__IPv4NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief List of manually added IPv4 addresses.
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded
   $int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv4Address* of length 0..unbounded
    tt__PrefixedIPv4Address*            *Manual                         0;
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
class tt__NetworkGateway
{ public:
/// @brief IPv4 address string.
/// Size of array of tt__IPv4Address is 0..unbounded
   $int                                  __sizeIPv4Address              0;
/// Pointer to array tt__IPv4Address of length 0..unbounded
    tt__IPv4Address                     *IPv4Address                    0;
/// @brief IPv6 address string.
/// Size of array of tt__IPv6Address is 0..unbounded
   $int                                  __sizeIPv6Address              0;
/// Pointer to array tt__IPv6Address of length 0..unbounded
    tt__IPv6Address                     *IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
class tt__NetworkZeroConfiguration
{ public:
/// @brief Unique identifier of network interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// @brief Indicates whether the zero-configuration is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The zero-configuration IPv4 address(es)
/// Size of array of tt__IPv4Address is 0..unbounded
   $int                                  __sizeAddresses                0;
/// Pointer to array tt__IPv4Address of length 0..unbounded
    tt__IPv4Address                     *Addresses                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
class tt__NetworkZeroConfigurationExtension
{ public:
/// @brief Optional array holding the configuration for the second and possibly further interfaces.
/// Size of array of tt__NetworkZeroConfiguration* is 0..unbounded
   $int                                  __sizeAdditional               0;
/// Pointer to array tt__NetworkZeroConfiguration* of length 0..unbounded
    tt__NetworkZeroConfiguration*       *Additional                     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
class tt__NetworkZeroConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
class tt__IPAddressFilter
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded
   $int                                  __sizeIPv4Address              0;
/// Pointer to array tt__PrefixedIPv4Address* of length 0..unbounded
    tt__PrefixedIPv4Address*            *IPv4Address                    0;
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded
   $int                                  __sizeIPv6Address              0;
/// Pointer to array tt__PrefixedIPv6Address* of length 0..unbounded
    tt__PrefixedIPv6Address*            *IPv6Address                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
class tt__IPAddressFilterExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
class tt__Dot11Configuration
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element Alias of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element Security of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
class tt__Dot11SecurityConfiguration
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element Algorithm of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element PSK of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element Dot1X of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
class tt__Dot11SecurityConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
class tt__Dot11PSKSet
{ public:
/// @brief According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/> Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// Element Key of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// @brief According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/> If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// Element Passphrase of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
class tt__Dot11PSKSetExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
class tt__NetworkInterfaceSetConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
class tt__Dot11Capabilities
{ public:
/// Element TKIP of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element ScanAvailableNetworks of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element MultipleConfiguration of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element AdHocStationMode of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element WEP of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
class tt__Dot11Status
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element PairCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element GroupCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element ActiveConfigAlias of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
class tt__Dot11AvailableNetworks
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// @brief See IEEE802.11 7.3.2.25.2 for details.
/// Size of array of enum tt__Dot11AuthAndMangementSuite is 0..unbounded
   $int                                  __sizeAuthAndMangementSuite    0;
/// Pointer to array enum tt__Dot11AuthAndMangementSuite of length 0..unbounded
    enum tt__Dot11AuthAndMangementSuite *AuthAndMangementSuite          0;
/// Size of array of enum tt__Dot11Cipher is 0..unbounded
   $int                                  __sizePairCipher               0;
/// Pointer to array enum tt__Dot11Cipher of length 0..unbounded
    enum tt__Dot11Cipher                *PairCipher                     0;
/// Size of array of enum tt__Dot11Cipher is 0..unbounded
   $int                                  __sizeGroupCipher              0;
/// Pointer to array enum tt__Dot11Cipher of length 0..unbounded
    enum tt__Dot11Cipher                *GroupCipher                    0;
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
class tt__Dot11AvailableNetworksExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
class tt__Capabilities
{ public:
/// @brief Analytics capabilities
/// Element Analytics of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// @brief Device capabilities
/// Element Device of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// @brief Event capabilities
/// Element Events of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// @brief Imaging capabilities
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// @brief Media capabilities
/// Element Media of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// @brief PTZ capabilities
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
class tt__CapabilitiesExtension
{ public:
/// Element DeviceIO of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element Display of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element Recording of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element Search of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element Replay of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element AnalyticsDevice of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element Extensions of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
class tt__CapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
class tt__AnalyticsCapabilities
{ public:
/// @brief Analytics service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not rules are supported.
/// Element RuleSupport of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// @brief Indicates whether or not modules are supported.
/// Element AnalyticsModuleSupport of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
class tt__DeviceCapabilities
{ public:
/// @brief Device service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// @brief I/O capabilities.
/// Element IO of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
class tt__DeviceCapabilitiesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
class tt__EventCapabilities
{ public:
/// @brief Event service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not WS Subscription policy is supported.
/// Element WSSubscriptionPolicySupport of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// @brief Indicates whether or not WS Pull Point is supported.
/// Element WSPullPointSupport of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// @brief Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// Element WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
class tt__IOCapabilities
{ public:
/// @brief Number of input connectors.
/// Element InputConnectors of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// @brief Number of relay outputs.
/// Element RelayOutputs of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
class tt__IOCapabilitiesExtension
{ public:
/// Element Auxiliary of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData is 0..unbounded
   $int                                  __sizeAuxiliaryCommands        0;
/// Pointer to array tt__AuxiliaryData of length 0..unbounded
    tt__AuxiliaryData                   *AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
class tt__IOCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
class tt__MediaCapabilities
{ public:
/// @brief Media service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
class tt__MediaCapabilitiesExtension
{ public:
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
class tt__RealTimeStreamingCapabilities
{ public:
/// @brief Indicates whether or not RTP multicast is supported.
/// Element RTPMulticast of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// @brief Indicates whether or not RTP over TCP is supported.
/// Element RTP_TCP of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// @brief Indicates whether or not RTP/RTSP/TCP is supported.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
class tt__RealTimeStreamingCapabilitiesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
class tt__ProfileCapabilities
{ public:
/// @brief Maximum number of profiles.
/// Element MaximumNumberOfProfiles of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
class tt__NetworkCapabilities
{ public:
/// @brief Indicates whether or not IP filtering is supported.
/// Element IPFilter of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// @brief Indicates whether or not zeroconf is supported.
/// Element ZeroConfiguration of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// @brief Indicates whether or not IPv6 is supported.
/// Element IPVersion6 of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// @brief Indicates whether or not is supported.
/// Element DynDNS of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
class tt__NetworkCapabilitiesExtension
{ public:
/// Element Dot11Configuration of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
class tt__NetworkCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
class tt__SecurityCapabilities
{ public:
/// @brief Indicates whether or not TLS 1.1 is supported.
/// Element TLS1.1 of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// @brief Indicates whether or not TLS 1.2 is supported.
/// Element TLS1.2 of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// @brief Indicates whether or not onboard key generation is supported.
/// Element OnboardKeyGeneration of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// @brief Indicates whether or not access policy configuration is supported.
/// Element AccessPolicyConfig of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// @brief Indicates whether or not WS-Security X.509 token is supported.
/// Element X.509Token of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// @brief Indicates whether or not WS-Security SAML token is supported.
/// Element SAMLToken of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// @brief Indicates whether or not WS-Security Kerberos token is supported.
/// Element KerberosToken of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// @brief Indicates whether or not WS-Security REL token is supported.
/// Element RELToken of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
class tt__SecurityCapabilitiesExtension
{ public:
/// Element TLS1.0 of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
class tt__SecurityCapabilitiesExtension2
{ public:
/// Element Dot1X of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Size of array of int is 0..unbounded
   $int                                  __sizeSupportedEAPMethod       0;
/// Pointer to array int of length 0..unbounded
    int                                 *SupportedEAPMethod             0;
/// Element RemoteUserHandling of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
class tt__SystemCapabilities
{ public:
/// @brief Indicates whether or not WS Discovery resolve requests are supported.
/// Element DiscoveryResolve of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// @brief Indicates whether or not WS-Discovery Bye is supported.
/// Element DiscoveryBye of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// @brief Indicates whether or not remote discovery, see WS-Discovery, is supported.
/// Element RemoteDiscovery of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// @brief Indicates whether or not system backup is supported.
/// Element SystemBackup of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// @brief Indicates whether or not system logging is supported.
/// Element SystemLogging of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// @brief Indicates whether or not firmware upgrade is supported.
/// Element FirmwareUpgrade of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// @brief Indicates supported ONVIF version(s).
/// Size of array of tt__OnvifVersion* is 1..unbounded
   $int                                  __sizeSupportedVersions        1;
/// Pointer to array tt__OnvifVersion* of length 1..unbounded
    tt__OnvifVersion*                   *SupportedVersions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
class tt__SystemCapabilitiesExtension
{ public:
/// Element HttpFirmwareUpgrade of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element HttpSystemBackup of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element HttpSystemLogging of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element HttpSupportInformation of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
class tt__SystemCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
class tt__OnvifVersion
{ public:
/// @brief Major version number.
/// Element Major of type xs:int.
    int                                  Major                          1;	///< Required element.
/// @brief Two digit minor version number (e.g. 1 maps to "01" and 20 maps to "20").
/// Element Minor of type xs:int.
    int                                  Minor                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
class tt__ImagingCapabilities
{ public:
/// @brief Imaging service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
class tt__PTZCapabilities
{ public:
/// @brief PTZ service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
class tt__DeviceIOCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element VideoSources of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element VideoOutputs of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element AudioSources of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element AudioOutputs of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element RelayOutputs of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
class tt__DisplayCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indication that the SetLayout command supports only predefined layouts.
/// Element FixedLayout of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
class tt__RecordingCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element ReceiverSource of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element MediaProfileSource of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element DynamicRecordings of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element DynamicTracks of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element MaxStringLength of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
class tt__SearchCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element MetadataSearch of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
class tt__ReplayCapabilities
{ public:
/// @brief The address of the replay service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
class tt__ReceiverCapabilities
{ public:
/// @brief The address of the receiver service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether the device can receive RTP multicast streams.
/// Element RTP_Multicast of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/TCP streams
/// Element RTP_TCP of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/RTSP/TCP streams.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// @brief The maximum number of receivers supported by the device.
/// Element SupportedReceivers of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// @brief The maximum allowed length for RTSP URIs.
/// Element MaximumRTSPURILength of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
class tt__AnalyticsDeviceCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Obsolete property.
/// Element RuleSupport of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
class tt__AnalyticsDeviceExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
class tt__SystemLog
{ public:
/// @brief The log information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// @brief The log information as character data.
/// Element String of type xs:string.
    char*                                String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
class tt__SupportInformation
{ public:
/// @brief The support information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// @brief The support information as character data.
/// Element String of type xs:string.
    char*                                String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
class tt__BinaryData
{ public:
/// @brief base64 encoded binary data.
/// Element Data of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Attribute reference "http://www.w3.org/2005/05/xmlmime":contentType.
   @char*                                xmime5__contentType            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
class tt__AttachmentData
{ public:
/// Element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Attribute reference "http://www.w3.org/2005/05/xmlmime":contentType.
   @char*                                xmime5__contentType            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
class tt__BackupFile
{ public:
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Data of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
class tt__SystemLogUriList
{ public:
/// Size of array of tt__SystemLogUri* is 0..unbounded
   $int                                  __sizeSystemLog                0;
/// Pointer to array tt__SystemLogUri* of length 0..unbounded
    tt__SystemLogUri*                   *SystemLog                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
class tt__SystemLogUri
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
/// @brief General date time inforamtion returned by the GetSystemDateTime method.
class tt__SystemDateTime
{ public:
/// @brief Indicates if the time is set manully or through NTP.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// @brief Informative indicator whether daylight savings is currently on/off.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief Timezone information in Posix format.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// @brief Current system date and time in UTC format. This field is mandatory since version 2.0.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// @brief Date and time in local format.
/// Element LocalDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
class tt__SystemDateTimeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DateTime is a complexType.
class tt__DateTime
{ public:
/// Element Time of type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element Date of type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Date is a complexType.
class tt__Date
{ public:
/// Element Year of type xs:int.
    int                                  Year                           1;	///< Required element.
/// @brief Range is 1 to 12.
/// Element Month of type xs:int.
    int                                  Month                          1;	///< Required element.
/// @brief Range is 1 to 31.
/// Element Day of type xs:int.
    int                                  Day                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Time is a complexType.
class tt__Time
{ public:
/// @brief Range is 0 to 23.
/// Element Hour of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// @brief Range is 0 to 59.
/// Element Minute of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// @brief Range is 0 to 61 (typically 59).
/// Element Second of type xs:int.
    int                                  Second                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
/// @brief The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/> Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/> CET = designation for standard time when daylight saving is not in force<br/> -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/> CEST = designation when daylight saving is in force ("Central European Summer Time")<br/> , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/> M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/> /2, = the local time when the switch occurs = 2 a.m. in this case<br/> M10.5.0 = when daylight saving ends = the last Sunday in October.<br/> /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
class tt__TimeZone
{ public:
/// @brief Posix timezone string.
/// Element TZ of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
class tt__RemoteUser
{ public:
/// Element Username of type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element UseDerivedPassword of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":User is a complexType.
class tt__User
{ public:
/// @brief Username string.
/// Element Username of type xs:string.
    char*                                Username                       1;	///< Required element.
/// @brief Password string.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// @brief User level string.
/// Element UserLevel of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
class tt__UserExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
class tt__CertificateGenerationParameters
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:token.
    xsd__token                           ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:token.
    xsd__token                           ValidNotAfter                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
class tt__CertificateGenerationParametersExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Certificate is a complexType.
class tt__Certificate
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief base64 encoded DER representation of certificate.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
class tt__CertificateStatus
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Indicates whether or not a certificate is used in a HTTPS configuration.
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
class tt__CertificateWithPrivateKey
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element PrivateKey of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
class tt__CertificateInformation
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element IssuerDN of type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element SubjectDN of type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element KeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element ExtendedKeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element KeyLength of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element Version of type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element SerialNum of type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// @brief Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// Element SignatureAlgorithm of type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element Validity of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
class tt__CertificateInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
class tt__Dot1XConfiguration
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element Identity of type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element AnonymousID of type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// @brief EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Element EAPMethod of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token is 0..unbounded
   $int                                  __sizeCACertificateID          0;
/// Pointer to array xsd__token of length 0..unbounded
    xsd__token                          *CACertificateID                0;
/// Element EAPMethodConfiguration of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
class tt__Dot1XConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
class tt__EAPMethodConfiguration
{ public:
/// @brief Confgiuration information for TLS Method.
/// Element TLSConfiguration of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// @brief Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
class tt__EapMethodExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
class tt__TLSConfiguration
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
class tt__GenericEapPwdConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
class tt__RelayOutputSettings
{ public:
/// @brief 'Bistable' or 'Monostable' <ul> <li>Bistable After setting the state, the relay remains in this state.</li> <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// @brief Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// Element DelayTime of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// @brief 'open' or 'closed' <ul> <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li> <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li> </ul>
/// Element IdleState of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
class tt__PTZNodeExtension
{ public:
/// @brief Detail of supported Preset Tour feature.
/// Element SupportedPresetTour of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
class tt__PTZNodeExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
class tt__PTZPresetTourSupported
{ public:
/// @brief Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// Element MaximumNumberOfPresetTours of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// @brief Indicates which preset tour operations are available for this PTZ Node.
/// Size of array of enum tt__PTZPresetTourOperation is 0..unbounded
   $int                                  __sizePTZPresetTourOperation   0;
/// Pointer to array enum tt__PTZPresetTourOperation of length 0..unbounded
    enum tt__PTZPresetTourOperation     *PTZPresetTourOperation         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
class tt__PTZPresetTourSupportedExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
class tt__PTZConfigurationExtension
{ public:
/// @brief Optional element to configure PT Control Direction related features.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
class tt__PTZConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
class tt__PTControlDirection
{ public:
/// @brief Optional element to configure related parameters for E-Flip.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// @brief Optional element to configure related parameters for reversing of PT Control Direction.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
class tt__PTControlDirectionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlip is a complexType.
class tt__EFlip
{ public:
/// @brief Parameter to enable/disable E-Flip feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Reverse is a complexType.
class tt__Reverse
{ public:
/// @brief Parameter to enable/disable Reverse feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
class tt__PTZConfigurationOptions
{ public:
/// @brief A list of supported coordinate systems including their range limitations.
/// Element Spaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// @brief A timeout Range within which Timeouts are accepted by the PTZ Node.
/// Element PTZTimeout of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// @brief Supported options for PT Direction Control.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
class tt__PTZConfigurationOptions2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
class tt__PTControlDirectionOptions
{ public:
/// @brief Supported options for EFlip feature.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// @brief Supported options for Reverse feature.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
class tt__PTControlDirectionOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
class tt__EFlipOptions
{ public:
/// @brief Options of EFlip mode parameter.
/// Size of array of enum tt__EFlipMode is 0..unbounded
   $int                                  __sizeMode                     0;
/// Pointer to array enum tt__EFlipMode of length 0..unbounded
    enum tt__EFlipMode                  *Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
class tt__EFlipOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
class tt__ReverseOptions
{ public:
/// @brief Options of Reverse mode parameter.
/// Size of array of enum tt__ReverseMode is 0..unbounded
   $int                                  __sizeMode                     0;
/// Pointer to array enum tt__ReverseMode of length 0..unbounded
    enum tt__ReverseMode                *Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
class tt__ReverseOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
class tt__PanTiltLimits
{ public:
/// @brief A range of pan tilt limits.
/// Element Range of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
class tt__ZoomLimits
{ public:
/// @brief A range of zoom limit
/// Element Range of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
class tt__PTZSpaces
{ public:
/// @brief The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// Size of array of tt__Space2DDescription* is 0..unbounded
   $int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Pointer to array tt__Space2DDescription* of length 0..unbounded
    tt__Space2DDescription*             *AbsolutePanTiltPositionSpace   0;
/// @brief The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// Size of array of tt__Space1DDescription* is 0..unbounded
   $int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Pointer to array tt__Space1DDescription* of length 0..unbounded
    tt__Space1DDescription*             *AbsoluteZoomPositionSpace      0;
/// @brief The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// Size of array of tt__Space2DDescription* is 0..unbounded
   $int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Pointer to array tt__Space2DDescription* of length 0..unbounded
    tt__Space2DDescription*             *RelativePanTiltTranslationSpace 0;
/// @brief The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// Size of array of tt__Space1DDescription* is 0..unbounded
   $int                                  __sizeRelativeZoomTranslationSpace 0;
/// Pointer to array tt__Space1DDescription* of length 0..unbounded
    tt__Space1DDescription*             *RelativeZoomTranslationSpace   0;
/// @brief The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// Size of array of tt__Space2DDescription* is 0..unbounded
   $int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Pointer to array tt__Space2DDescription* of length 0..unbounded
    tt__Space2DDescription*             *ContinuousPanTiltVelocitySpace 0;
/// @brief The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// Size of array of tt__Space1DDescription* is 0..unbounded
   $int                                  __sizeContinuousZoomVelocitySpace 0;
/// Pointer to array tt__Space1DDescription* of length 0..unbounded
    tt__Space1DDescription*             *ContinuousZoomVelocitySpace    0;
/// @brief The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// Size of array of tt__Space1DDescription* is 0..unbounded
   $int                                  __sizePanTiltSpeedSpace        0;
/// Pointer to array tt__Space1DDescription* of length 0..unbounded
    tt__Space1DDescription*             *PanTiltSpeedSpace              0;
/// @brief The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// Size of array of tt__Space1DDescription* is 0..unbounded
   $int                                  __sizeZoomSpeedSpace           0;
/// Pointer to array tt__Space1DDescription* of length 0..unbounded
    tt__Space1DDescription*             *ZoomSpeedSpace                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
class tt__PTZSpacesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
class tt__Space2DDescription
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// @brief A range of y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
class tt__Space1DDescription
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
class tt__Vector2D
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute y of type xs:float.
   @float                                y                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
class tt__Vector1D
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul style=""> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
class tt__PTZVector
{ public:
/// @brief Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// @brief A zoom position.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
class tt__PTZSpeed
{ public:
/// @brief Pan and tilt speed. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// @brief A zoom speed.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
class tt__PTZStatus
{ public:
/// @brief Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// @brief Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// @brief States a current PTZ error.
/// Element Error of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// @brief Specifies the UTC time when this status was generated.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
class tt__PTZPreset
{ public:
/// @brief A list of preset position name.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// @brief A list of preset position.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.
/// @brief
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
class tt__PTZMoveStatus
{ public:
/// @brief
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.
/// @brief
/// Element Zoom of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
class tt__PresetTour
{ public:
/// @brief Readable name of the preset tour.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// @brief Read only parameters to indicate the status of the preset tour.
/// Element Status of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// @brief Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Parameters to specify the detail behavior of the preset tour.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// @brief A list of detail of touring spots including preset positions.
/// Size of array of tt__PTZPresetTourSpot* is 0..unbounded
   $int                                  __sizeTourSpot                 0;
/// Pointer to array tt__PTZPresetTourSpot* of length 0..unbounded
    tt__PTZPresetTourSpot*              *TourSpot                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// @brief Unique identifier of this preset tour.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
class tt__PTZPresetTourExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
class tt__PTZPresetTourSpot
{ public:
/// @brief Detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// @brief Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// @brief Optional parameter to specify time duration of staying on this tour sport.
/// Element StayTime of type xs:duration.
    xsd__duration                        StayTime                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
class tt__PTZPresetTourSpotExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
class tt__PTZPresetTourPresetDetail
{ public:
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// @brief Option to specify the preset position with Preset Token defined in advance.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// @brief Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// Element Home of type xs:boolean.
    bool                                 Home                           1;	///< Required element.
/// @brief Option to specify the preset position with vector of PTZ node directly.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    1;	///< Required element.
/// Element TypeExtension of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
class tt__PTZPresetTourTypeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
class tt__PTZPresetTourStatus
{ public:
/// @brief Indicates state of this preset tour by Idle/Touring/Paused.
/// Element State of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// @brief Indicates a tour spot currently staying.
/// Element CurrentTourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
class tt__PTZPresetTourStatusExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
class tt__PTZPresetTourStartingCondition
{ public:
/// @brief Optional parameter to specify how many times the preset tour is recurred.
/// Element RecurringTime of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// @brief Optional parameter to specify how long time duration the preset tour is recurred.
/// Element RecurringDuration of type xs:duration.
    xsd__duration                        RecurringDuration              0;	///< Optional element.
/// @brief Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// Element Direction of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
class tt__PTZPresetTourStartingConditionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
class tt__PTZPresetTourOptions
{ public:
/// @brief Indicates whether or not the AutoStart is supported.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Supported options for Preset Tour Starting Condition.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// @brief Supported options for Preset Tour Spot.
/// Element TourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
class tt__PTZPresetTourSpotOptions
{ public:
/// @brief Supported options for detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// @brief Supported range of stay time for a tour spot.
/// Element StayTime of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
class tt__PTZPresetTourPresetDetailOptions
{ public:
/// @brief A list of available Preset Tokens for tour spots.
/// Size of array of tt__ReferenceToken is 0..unbounded
   $int                                  __sizePresetToken              0;
/// Pointer to array tt__ReferenceToken of length 0..unbounded
    tt__ReferenceToken                  *PresetToken                    0;
/// @brief An option to indicate Home postion for tour spots.
/// Element Home of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// @brief Supported range of Pan and Tilt for tour spots.
/// Element PanTiltPositionSpace of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// @brief Supported range of Zoom for a tour spot.
/// Element ZoomPositionSpace of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
class tt__PTZPresetTourPresetDetailOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
class tt__PTZPresetTourStartingConditionOptions
{ public:
/// @brief Supported range of Recurring Time.
/// Element RecurringTime of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// @brief Supported range of Recurring Duration.
/// Element RecurringDuration of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// @brief Supported options for Direction of Preset Tour.
/// Size of array of enum tt__PTZPresetTourDirection is 0..unbounded
   $int                                  __sizeDirection                0;
/// Pointer to array enum tt__PTZPresetTourDirection of length 0..unbounded
    enum tt__PTZPresetTourDirection     *Direction                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
class tt__PTZPresetTourStartingConditionOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
class tt__ImagingStatus
{ public:
/// Element FocusStatus of type "http://www.onvif.org/ver10/schema":FocusStatus.
    tt__FocusStatus*                     FocusStatus                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
class tt__FocusStatus
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    char*                                Error                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
class tt__FocusConfiguration
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
class tt__ImagingSettings
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    tt__BacklightCompensation*           BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure.
    tt__Exposure*                        Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    tt__FocusConfiguration*              Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    tt__WideDynamicRange*                WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    tt__WhiteBalance*                    WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    tt__ImagingSettingsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
class tt__ImagingSettingsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Exposure is a complexType.
class tt__Exposure
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the NVT.</li> <li>Manual Disabled exposure algorithm on the NVT.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         1;	///< Required element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float                                Gain                           1;	///< Required element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float                                Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
class tt__WideDynamicRange
{ public:
/// @brief White dynamic range (on/off)
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// @brief Optional level parameter (unitless)
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
class tt__BacklightCompensation
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
class tt__ImagingOptions
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    tt__BacklightCompensationOptions*    BacklightCompensation          1;	///< Required element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     1;	///< Required element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                1;	///< Required element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       1;	///< Required element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    tt__ExposureOptions*                 Exposure                       1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions.
    tt__FocusOptions*                    Focus                          1;	///< Required element.
/// Size of array of enum tt__IrCutFilterMode is 1..unbounded
   $int                                  __sizeIrCutFilterModes         1;
/// Pointer to array enum tt__IrCutFilterMode of length 1..unbounded
    enum tt__IrCutFilterMode            *IrCutFilterModes               1;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      1;	///< Required element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    tt__WideDynamicRangeOptions*         WideDynamicRange               1;	///< Required element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    tt__WhiteBalanceOptions*             WhiteBalance                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
class tt__WideDynamicRangeOptions
{ public:
/// Size of array of enum tt__WideDynamicMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__WideDynamicMode of length 1..unbounded
    enum tt__WideDynamicMode            *Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
class tt__BacklightCompensationOptions
{ public:
/// Size of array of enum tt__WideDynamicMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__WideDynamicMode of length 1..unbounded
    enum tt__WideDynamicMode            *Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
class tt__FocusOptions
{ public:
/// Size of array of enum tt__AutoFocusMode is 0..unbounded
   $int                                  __sizeAutoFocusModes           0;
/// Pointer to array enum tt__AutoFocusMode of length 0..unbounded
    enum tt__AutoFocusMode              *AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   1;	///< Required element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      1;	///< Required element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
class tt__ExposureOptions
{ public:
/// Size of array of enum tt__ExposureMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__ExposureMode of length 1..unbounded
    enum tt__ExposureMode               *Mode                           1;
/// Size of array of enum tt__ExposurePriority is 1..unbounded
   $int                                  __sizePriority                 1;
/// Pointer to array enum tt__ExposurePriority of length 1..unbounded
    enum tt__ExposurePriority           *Priority                       1;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                1;	///< Required element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        1;	///< Required element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        1;	///< Required element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        1;	///< Required element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        1;	///< Required element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   1;	///< Required element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           1;	///< Required element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
class tt__WhiteBalanceOptions
{ public:
/// Size of array of enum tt__WhiteBalanceMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__WhiteBalanceMode of length 1..unbounded
    enum tt__WhiteBalanceMode           *Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         1;	///< Required element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
class tt__FocusMove
{ public:
/// @brief Parameters for the absolute focus control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    tt__AbsoluteFocus*                   Absolute                       0;	///< Optional element.
/// @brief Parameters for the relative focus control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    tt__RelativeFocus*                   Relative                       0;	///< Optional element.
/// @brief Parameter for the continuous focus control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    tt__ContinuousFocus*                 Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
class tt__AbsoluteFocus
{ public:
/// @brief Position parameter for the absolute focus control.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Speed parameter for the absolute focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
class tt__RelativeFocus
{ public:
/// @brief Distance parameter for the relative focus control.
/// Element Distance of type xs:float.
    float                                Distance                       1;	///< Required element.
/// @brief Speed parameter for the relative focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
class tt__ContinuousFocus
{ public:
/// @brief Speed parameter for the Continuous focus control.
/// Element Speed of type xs:float.
    float                                Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
class tt__MoveOptions
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    tt__RelativeFocusOptions*            Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
class tt__AbsoluteFocusOptions
{ public:
/// @brief Valid ranges of the position.
/// Element Position of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Position                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
class tt__RelativeFocusOptions
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
class tt__ContinuousFocusOptions
{ public:
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
class tt__WhiteBalance
{ public:
/// @brief Auto whitebalancing mode (auto/manual).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
class tt__ImagingStatus20
{ public:
/// @brief Status of focus.
/// Element FocusStatus20 of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    tt__FocusStatus20*                   FocusStatus20                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    tt__ImagingStatus20Extension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
class tt__ImagingStatus20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
class tt__FocusStatus20
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    tt__FocusStatus20Extension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
class tt__FocusStatus20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
/// @brief Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
class tt__ImagingSettings20
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    tt__BacklightCompensation20*         BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure20.
    tt__Exposure20*                      Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    tt__FocusConfiguration20*            Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    tt__WideDynamicRange20*              WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    tt__WhiteBalance20*                  WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    tt__ImagingSettingsExtension20*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
class tt__ImagingSettingsExtension20
{ public:
/// @brief Optional element to configure Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    tt__ImageStabilization*              ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    tt__ImagingSettingsExtension202*     Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
class tt__ImagingSettingsExtension202
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
class tt__ImageStabilization
{ public:
/// @brief Parameter to enable/disable Image Stabilization feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified)
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    tt__ImageStabilizationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
class tt__ImageStabilizationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
/// @brief Type describing whether WDR mode is enabled or disabled (on/off).
class tt__WideDynamicRange20
{ public:
/// @brief Wide dynamic range mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
/// @brief Type describing whether BLC mode is enabled or disabled (on/off).
class tt__BacklightCompensation20
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
/// @brief Type describing the exposure settings.
class tt__Exposure20
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         0;	///< Optional element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float*                               Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
class tt__ImagingOptions20
{ public:
/// @brief Valid range of Backlight Compensation.
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// @brief Valid range of Brightness.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     0;	///< Optional element.
/// @brief Valid range of Color Saturation.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                0;	///< Optional element.
/// @brief Valid range of Contrast.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       0;	///< Optional element.
/// @brief Valid range of Exposure.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    tt__ExposureOptions20*               Exposure                       0;	///< Optional element.
/// @brief Valid range of Focus.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    tt__FocusOptions20*                  Focus                          0;	///< Optional element.
/// @brief Valid range of IrCutFilterModes.
/// Size of array of enum tt__IrCutFilterMode is 0..unbounded
   $int                                  __sizeIrCutFilterModes         0;
/// Pointer to array enum tt__IrCutFilterMode of length 0..unbounded
    enum tt__IrCutFilterMode            *IrCutFilterModes               0;
/// @brief Valid range of Sharpness.
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      0;	///< Optional element.
/// @brief Valid range of WideDynamicRange.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    tt__WideDynamicRangeOptions20*       WideDynamicRange               0;	///< Optional element.
/// @brief Valid range of WhiteBalance.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    tt__WhiteBalanceOptions20*           WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    tt__ImagingOptions20Extension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
class tt__ImagingOptions20Extension
{ public:
/// @brief Options of parameters for Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    tt__ImageStabilizationOptions*       ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    tt__ImagingOptions20Extension2*      Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
class tt__ImagingOptions20Extension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
class tt__ImageStabilizationOptions
{ public:
/// @brief Supported options of Image Stabilization mode parameter.
/// Size of array of enum tt__ImageStabilizationMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__ImageStabilizationMode of length 1..unbounded
    enum tt__ImageStabilizationMode     *Mode                           1;
/// @brief Wide dynamic range mode (on/off).
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
class tt__ImageStabilizationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
class tt__WideDynamicRangeOptions20
{ public:
/// Size of array of enum tt__WideDynamicMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__WideDynamicMode of length 1..unbounded
    enum tt__WideDynamicMode            *Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
class tt__BacklightCompensationOptions20
{ public:
/// @brief 'ON' or 'OFF'
/// Size of array of enum tt__BacklightCompensationMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__BacklightCompensationMode of length 1..unbounded
    enum tt__BacklightCompensationMode  *Mode                           1;
/// @brief Level range of BacklightCompensation.
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
class tt__ExposureOptions20
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Size of array of enum tt__ExposureMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__ExposureMode of length 1..unbounded
    enum tt__ExposureMode               *Mode                           1;
/// @brief The exposure priority mode (low noise/framerate).
/// Size of array of enum tt__ExposurePriority is 0..unbounded
   $int                                  __sizePriority                 0;
/// Pointer to array enum tt__ExposurePriority of length 0..unbounded
    enum tt__ExposurePriority           *Priority                       0;
/// @brief Valid range of the Minimum ExposureTime.
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                0;	///< Optional element.
/// @brief Valid range of the Maximum ExposureTime.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                0;	///< Optional element.
/// @brief Valid range of the Minimum Gain.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        0;	///< Optional element.
/// @brief Valid range of the Maximum Gain.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        0;	///< Optional element.
/// @brief Valid range of the Minimum Iris.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        0;	///< Optional element.
/// @brief Valid range of the Maximum Iris.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        0;	///< Optional element.
/// @brief Valid range of the ExposureTime.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   0;	///< Optional element.
/// @brief Valid range of the Gain.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           0;	///< Optional element.
/// @brief Valid range of the Iris.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
class tt__MoveOptions20
{ public:
/// @brief Valid ranges for the absolute control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// @brief Valid ranges for the relative control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    tt__RelativeFocusOptions20*          Relative                       0;	///< Optional element.
/// @brief Valid ranges for the continuous control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
class tt__RelativeFocusOptions20
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
class tt__WhiteBalance20
{ public:
/// @brief 'AUTO' or 'MANUAL'
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    tt__WhiteBalance20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
class tt__WhiteBalance20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
class tt__FocusConfiguration20
{ public:
/// @brief Mode of auto fucus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// @brief Parameter to set autofocus far limit (unit: meter).
/// Element FarLimit of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    tt__FocusConfiguration20Extension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
class tt__FocusConfiguration20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
class tt__WhiteBalanceOptions20
{ public:
/// @brief Mode of WhiteBalance. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Size of array of enum tt__WhiteBalanceMode is 1..unbounded
   $int                                  __sizeMode                     1;
/// Pointer to array enum tt__WhiteBalanceMode of length 1..unbounded
    enum tt__WhiteBalanceMode           *Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         0;	///< Optional element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
class tt__WhiteBalanceOptions20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
class tt__FocusOptions20
{ public:
/// @brief Mode of Auto Focus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Size of array of enum tt__AutoFocusMode is 0..unbounded
   $int                                  __sizeAutoFocusModes           0;
/// Pointer to array enum tt__AutoFocusMode of length 0..unbounded
    enum tt__AutoFocusMode              *AutoFocusModes                 0;
/// @brief Valid range of DefaultSpeed.
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   0;	///< Optional element.
/// @brief Valid range of NearLimit.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      0;	///< Optional element.
/// @brief Valid range of FarLimit.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    tt__FocusOptions20Extension*         Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
class tt__FocusOptions20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
class tt__MessageExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemList is a complexType.
/// @brief List of parameters according to the corresponding ItemListDescription. Each item in the list shall have a unique name.
class tt__ItemList
{ public:
/// @brief Value name pair as defined by the corresponding description.
/// Size of SimpleItem array is 0..unbounded
   $int                                  __sizeSimpleItem               0;
    class _tt__ItemList_SimpleItem
    {
/// @brief Item name.
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// @brief Item value. The type is defined in the corresponding description.
/// Attribute Value of type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// @brief Complex value structure.
/// Size of ElementItem array is 0..unbounded
   $int                                  __sizeElementItem              0;
    class _tt__ItemList_ElementItem
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// @brief Item name.
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    tt__ItemListExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
class tt__ItemListExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
class tt__MessageDescription
{ public:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
class tt__MessageDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
/// @brief Describes a list of items. Each item in the list shall have a unique name. The list is designed as linear structure without optional or unbounded elements. Use ElementItems only when complex structures are inevitable.
class tt__ItemListDescription
{ public:
/// @brief Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// Size of SimpleItemDescription array is 0..unbounded
   $int                                  __sizeSimpleItemDescription    0;
    class _tt__ItemListDescription_SimpleItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// @brief Description of a complex type. The Type must reference a defined type.
/// Size of ElementItemDescription array is 0..unbounded
   $int                                  __sizeElementItemDescription   0;
    class _tt__ItemListDescription_ElementItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// @brief The type of the item. The Type must reference a defined type.
/// Attribute Type of type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    tt__ItemListDescriptionExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
class tt__ItemListDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector is a complexType.
class tt__Vector
{ public:
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
class tt__Rectangle
{ public:
/// Attribute bottom of type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute top of type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute right of type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute left of type xs:float.
   @float*                               left                           0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Polygon is a complexType.
class tt__Polygon
{ public:
/// Size of array of tt__Vector* is 3..unbounded
   $int                                  __sizePoint                    3;
/// Pointer to array tt__Vector* of length 3..unbounded
    tt__Vector*                         *Point                          3;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Polyline is a complexType.
class tt__Polyline
{ public:
/// Size of array of tt__Vector* is 2..unbounded
   $int                                  __sizePoint                    2;
/// Pointer to array tt__Vector* of length 2..unbounded
    tt__Vector*                         *Point                          2;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Color is a complexType.
class tt__Color
{ public:
/// Attribute X of type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute Y of type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute Z of type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
class tt__ColorCovariance
{ public:
/// Attribute XX of type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute YY of type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute ZZ of type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute XY of type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute XZ of type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute YZ of type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Appearance is a complexType.
class tt__Appearance
{ public:
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 0;	///< Optional element.
/// Element Shape of type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    tt__ShapeDescriptor*                 Shape                          0;	///< Optional element.
/// Element Color of type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    tt__ColorDescriptor*                 Color                          0;	///< Optional element.
/// Element Class of type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    tt__ClassDescriptor*                 Class                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    tt__AppearanceExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
class tt__AppearanceExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
class tt__ShapeDescriptor
{ public:
/// Element BoundingBox of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       BoundingBox                    1;	///< Required element.
/// Element CenterOfGravity of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          CenterOfGravity                1;	///< Required element.
/// Size of array of tt__Polygon* is 0..unbounded
   $int                                  __sizePolygon                  0;
/// Pointer to array tt__Polygon* of length 0..unbounded
    tt__Polygon*                        *Polygon                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    tt__ShapeDescriptorExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
class tt__ShapeDescriptorExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
class tt__ColorDescriptor
{ public:
/// Size of ColorCluster array is 0..unbounded
   $int                                  __sizeColorCluster             0;
    class _tt__ColorDescriptor_ColorCluster
    {
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Element Weight of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element Covariance of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    tt__ColorCovariance*                 Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    tt__ColorDescriptorExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
class tt__ColorDescriptorExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
class tt__ClassDescriptor
{ public:
/// Size of ClassCandidate array is 0..unbounded
   $int                                  __sizeClassCandidate           0;
    class _tt__ClassDescriptor_ClassCandidate
    {
/// Element Type of type "http://www.onvif.org/ver10/schema":ClassType.
    enum tt__ClassType                   Type                           1;	///< Required element.
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    tt__ClassDescriptorExtension*        Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
class tt__ClassDescriptorExtension
{ public:
/// Size of array of tt__OtherType* is 1..unbounded
   $int                                  __sizeOtherTypes               1;
/// Pointer to array tt__OtherType* of length 1..unbounded
    tt__OtherType*                      *OtherTypes                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    tt__ClassDescriptorExtension2*       Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
class tt__ClassDescriptorExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OtherType is a complexType.
class tt__OtherType
{ public:
/// @brief Object Class Type
/// Element Type of type xs:string.
    char*                                Type                           1;	///< Required element.
/// @brief A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
class tt__ObjectExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Transformation is a complexType.
class tt__Transformation
{ public:
/// Element Translate of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Translate                      0;	///< Optional element.
/// Element Scale of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Scale                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    tt__TransformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
class tt__TransformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Frame is a complexType.
class tt__Frame
{ public:
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      0;	///< Optional element.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 0;	///< Optional element.
/// Size of array of tt__Object* is 0..unbounded
   $int                                  __sizeObject                   0;
/// Pointer to array tt__Object* of length 0..unbounded
    tt__Object*                         *Object                         0;
/// Element ObjectTree of type "http://www.onvif.org/ver10/schema":ObjectTree.
    tt__ObjectTree*                      ObjectTree                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension.
    tt__FrameExtension*                  Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
class tt__FrameExtension
{ public:
/// Element MotionInCells of type "http://www.onvif.org/ver10/schema":MotionInCells.
    tt__MotionInCells*                   MotionInCells                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension2.
    tt__FrameExtension2*                 Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
class tt__FrameExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Merge is a complexType.
class tt__Merge
{ public:
/// Size of array of tt__ObjectId* is 2..unbounded
   $int                                  __sizefrom                     2;
/// Pointer to array tt__ObjectId* of length 2..unbounded
    tt__ObjectId*                       *from                           2;
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        to                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Split is a complexType.
class tt__Split
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        from                           1;	///< Required element.
/// Size of array of tt__ObjectId* is 2..unbounded
   $int                                  __sizeto                       2;
/// Pointer to array tt__ObjectId* of length 2..unbounded
    tt__ObjectId*                       *to                             2;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Rename is a complexType.
class tt__Rename
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        from                           1;	///< Required element.
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        to                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
class tt__ObjectId
{ public:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
class tt__Behaviour
{ public:
    class _tt__Behaviour_Removed
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
    }                                   *Removed                        0;	///< Optional element.
    class _tt__Behaviour_Idle
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
    }                                   *Idle                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    tt__BehaviourExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
class tt__BehaviourExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
class tt__ObjectTree
{ public:
/// Size of array of tt__Rename* is 0..unbounded
   $int                                  __sizeRename                   0;
/// Pointer to array tt__Rename* of length 0..unbounded
    tt__Rename*                         *Rename                         0;
/// Size of array of tt__Split* is 0..unbounded
   $int                                  __sizeSplit                    0;
/// Pointer to array tt__Split* of length 0..unbounded
    tt__Split*                          *Split                          0;
/// Size of array of tt__Merge* is 0..unbounded
   $int                                  __sizeMerge                    0;
/// Pointer to array tt__Merge* of length 0..unbounded
    tt__Merge*                          *Merge                          0;
/// Size of array of tt__ObjectId* is 0..unbounded
   $int                                  __sizeDelete                   0;
/// Pointer to array tt__ObjectId* of length 0..unbounded
    tt__ObjectId*                       *Delete                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    tt__ObjectTreeExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
class tt__ObjectTreeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
class tt__MotionInCells
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// @brief Number of columns of the cell grid (x dimension)
/// Attribute Columns of type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// @brief Number of rows of the cell grid (y dimension)
/// Attribute Rows of type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @brief A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// Attribute Cells of type xs:base64Binary.
   @xsd__base64Binary                    Cells                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
class tt__AnalyticsEngineConfiguration
{ public:
/// Size of array of tt__Config* is 0..unbounded
   $int                                  __sizeAnalyticsModule          0;
/// Pointer to array tt__Config* of length 0..unbounded
    tt__Config*                         *AnalyticsModule                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
class tt__AnalyticsEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
class tt__RuleEngineConfiguration
{ public:
/// Size of array of tt__Config* is 0..unbounded
   $int                                  __sizeRule                     0;
/// Pointer to array tt__Config* of length 0..unbounded
    tt__Config*                         *Rule                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
class tt__RuleEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Config is a complexType.
class tt__Config
{ public:
/// @brief List of configuration parameters as defined in the correspding description.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Parameters                     1;	///< Required element.
/// @brief Name of the configuration.
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// @brief Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// Attribute Type of type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
class tt__ConfigDescription
{ public:
/// @brief List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems should be used to transport the information to ease parsing of dynamically defined messages by a client application.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Parameters                     1;	///< Required element.
/// @brief The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable. The name of all Items must be unique within all Items contained in any group of this Message. Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// Size of Messages array is 0..unbounded
   $int                                  __sizeMessages                 0;
    class _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED
/// @brief The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine"). Even without knowing the complete topic name, the subscriber will be able to distiguish the messages produced by different rule instances of the same type via the Source fields of the message. There the name of the rule instance, which produced the message, must be listed.
/// Element ParentTopic of type xs:string.
    char*                                ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    tt__ConfigDescriptionExtension*      Extension                      0;	///< Optional element.
/// @brief XML Type of the Configuration (e.g. "tt::LineDetector").
/// Attribute Name of type xs:QName.
   @_QName                               Name                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
class tt__ConfigDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
class tt__SupportedRules
{ public:
/// @brief Lists the location of all schemas that are referenced in the rules.
/// Size of array of xsd__anyURI is 0..unbounded
   $int                                  __sizeRuleContentSchemaLocation 0;
/// Pointer to array xsd__anyURI of length 0..unbounded
    xsd__anyURI                         *RuleContentSchemaLocation      0;
/// @brief List of rules supported by the Video Analytics configuration..
/// Size of array of tt__ConfigDescription* is 0..unbounded
   $int                                  __sizeRuleDescription          0;
/// Pointer to array tt__ConfigDescription* of length 0..unbounded
    tt__ConfigDescription*              *RuleDescription                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    tt__SupportedRulesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
class tt__SupportedRulesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
class tt__SupportedAnalyticsModules
{ public:
/// @brief It optionally contains a list of URLs that provide the location of schema files. These schema files describe the types and elements used in the analytics module descriptions. If the analytics module descriptions reference types or elements of the ONVIF schema file, the ONVIF schema file MUST be explicitly listed.
/// Size of array of xsd__anyURI is 0..unbounded
   $int                                  __sizeAnalyticsModuleContentSchemaLocation 0;
/// Pointer to array xsd__anyURI of length 0..unbounded
    xsd__anyURI                         *AnalyticsModuleContentSchemaLocation 0;
/// Size of array of tt__ConfigDescription* is 0..unbounded
   $int                                  __sizeAnalyticsModuleDescription 0;
/// Pointer to array tt__ConfigDescription* of length 0..unbounded
    tt__ConfigDescription*              *AnalyticsModuleDescription     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
class tt__SupportedAnalyticsModulesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
class tt__PolygonConfiguration
{ public:
/// @brief Contains Polygon configuration for rule parameters
/// Element Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
    tt__Polygon*                         Polygon                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
class tt__PolylineArray
{ public:
/// @brief Contains array of Polyline
/// Size of array of tt__Polyline* is 1..unbounded
   $int                                  __sizeSegment                  1;
/// Pointer to array tt__Polyline* of length 1..unbounded
    tt__Polyline*                       *Segment                        1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    tt__PolylineArrayExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
class tt__PolylineArrayExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
class tt__PolylineArrayConfiguration
{ public:
/// @brief Contains PolylineArray configuration data
/// Element PolylineArray of type "http://www.onvif.org/ver10/schema":PolylineArray.
    tt__PolylineArray*                   PolylineArray                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
class tt__MotionExpression
{ public:
/// @brief Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// Element Expression of type xs:string.
    char*                                Expression                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// Attribute Type of type xs:string.
   @char*                                Type                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
class tt__MotionExpressionConfiguration
{ public:
/// @brief Contains Rule MotionExpression configuration
/// Element MotionExpression of type "http://www.onvif.org/ver10/schema":MotionExpression.
    tt__MotionExpression*                MotionExpression               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
class tt__CellLayout
{ public:
/// @brief Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// @brief Number of columns of the cell grid (x dimension)
/// Attribute Columns of type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// @brief Number of rows of the cell grid (y dimension)
/// Attribute Rows of type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
class tt__MetadataStream
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    class __tt__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _tt__union_MetadataStream selector: set to SOAP_UNION__tt__union_MetadataStream_<fieldname> or 0
    union _tt__union_MetadataStream
    {
/// Element VideoAnalytics of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    tt__VideoAnalyticsStream*            VideoAnalytics                 1;	///< Required element.
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZStream.
    tt__PTZStream*                       PTZ                            1;	///< Required element.
/// Element Event of type "http://www.onvif.org/ver10/schema":EventStream.
    tt__EventStream*                     Event                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    tt__MetadataStreamExtension*         Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
class tt__MetadataStreamExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
class tt__VideoAnalyticsStream
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    class __tt__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _tt__union_VideoAnalyticsStream selector: set to SOAP_UNION__tt__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in type tt__VideoAnalyticsStream
    union _tt__union_VideoAnalyticsStream
    {
/// Element Frame of type "http://www.onvif.org/ver10/schema":Frame.
    tt__Frame*                           Frame                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    tt__VideoAnalyticsStreamExtension*   Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
class tt__VideoAnalyticsStreamExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
class tt__PTZStream
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    class __tt__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _tt__union_PTZStream selector: set to SOAP_UNION__tt__union_PTZStream_<fieldname> or 0
/// Union for choice in type tt__PTZStream
    union _tt__union_PTZStream
    {
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    tt__PTZStreamExtension*              Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
class tt__PTZStreamExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventStream is a complexType.
class tt__EventStream
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    class __tt__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _tt__union_EventStream selector: set to SOAP_UNION__tt__union_EventStream_<fieldname> or 0
/// Union for choice in type tt__EventStream
    union _tt__union_EventStream
    {
/// Element reference "http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    tt__EventStreamExtension*            Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
class tt__EventStreamExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
/// @brief Configuration of the streaming and coding settings of a Video window.
class tt__PaneConfiguration
{ public:
/// @brief Optional name of the pane configuration.
/// Element PaneName of type xs:string.
    char*                                PaneName                       0;	///< Optional element.
/// @brief If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               0;	///< Optional element.
/// @brief If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane. The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the DeviceIO service.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               0;	///< Optional element.
/// @brief The configuration of the audio encoder including codec, bitrate and sample rate.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// @brief A pointer to a Receiver that has the necessary information to receive data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the GetReceivers command of the Receiver Service.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  0;	///< Optional element.
/// @brief A unique identifier in the display device.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
/// @brief A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
class tt__PaneLayout
{ public:
/// @brief Reference to the configuration of the streaming and coding parameters.
/// Element Pane of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// @brief Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// Element Area of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Area                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Layout is a complexType.
/// @brief A layout describes a set of Video windows that are displayed simultaniously on a display.
class tt__Layout
{ public:
/// @brief List of panes assembling the display layout.
/// Size of array of tt__PaneLayout* is 1..unbounded
   $int                                  __sizePaneLayout               1;
/// Pointer to array tt__PaneLayout* of length 1..unbounded
    tt__PaneLayout*                     *PaneLayout                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    tt__LayoutExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
class tt__LayoutExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
/// @brief This type contains the Audio and Video coding capabilities of a display service.
class tt__CodingCapabilities
{ public:
/// @brief If the device supports audio encoding this section describes the supported codecs and their configuration.
/// Element AudioEncodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// @brief If the device supports audio decoding this section describes the supported codecs and their settings.
/// Element AudioDecodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// @brief This section describes the supported video codesc and their configuration.
/// Element VideoDecodingCapabilities of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
/// @brief The options supported for a display layout.
class tt__LayoutOptions
{ public:
/// @brief Lists the possible Pane Layouts of the Video Output
/// Size of array of tt__PaneLayoutOptions* is 1..unbounded
   $int                                  __sizePaneLayoutOptions        1;
/// Pointer to array tt__PaneLayoutOptions* of length 1..unbounded
    tt__PaneLayoutOptions*              *PaneLayoutOptions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    tt__LayoutOptionsExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
class tt__LayoutOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
/// @brief Description of a pane layout describing a complete display layout.
class tt__PaneLayoutOptions
{ public:
/// @brief List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// Size of array of tt__Rectangle* is 1..unbounded
   $int                                  __sizeArea                     1;
/// Pointer to array tt__Rectangle* of length 1..unbounded
    tt__Rectangle*                      *Area                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    tt__PaneOptionExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
class tt__PaneOptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Receiver is a complexType.
/// @brief Description of a receiver, including its token and configuration.
class tt__Receiver
{ public:
/// @brief Unique identifier of the receiver.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @brief Describes the configuration of the receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
/// @brief Describes the configuration of a receiver.
class tt__ReceiverConfiguration
{ public:
/// @brief The following connection modes are defined:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// @brief Details of the URI to which the receiver should connect.
/// Element MediaUri of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// @brief Stream connection parameters.
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
/// @brief Contains information about a receiver's current state.
class tt__ReceiverStateInformation
{ public:
/// @brief The connection state of the receiver may have one of the following states:
/// Element State of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// @brief Indicates whether or not the receiver was created automatically.
/// Element AutoCreated of type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
class tt__SourceReference
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// Attribute Type of type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
class tt__DateTimeRange
{ public:
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
class tt__RecordingSummary
{ public:
/// @brief The earliest point in time where there is recorded data on the device.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The most recent point in time where there is recorded data on the device.
/// Element DataUntil of type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// @brief The device contains at least this many recordings.
/// Element NumberRecordings of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
/// @brief A structure for defining a limited scope when searching in recorded data.
class tt__SearchScope
{ public:
/// @brief A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// Size of array of tt__SourceReference* is 0..unbounded
   $int                                  __sizeIncludedSources          0;
/// Pointer to array tt__SourceReference* of length 0..unbounded
    tt__SourceReference*                *IncludedSources                0;
/// @brief A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// Size of array of tt__RecordingReference is 0..unbounded
   $int                                  __sizeIncludedRecordings       0;
/// Pointer to array tt__RecordingReference of length 0..unbounded
    tt__RecordingReference              *IncludedRecordings             0;
/// @brief An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// Element RecordingInformationFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  RecordingInformationFilter     0;	///< Optional element.
/// @brief Extension point
/// Element Extension of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    tt__SearchScopeExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
class tt__SearchScopeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
class tt__PTZPositionFilter
{ public:
/// @brief The lower boundary of the PTZ volume to look for.
/// Element MinPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MinPosition                    1;	///< Required element.
/// @brief The upper boundary of the PTZ volume to look for.
/// Element MaxPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MaxPosition                    1;	///< Required element.
/// @brief If true, search for when entering the specified PTZ volume.
/// Element EnterOrExit of type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
class tt__MetadataFilter
{ public:
/// Element MetadataStreamFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
class tt__FindRecordingResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A RecordingInformation structure for each found recording matching the search.
/// Size of array of tt__RecordingInformation* is 0..unbounded
   $int                                  __sizeRecordingInformation     0;
/// Pointer to array tt__RecordingInformation* of length 0..unbounded
    tt__RecordingInformation*           *RecordingInformation           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
class tt__FindEventResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindEventResult structure for each found event matching the search.
/// Size of array of tt__FindEventResult* is 0..unbounded
   $int                                  __sizeResult                   0;
/// Pointer to array tt__FindEventResult* of length 0..unbounded
    tt__FindEventResult*                *Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
class tt__FindEventResult
{ public:
/// @brief The recording where this event was found. Empty string if no recording is associated with this event.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the track where this event was found. Empty string if no track is associated with this event.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The time when the event occured.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The description of the event.
/// Element Event of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// @brief If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// Element StartStateEvent of type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
class tt__FindPTZPositionResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindPTZPositionResult structure for each found PTZ position matching the search.
/// Size of array of tt__FindPTZPositionResult* is 0..unbounded
   $int                                  __sizeResult                   0;
/// Pointer to array tt__FindPTZPositionResult* of length 0..unbounded
    tt__FindPTZPositionResult*          *Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
class tt__FindPTZPositionResult
{ public:
/// @brief A reference to the recording containing the PTZ position.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the PTZ position.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The time when the PTZ position was valid.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The PTZ position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
class tt__FindMetadataResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindMetadataResult structure for each found set of Metadata matching the search.
/// Size of array of tt__FindMetadataResult* is 0..unbounded
   $int                                  __sizeResult                   0;
/// Pointer to array tt__FindMetadataResult* of length 0..unbounded
    tt__FindMetadataResult*             *Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
class tt__FindMetadataResult
{ public:
/// @brief A reference to the recording containing the metadata.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the matching metadata.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The point in time when the matching metadata occurs in the metadata track.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
class tt__RecordingInformation
{ public:
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single recording is intended to record related material, there is just one source. It is indicates the physical location or the major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// Element EarliestRecording of type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element LatestRecording of type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// @brief Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Size of array of tt__TrackInformation* is 0..unbounded
   $int                                  __sizeTrack                    0;
/// Pointer to array tt__TrackInformation* of length 0..unbounded
    tt__TrackInformation*               *Track                          0;
/// Element RecordingStatus of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
/// @brief A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
class tt__RecordingSourceInformation
{ public:
/// @brief Identifier for the source chosen by the client that creates the structure. This identifier is opaque to the device. Clients may use any type of URI for this field.
/// Element SourceId of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// @brief Informative user readable name of the source, e.g. "Camera23".
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Informative description of the physical location of the source, e.g. the coordinates on a map.
/// Element Location of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// @brief Informative description of the source.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @brief URI provided by the service supplying data to be recorded.
/// Element Address of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
class tt__TrackInformation
{ public:
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief Type of the track: "Video", "Audio" or "Metadata". The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// @brief Informative description of the contents of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @brief The start date and time of the oldest recorded data in the track.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The stop date and time of the newest recorded data in the track.
/// Element DataTo of type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
/// @brief A set of media attributes valid for a recording at a point in time or for a time interval.
class tt__MediaAttributes
{ public:
/// @brief A reference to the recording that has these attributes.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A set of attributes for each track.
/// Size of array of tt__TrackAttributes* is 0..unbounded
   $int                                  __sizeTrackAttributes          0;
/// Pointer to array tt__TrackAttributes* of length 0..unbounded
    tt__TrackAttributes*                *TrackAttributes                0;
/// @brief The attributes are valid from this point in time in the recording.
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// @brief The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
class tt__TrackAttributes
{ public:
/// @brief The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Element TrackInformation of type "http://www.onvif.org/ver10/schema":TrackInformation.
    tt__TrackInformation*                TrackInformation               1;	///< Required element.
/// @brief If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// Element VideoAttributes of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    tt__VideoAttributes*                 VideoAttributes                0;	///< Optional element.
/// @brief If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// Element AudioAttributes of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    tt__AudioAttributes*                 AudioAttributes                0;	///< Optional element.
/// @brief If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// Element MetadataAttributes of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    tt__MetadataAttributes*              MetadataAttributes             0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    tt__TrackAttributesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
class tt__TrackAttributesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
class tt__VideoAttributes
{ public:
/// @brief Average bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief The width of the video in pixels.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief The height of the video in pixels.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// @brief Average framerate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
class tt__AudioAttributes
{ public:
/// @brief The bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// @brief The sample rate in kHz.
/// Element Samplerate of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
class tt__MetadataAttributes
{ public:
/// @brief Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// Element CanContainPTZ of type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// @brief Indicates that there can be analytics data in the metadata track in the specified time interval.
/// Element CanContainAnalytics of type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// @brief Indicates that there can be notifications in the metadata track in the specified time interval.
/// Element CanContainNotifications of type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
class tt__RecordingConfiguration
{ public:
/// @brief Information about the source of the recording.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// @brief Informative description of the source.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// @brief Sspecifies the maximum time that data in any track within the recording shall be stored. The device shall delete any data older than the maximum retention time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0, the device shall not limit the retention time of stored data, except by resource constraints. Whatever the value of MaximumRetentionTime, the device may automatically delete recordings to free up storage space for new recordings.
/// Element MaximumRetentionTime of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
class tt__TrackConfiguration
{ public:
/// @brief Type of the track. It shall be equal to the strings Video, Audio or Metadata. The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// @brief Informative description of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
class tt__GetRecordingsResponseItem
{ public:
/// @brief Token of the recording.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Configuration of the recording.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          Configuration                  1;	///< Required element.
/// @brief List of tracks.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    tt__GetTracksResponseList*           Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
class tt__GetTracksResponseList
{ public:
/// @brief Configuration of a track.
/// Size of array of tt__GetTracksResponseItem* is 0..unbounded
   $int                                  __sizeTrack                    0;
/// Pointer to array tt__GetTracksResponseItem* of length 0..unbounded
    tt__GetTracksResponseItem*          *Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
class tt__GetTracksResponseItem
{ public:
/// @brief Token of the track.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief Configuration of the track.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
class tt__RecordingJobConfiguration
{ public:
/// @brief Identifies the recording to which this job shall store the received data.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/> The only valid values for Mode shall be Idle and Active.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// @brief This shall be a positive number. If there are multiple recording jobs that store data to the same track, the device will only store the data for the recording job with the highest priority. The priority is specified per recording job, but the device shall determine the priority of each track individually. If there are two recording jobs with the same priority, the device shall record the data corresponding to the recording job that was activated the latest.
/// Element Priority of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// @brief Source of the recording.
/// Size of array of tt__RecordingJobSource* is 0..unbounded
   $int                                  __sizeSource                   0;
/// Pointer to array tt__RecordingJobSource* of length 0..unbounded
    tt__RecordingJobSource*             *Source                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
class tt__RecordingJobConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
class tt__RecordingJobSource
{ public:
/// @brief This field shall be a reference to the source of the data. The type of the source is determined by the attribute Type in the SourceToken structure. If Type is http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case the device shall receive the data over the network. If Type is http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the device to obtain data from a profile that exists on the local device.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    0;	///< Optional element.
/// @brief If this field is TRUE, and if the SourceToken is omitted, the device shall create a receiver object (through the receiver service) and assign the ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration from the device, the AutoCreateReceiver field shall never be present.
/// Element AutoCreateReceiver of type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// @brief List of tracks associated with the recording.
/// Size of array of tt__RecordingJobTrack* is 0..unbounded
   $int                                  __sizeTracks                   0;
/// Pointer to array tt__RecordingJobTrack* of length 0..unbounded
    tt__RecordingJobTrack*              *Tracks                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    tt__RecordingJobSourceExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
class tt__RecordingJobSourceExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
class tt__RecordingJobTrack
{ public:
/// @brief If the received RTSP stream contains multiple tracks of the same type, the SourceTag differentiates between those Tracks.
/// Element SourceTag of type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// @brief The destination is the tracktoken of the track to which the device shall store the received data.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
class tt__RecordingJobStateInformation
{ public:
/// @brief Identification of the recording that the recording job records to.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Holds the aggregated state over the whole RecordingJobInformation structure.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @brief Identifies the data source of the recording job.
/// Size of array of tt__RecordingJobStateSource* is 0..unbounded
   $int                                  __sizeSources                  0;
/// Pointer to array tt__RecordingJobStateSource* of length 0..unbounded
    tt__RecordingJobStateSource*        *Sources                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
class tt__RecordingJobStateInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
class tt__RecordingJobStateSource
{ public:
/// @brief Identifies the data source of the recording job.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    1;	///< Required element.
/// @brief Holds the aggregated state over all substructures of RecordingJobStateSource.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @brief List of track items.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    tt__RecordingJobStateTracks*         Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
class tt__RecordingJobStateTracks
{ public:
/// Size of array of tt__RecordingJobStateTrack* is 0..unbounded
   $int                                  __sizeTrack                    0;
/// Pointer to array tt__RecordingJobStateTrack* of length 0..unbounded
    tt__RecordingJobStateTrack*         *Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
class tt__RecordingJobStateTrack
{ public:
/// @brief Identifies the track of the data source that provides the data.
/// Element SourceTag of type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// @brief Indicates the destination track.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @brief Optionally holds an implementation defined string value that describes the error. The string should be in the English language.
/// Element Error of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// @brief Provides the job state of the track. The valid values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
class tt__GetRecordingJobsResponseItem
{ public:
/// Element JobToken of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element JobConfiguration of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
/// @brief Configuration parameters for the replay service.
class tt__ReplayConfiguration
{ public:
/// @brief The RTSP session timeout.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
class tt__AnalyticsDeviceEngineConfiguration
{ public:
/// Size of array of tt__EngineConfiguration* is 1..unbounded
   $int                                  __sizeEngineConfiguration      1;
/// Pointer to array tt__EngineConfiguration* of length 1..unbounded
    tt__EngineConfiguration*            *EngineConfiguration            1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
class tt__AnalyticsDeviceEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
class tt__EngineConfiguration
{ public:
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    1;	///< Required element.
/// Element AnalyticsEngineInputInfo of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    tt__AnalyticsEngineInputInfo*        AnalyticsEngineInputInfo       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
class tt__AnalyticsEngineInputInfo
{ public:
/// Element InputInfo of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          InputInfo                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
class tt__AnalyticsEngineInputInfoExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
class tt__SourceIdentification
{ public:
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeToken                    1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *Token                          1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    tt__SourceIdentificationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
class tt__SourceIdentificationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
class tt__MetadataInput
{ public:
/// Size of array of tt__Config* is 0..unbounded
   $int                                  __sizeMetadataConfig           0;
/// Pointer to array tt__Config* of length 0..unbounded
    tt__Config*                         *MetadataConfig                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    tt__MetadataInputExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
class tt__MetadataInputExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
class tt__AnalyticsStateInformation
{ public:
/// @brief Token of the control object whose status is requested.
/// Element AnalyticsEngineControlToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element State of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    tt__AnalyticsState*                  State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
class tt__AnalyticsState
{ public:
/// Element Error of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element State of type xs:string.
    char*                                State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
/// @brief Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
class tt__ActionEngineEventPayload
{ public:
/// @brief Request Message
/// Element RequestInfo of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope                   RequestInfo                    0;	///< Optional element.
/// @brief Response Message
/// Element ResponseInfo of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope                   ResponseInfo                   0;	///< Optional element.
/// @brief Fault Message
/// Element Fault of type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
class tt__ActionEngineEventPayloadExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/schema":Message

/// "http://www.onvif.org/ver10/schema":Message is a complexType.
class _tt__Message
{ public:
/// @brief Token value pairs that triggered this message. Typically only one item is present.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageExtension.
    tt__MessageExtension*                Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute PropertyOperation of type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
class wsnt__QueryExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
class wsnt__TopicExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
class wsnt__FilterType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
class wsnt__SubscriptionPolicyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
class wsnt__NotificationMessageHolderType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnt__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    class _wsnt__NotificationMessageHolderType_Message
    {
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                    Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP

/// "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
class _wsnt__NotificationProducerRP
{ public:
/// Size of the dynamic array of wsnt__TopicExpressionType* is 0..unbounded
   $int                                  __sizeTopicExpression          0;
/// Pointer to array wsnt__TopicExpressionType* of length 0..unbounded
    wsnt__TopicExpressionType*          *TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0;	///< Optional element.
/// Size of the dynamic array of xsd__anyURI is 0..unbounded
   $int                                  __sizeTopicExpressionDialect   0;
/// Pointer to array xsd__anyURI of length 0..unbounded
    xsd__anyURI                         *TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
class _wsnt__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType*         ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnt__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
class _wsnt__Notify
{ public:
/// Size of the dynamic array of wsnt__NotificationMessageHolderType* is 1..unbounded
   $int                                  __sizeNotificationMessage      1;
/// Pointer to array wsnt__NotificationMessageHolderType* of length 1..unbounded
    wsnt__NotificationMessageHolderType* *NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
class _wsnt__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
class _wsnt__Subscribe
{ public:
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Nullable pointer.
    class _wsnt__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
class _wsnt__SubscribeResponse
{ public:
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
class _wsnt__GetCurrentMessage
{ public:
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnt__TopicExpressionType*           Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
class _wsnt__GetCurrentMessageResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
class _wsnt__GetMessages
{ public:
/// Element MaximumNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
class _wsnt__GetMessagesResponse
{ public:
/// Size of the dynamic array of wsnt__NotificationMessageHolderType* is 0..unbounded
   $int                                  __sizeNotificationMessage      0;
/// Pointer to array wsnt__NotificationMessageHolderType* of length 0..unbounded
    wsnt__NotificationMessageHolderType* *NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
class _wsnt__DestroyPullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
class _wsnt__DestroyPullPointResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
class _wsnt__CreatePullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
class _wsnt__CreatePullPointResponse
{ public:
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
class _wsnt__Renew
{ public:
/// Element TerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                1;	///< Nullable pointer.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
class _wsnt__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
class _wsnt__Unsubscribe
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
class _wsnt__UnsubscribeResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
class _wsnt__PauseSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
class _wsnt__PauseSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
class _wsnt__ResumeSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
class _wsnt__ResumeSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/2005/08/addressing":EndpointReferenceType is a complexType.
class wsa5__EndpointReferenceType
{ public:
/// Element Address of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
    wsa5__AttributedURIType*             Address                        1;	///< Required element.
/// Element ReferenceParameters of type "http://www.w3.org/2005/08/addressing":ReferenceParametersType.
    wsa5__ReferenceParametersType*       ReferenceParameters            0;	///< Optional element.
/// Element reference "http://www.w3.org/2005/08/addressing":Metadata.
    wsa5__MetadataType*                  Metadata                       0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":ReferenceParametersType is a complexType.
class wsa5__ReferenceParametersType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":MetadataType is a complexType.
class wsa5__MetadataType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":AttributedAnyType is a complexType.
class wsa5__AttributedAnyType
{ public:
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":ProblemActionType is a complexType.
class wsa5__ProblemActionType
{ public:
/// Element reference "http://www.w3.org/2005/08/addressing":Action.
    wsa5__AttributedURIType*             Action                         0;	///< Optional element.
/// Element SoapAction of type xs:anyURI.
    xsd__anyURI                          SoapAction                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
class wsbf__BaseFaultType
{ public:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__BaseFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__BaseFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__BaseFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
class wstop__Documentation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
class wstop__ExtensibleDocumented
{ public:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
class wstop__QueryExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video input.
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Frame rate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @brief Horizontal and vertical resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// @brief Optional configuration of the image sensor.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio input.
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief number of available audio channels. (1: mono, 2: stereo)
/// Element Channels of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Reference to the physical input.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @brief Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// Element Bounds of type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// @brief Configured video resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// @brief Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// @brief Optional element to configure rate control related parameters.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// @brief Optional element to configure Mpeg4 related parameters.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// @brief Optional element to configure H.264 related parameters.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related video stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":JpegOptions.
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":Mpeg4Options.
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Pointer to array enum tt__Mpeg4Profile of length 1..unbounded
    enum tt__Mpeg4Profile               *Mpeg4ProfilesSupported         1;
    END OF INHERITED */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":H264Options.
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// @brief List of supported image sizes.
/// Size of array of tt__VideoResolution* is 1..unbounded
   $int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of length 1..unbounded
    tt__VideoResolution*                *ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Size of array of enum tt__H264Profile is 1..unbounded
   $int                                  __sizeH264ProfilesSupported    1;
/// Pointer to array enum tt__H264Profile of length 1..unbounded
    enum tt__H264Profile                *H264ProfilesSupported          1;
    END OF INHERITED */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Token of the Audio Source the configuration applies to
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// @brief The output bitrate in kbps.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// @brief The output sample rate in kHz.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element RuleEngineConfiguration of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief optional element to configure which PTZ related data is to include in the metadata stream
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// @brief Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul> <li>To get all events: Include the Events element but do not include a filter.</li> <li>To get no events: Do not include the Events element.</li> <li>To get only some events: Include the Events element and include a filter in the element.</li> </ul>
/// Element Events of type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// @brief Defines if data to include from the analytics engine part shall be included in the stream
/// Element Analytics of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video outputs.
class tt__VideoOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// Element Layout of type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// @brief Resolution of the display in Pixel.
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     0;	///< Optional element.
/// @brief Refresh rate of the display in Hertz.
/// Element RefreshRate of type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// @brief Aspect ratio of the display as physical extent of width divided by height.
/// Element AspectRatio of type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    tt__VideoOutputExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__VideoOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Token of the Video Output the configuration applies to
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio outputs.
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Token of the phsycial Audio output.
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @brief An audio channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Element SendPrimacy of type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// @brief Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// Element OutputLevel of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// @brief The Audio Decoder Configuration does not contain any that parameter to configure the decoding .A decoder shall decode every data it receives (according to its capabilities).
class tt__AudioDecoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief Network interface information
/// Element Info of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
class tt__CertificateUsage
{ public:
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Critical of type xs:boolean.
   @bool                                 Critical                       1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class tt__DigitalInput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief A unique identifier that is used to reference PTZ Nodes.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// @brief A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// Element SupportedPTZSpaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// @brief All preset operations MUST be available for this PTZ Node if one preset is supported.
/// Element MaximumNumberOfPresets of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// @brief A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// Element HomeSupported of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// @brief A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// Size of array of tt__AuxiliaryData is 0..unbounded
   $int                                  __sizeAuxiliaryCommands        0;
/// Pointer to array tt__AuxiliaryData of length 0..unbounded
    tt__AuxiliaryData                   *AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// @brief Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// Attribute FixedHomePosition of type xs:boolean.
   @bool*                                FixedHomePosition              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// @brief If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// Element DefaultAbsolutePantTiltPositionSpace of type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// Element DefaultAbsoluteZoomPositionSpace of type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// Element DefaultRelativePanTiltTranslationSpace of type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// Element DefaultRelativeZoomTranslationSpace of type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// Element DefaultContinuousPanTiltVelocitySpace of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// Element DefaultContinuousZoomVelocitySpace of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// Element DefaultPTZSpeed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// @brief If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// Element DefaultPTZTimeout of type xs:duration.
    xsd__duration                        DefaultPTZTimeout              0;	///< Optional element.
/// @brief The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// Element PanTiltLimits of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// @brief The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// Element ZoomLimits of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ObjectId.
class tt__Object : public tt__ObjectId
{ public:
/*  INHERITED FROM tt__ObjectId:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
    END OF INHERITED */
/// Element Appearance of type "http://www.onvif.org/ver10/schema":Appearance.
    tt__Appearance*                      Appearance                     0;	///< Optional element.
/// Element Behaviour of type "http://www.onvif.org/ver10/schema":Behaviour.
    tt__Behaviour*                       Behaviour                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectExtension.
    tt__ObjectExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/b-2":FilterType.
class tt__EventFilter : public wsnt__FilterType
{ public:
/*  INHERITED FROM wsnt__FilterType:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
    END OF INHERITED */
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AnalyticsEngine : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AnalyticsEngineInput : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// Element SourceIdentification of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    tt__SourceIdentification*            SourceIdentification           1;	///< Required element.
/// Element VideoInput of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoInput                     1;	///< Required element.
/// Element MetadataInput of type "http://www.onvif.org/ver10/schema":MetadataInput.
    tt__MetadataInput*                   MetadataInput                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class tt__AnalyticsEngineControl : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED */
/// @brief Token of the analytics engine (AnalyticsEngine) being controlled.
/// Element EngineToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// @brief Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// Element EngineConfigToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// @brief Tokens of the input (AnalyticsEngineInput) configuration applied.
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeInputToken               1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *InputToken                     1;
/// @brief Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// Size of array of tt__ReferenceToken is 1..unbounded
   $int                                  __sizeReceiverToken            1;
/// Pointer to array tt__ReferenceToken of length 1..unbounded
    tt__ReferenceToken                  *ReceiverToken                  1;
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// Element Subscription of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          Subscription                   1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.w3.org/2005/05/xmlmime":base64Binary is a complexType with simpleContent.
class xmime5__base64Binary
{ public:
/// __item wraps 'xs:base64Binary' simpleContent.
    xsd__base64Binary                    __item                        ;
/// Attribute reference "http://www.w3.org/2005/05/xmlmime":contentType.
   @char*                                contentType                    0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/05/xmlmime":hexBinary is a complexType with simpleContent.
class xmime5__hexBinary
{ public:
/// __item wraps 'xs:hexBinary' simpleContent.
    xsd__hexBinary                       __item                        ;
/// Attribute reference "http://www.w3.org/2005/05/xmlmime":contentType.
   @char*                                contentType                    0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__SubscribeCreationFailedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__SubscribeCreationFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__InvalidFilterFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__InvalidFilterFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__InvalidFilterFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Size of array of _QName is 1..unbounded
   $int                                  __sizeUnknownFilter            1;
/// Pointer to array _QName of length 1..unbounded
    _QName                              *UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__TopicExpressionDialectUnknownFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__InvalidTopicExpressionFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__InvalidTopicExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__TopicNotSupportedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__TopicNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__TopicNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__MultipleTopicsSpecifiedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__InvalidProducerPropertiesExpressionFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__InvalidMessageContentExpressionFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnrecognizedPolicyRequestFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnrecognizedPolicy       0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnsupportedPolicyRequestFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnsupportedPolicy        0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__NotifyMessageNotSupportedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnacceptableInitialTerminationTimeFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__NoCurrentMessageOnTopicFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnableToGetMessagesFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnableToGetMessagesFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnableToDestroyPullPointFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnableToCreatePullPointFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnableToCreatePullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnacceptableTerminationTimeFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__UnableToDestroySubscriptionFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__PauseFailedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__PauseFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__PauseFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__PauseFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnt__ResumeFailedFaultType : public wsbf__BaseFaultType
{ public:
/*  INHERITED FROM wsbf__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsbf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsbf__ResumeFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsbf__ResumeFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
};

/// "http://www.w3.org/2005/08/addressing":RelatesToType is a complexType with simpleContent.
class wsa5__RelatesToType
{ public:
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute RelationshipType of type "http://www.w3.org/2005/08/addressing":RelationshipTypeOpenEnum.
   @wsa5__RelationshipTypeOpenEnum       RelationshipType               0;	///< Default value="http://www.w3.org/2005/08/addressing/reply".
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":AttributedURIType is a complexType with simpleContent.
class wsa5__AttributedURIType
{ public:
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":AttributedUnsignedLongType is a complexType with simpleContent.
class wsa5__AttributedUnsignedLongType
{ public:
/// __item wraps 'xs:unsignedLong' simpleContent.
    ULONG64                              __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":AttributedQNameType is a complexType with simpleContent.
class wsa5__AttributedQNameType
{ public:
/// __item wraps 'xs:QName' simpleContent.
    _QName                               __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Size of Topic array is 0..unbounded
   $int                                  __sizeTopic                    0;
    class _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__TopicType:
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Size of array of wstop__TopicType* is 0..unbounded
   $int                                  __sizeTopic                    0;
/// Pointer to array wstop__TopicType* of length 0..unbounded
    wstop__TopicType*                   *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    char*                                                              
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
//  END OF INHERITED
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED
/// Attribute parent of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute targetNamespace of type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Size of array of wstop__TopicType* is 0..unbounded
   $int                                  __sizeTopic                    0;
/// Pointer to array wstop__TopicType* of length 0..unbounded
    wstop__TopicType*                   *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    char*                                                              
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED */
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    xsd__anyType                        *__any                         0;	///< Catch any element content in DOM.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of type "http://www.onvif.org/ver10/schema":MetadataStream.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2005/05/xmlmime                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.w3.org/2005/05/xmlmime":expectedContentTypes of simpleType xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.w3.org/2004/08/xop/include":Include of type "http://www.w3.org/2004/08/xop/include":Include.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.w3.org/2005/08/addressing":EndpointReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":Metadata of type "http://www.w3.org/2005/08/addressing":MetadataType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":MessageID of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
// '_wsa5__MessageID' element definition intentionally left blank.

/// Top-level root element "http://www.w3.org/2005/08/addressing":RelatesTo of type "http://www.w3.org/2005/08/addressing":RelatesToType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ReplyTo of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":From of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":FaultTo of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":To of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
// '_wsa5__To' element definition intentionally left blank.

/// Top-level root element "http://www.w3.org/2005/08/addressing":Action of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
// '_wsa5__Action' element definition intentionally left blank.

/// Top-level root element "http://www.w3.org/2005/08/addressing":RetryAfter of type "http://www.w3.org/2005/08/addressing":AttributedUnsignedLongType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemHeaderQName of type "http://www.w3.org/2005/08/addressing":AttributedQNameType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemHeader of type "http://www.w3.org/2005/08/addressing":AttributedAnyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemIRI of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemAction of type "http://www.w3.org/2005/08/addressing":ProblemActionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.w3.org/2005/08/addressing":IsReferenceParameter of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage PTZService Definitions

@section PTZService_bindings Service Bindings
  - @ref PTZBinding

@section PTZService_more More Information
- @ref page_notes "Notes"
- @ref page_XMLDataBinding "XML Data Binding"
- @ref SOAP_ENV__Header "SOAP Header Content"
- @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding  "PTZBinding"
  - @ref __tptz__GetServiceCapabilities
  - @ref __tptz__GetConfigurations
  - @ref __tptz__GetPresets
  - @ref __tptz__SetPreset
  - @ref __tptz__RemovePreset
  - @ref __tptz__GotoPreset
  - @ref __tptz__GetStatus
  - @ref __tptz__GetConfiguration
  - @ref __tptz__GetNodes
  - @ref __tptz__GetNode
  - @ref __tptz__SetConfiguration
  - @ref __tptz__GetConfigurationOptions
  - @ref __tptz__GotoHomePosition
  - @ref __tptz__SetHomePosition
  - @ref __tptz__ContinuousMove
  - @ref __tptz__RelativeMove
  - @ref __tptz__SendAuxiliaryCommand
  - @ref __tptz__AbsoluteMove
  - @ref __tptz__Stop
  - @ref __tptz__GetPresetTours
  - @ref __tptz__GetPresetTour
  - @ref __tptz__GetPresetTourOptions
  - @ref __tptz__CreatePresetTour
  - @ref __tptz__ModifyPresetTour
  - @ref __tptz__OperatePresetTour
  - @ref __tptz__RemovePresetTour

@section PTZBinding_ports Endpoints of Binding  "PTZBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding"

/**

Operation details:

Returns the capabilities of the PTZ service. The result is returned in a typed answer.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // response parameters:
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // response parameters:
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
int __tptz__GetServiceCapabilities(
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,	///< Request parameter
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfigurations" of service binding "PTZBinding"

/**

Operation details:


		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate system. The default Speeds are
				introduced to control the speed of move requests (absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the
				coordinate system for which the limits have been specified. That means that even if
				movements are specified in a different coordinate system, the requested movements shall be
				transformed to the coordinate system of the limits where the limits can be checked. When a
				relative or continuous movements is specified, which would leave the specified limits, the PTZ
				unit has to move along the specified limits. The Zoom Limits have to be interpreted
				accordingly.
			
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // response parameters:
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // request parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // response parameters:
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
int __tptz__GetConfigurations(
    _tptz__GetConfigurations*           tptz__GetConfigurations,	///< Request parameter
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresets" of service binding "PTZBinding"

/**

Operation details:


        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // response parameters:
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // request parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // response parameters:
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
int __tptz__GetPresets(
    _tptz__GetPresets*                  tptz__GetPresets,	///< Request parameter
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetPreset" of service binding "PTZBinding"

/**

Operation details:


				The SetPreset command saves the current device position parameters so that the device can
				move to the saved preset position through the GotoPreset operation.
				In order to create a new preset, the SetPresetRequest contains no PresetToken. If creation is
				successful, the Response contains the PresetToken which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional PresetName can be specified. The
				operation fails if the PTZ device is moving during the SetPreset operation.
				The device MAY internally save additional states such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset operation.      
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // response parameters:
    _tptz__SetPresetResponse*           tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // request parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // response parameters:
    _tptz__SetPresetResponse*           tptz__SetPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
int __tptz__SetPreset(
    _tptz__SetPreset*                   tptz__SetPreset,	///< Request parameter
    _tptz__SetPresetResponse*           tptz__SetPresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RemovePreset" of service binding "PTZBinding"

/**

Operation details:


        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // response parameters:
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // request parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // response parameters:
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
int __tptz__RemovePreset(
    _tptz__RemovePreset*                tptz__RemovePreset,	///< Request parameter
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GotoPreset" of service binding "PTZBinding"

/**

Operation details:


        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // response parameters:
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // request parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // response parameters:
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
int __tptz__GotoPreset(
    _tptz__GotoPreset*                  tptz__GotoPreset,	///< Request parameter
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetStatus" of service binding "PTZBinding"

/**

Operation details:


				Operation to request PTZ status for the Node in the
				selected profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // response parameters:
    _tptz__GetStatusResponse*           tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // request parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // response parameters:
    _tptz__GetStatusResponse*           tptz__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
int __tptz__GetStatus(
    _tptz__GetStatus*                   tptz__GetStatus,	///< Request parameter
    _tptz__GetStatusResponse*           tptz__GetStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfiguration" of service binding "PTZBinding"

/**

Operation details:

Get a specific PTZonfiguration from the device, identified by its reference token or name.
				<br/>
				The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate system. The default Speeds are
				introduced to control the speed of move requests (absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the
				coordinate system for which the limits have been specified. That means that even if
				movements are specified in a different coordinate system, the requested movements shall be
				transformed to the coordinate system of the limits where the limits can be checked. When a
				relative or continuous movements is specified, which would leave the specified limits, the PTZ
				unit has to move along the specified limits. The Zoom Limits have to be interpreted
				accordingly.
			
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // response parameters:
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // request parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // response parameters:
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
int __tptz__GetConfiguration(
    _tptz__GetConfiguration*            tptz__GetConfiguration,	///< Request parameter
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetNodes" of service binding "PTZBinding"

/**

Operation details:


				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes. The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by its reference token. 
      		
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // response parameters:
    _tptz__GetNodesResponse*            tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // request parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // response parameters:
    _tptz__GetNodesResponse*            tptz__GetNodesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
int __tptz__GetNodes(
    _tptz__GetNodes*                    tptz__GetNodes,	///< Request parameter
    _tptz__GetNodesResponse*            tptz__GetNodesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetNode" of service binding "PTZBinding"

/**

Operation details:

Get a specific PTZ Node identified by a reference
        token or a name.
	  
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetNode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // response parameters:
    _tptz__GetNodeResponse*             tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // request parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // response parameters:
    _tptz__GetNodeResponse*             tptz__GetNodeResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
int __tptz__GetNode(
    _tptz__GetNode*                     tptz__GetNode,	///< Request parameter
    _tptz__GetNodeResponse*             tptz__GetNodeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetConfiguration" of service binding "PTZBinding"

/**

Operation details:


        Set/update a existing PTZConfiguration on the device.
      
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // response parameters:
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // request parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // response parameters:
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
int __tptz__SetConfiguration(
    _tptz__SetConfiguration*            tptz__SetConfiguration,	///< Request parameter
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding"

/**

Operation details:


				List supported coordinate systems including their range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration is assigned to a Profile containing a
				Video Source Configuration. In that case, the options may additionally contain coordinate
				systems referring to the image coordinate system described by the Video Source
				Configuration. If the PTZ Node supports continuous movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // response parameters:
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // response parameters:
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
int __tptz__GetConfigurationOptions(
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,	///< Request parameter
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GotoHomePosition" of service binding "PTZBinding"

/**

Operation details:


        Operation to move the PTZ device to it's "home" position. The operation is supported if the HomeSupported element in the PTZNode is true.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // response parameters:
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // request parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // response parameters:
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
int __tptz__GotoHomePosition(
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,	///< Request parameter
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetHomePosition" of service binding "PTZBinding"

/**

Operation details:

Operation to save current position as the home position.
				The SetHomePosition command returns with a failure if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is successful, it is possible to recall the
				Home Position with the GotoHomePosition command.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // response parameters:
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // request parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // response parameters:
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
int __tptz__SetHomePosition(
    _tptz__SetHomePosition*             tptz__SetHomePosition,	///< Request parameter
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__ContinuousMove" of service binding "PTZBinding"

/**

Operation details:

Operation for continuous Pan/Tilt and Zoom movements. The operation is supported if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. Speed argument is optional. If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // response parameters:
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // request parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // response parameters:
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
int __tptz__ContinuousMove(
    _tptz__ContinuousMove*              tptz__ContinuousMove,	///< Request parameter
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RelativeMove" of service binding "PTZBinding"

/**

Operation details:

Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
			
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // response parameters:
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // request parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // response parameters:
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
int __tptz__RelativeMove(
    _tptz__RelativeMove*                tptz__RelativeMove,	///< Request parameter
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding"

/**

Operation details:


        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // response parameters:
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // request parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // response parameters:
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
int __tptz__SendAuxiliaryCommand(
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,	///< Request parameter
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__AbsoluteMove" of service binding "PTZBinding"

/**

Operation details:

Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
			
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // response parameters:
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // request parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // response parameters:
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
int __tptz__AbsoluteMove(
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,	///< Request parameter
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__Stop" of service binding "PTZBinding"

/**

Operation details:

Operation to stop ongoing pan, tilt and zoom movements of absolute relative and continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing pan, tilt and zoom movements.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/Stop"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__Stop*                        tptz__Stop,
    // response parameters:
    _tptz__StopResponse*                tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // request parameters:
    _tptz__Stop*                        tptz__Stop,
    // response parameters:
    _tptz__StopResponse*                tptz__StopResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
int __tptz__Stop(
    _tptz__Stop*                        tptz__Stop,	///< Request parameter
    _tptz__StopResponse*                tptz__StopResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTours" of service binding "PTZBinding"

/**

Operation details:

Operation to request PTZ preset tours in the selected media profiles.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // response parameters:
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // request parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // response parameters:
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
int __tptz__GetPresetTours(
    _tptz__GetPresetTours*              tptz__GetPresetTours,	///< Request parameter
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to request a specific PTZ preset tour in the selected media profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // response parameters:
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // request parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // response parameters:
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
int __tptz__GetPresetTour(
    _tptz__GetPresetTour*               tptz__GetPresetTour,	///< Request parameter
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding"

/**

Operation details:

Operation to request available options to configure PTZ preset tour.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // response parameters:
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // request parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // response parameters:
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
int __tptz__GetPresetTourOptions(
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,	///< Request parameter
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__CreatePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to create a preset tour for the selected media profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // response parameters:
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // request parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // response parameters:
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
int __tptz__CreatePresetTour(
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,	///< Request parameter
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to modify a preset tour for the selected media profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // response parameters:
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // request parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // response parameters:
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
int __tptz__ModifyPresetTour(
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,	///< Request parameter
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__OperatePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to perform specific operation on the preset tour in selected media profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // response parameters:
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // request parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // response parameters:
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
int __tptz__OperatePresetTour(
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,	///< Request parameter
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RemovePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to delete a specific preset tour from the media profile.
  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // response parameters:
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // request parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // response parameters:
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
int __tptz__RemovePresetTour(
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,	///< Request parameter
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a FILE* fd, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a FILE* fd, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    @endcode

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tptz:GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    @endcode

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    @endcode

  - <tptz:GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, _tptz__GetNode*);
    @endcode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    @endcode

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    @endcode

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    @endcode

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    @endcode

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    @endcode

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    @endcode

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    @endcode

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    @endcode

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    @endcode

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <tptz:GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    @endcode

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    @endcode

  - <tptz:SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    @endcode

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    @endcode

  - <tptz:RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    @endcode

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    @endcode

  - <tptz:GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    @endcode

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    @endcode

  - <tptz:GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    @endcode

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    @endcode

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    @endcode

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    @endcode

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    @endcode

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    @endcode

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    @endcode

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    @endcode

  - <tptz:RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    @endcode

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    @endcode

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    @endcode

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    @endcode

  - <tptz:Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, _tptz__Stop*);
    @endcode

  - <tptz:StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    @endcode

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    @endcode

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    @endcode

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    @endcode

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    @endcode

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    @endcode

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    @endcode

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    @endcode

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    @endcode

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    @endcode

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    @endcode

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    @endcode

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    @endcode

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    @endcode

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, _tt__Message*);
    @endcode

  - <tt:Polygon> (use wsdl2h option -g to auto-generate)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate)

  - <tt:MetadataStream> (use wsdl2h option -g to auto-generate)

@section xmime5 Top-level root elements of schema "http://www.w3.org/2005/05/xmlmime"

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section xop Top-level root elements of schema "http://www.w3.org/2004/08/xop/include"

  - <xop:Include> (use wsdl2h option -g to auto-generate)

@section wsa5 Top-level root elements of schema "http://www.w3.org/2005/08/addressing"

  - <wsa5:EndpointReference> (use wsdl2h option -g to auto-generate)

  - <wsa5:Metadata> (use wsdl2h option -g to auto-generate)

  - <wsa5:MessageID> @ref _wsa5__MessageID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa5__MessageID(struct soap*, _wsa5__MessageID);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa5__MessageID(struct soap*, _wsa5__MessageID);
    @endcode

  - <wsa5:RelatesTo> (use wsdl2h option -g to auto-generate)

  - <wsa5:ReplyTo> (use wsdl2h option -g to auto-generate)

  - <wsa5:From> (use wsdl2h option -g to auto-generate)

  - <wsa5:FaultTo> (use wsdl2h option -g to auto-generate)

  - <wsa5:To> @ref _wsa5__To
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa5__To(struct soap*, _wsa5__To);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa5__To(struct soap*, _wsa5__To);
    @endcode

  - <wsa5:Action> @ref _wsa5__Action
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa5__Action(struct soap*, _wsa5__Action);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa5__Action(struct soap*, _wsa5__Action);
    @endcode

  - <wsa5:RetryAfter> (use wsdl2h option -g to auto-generate)

  - <wsa5:ProblemHeaderQName> (use wsdl2h option -g to auto-generate)

  - <wsa5:ProblemHeader> (use wsdl2h option -g to auto-generate)

  - <wsa5:ProblemIRI> (use wsdl2h option -g to auto-generate)

  - <wsa5:ProblemAction> (use wsdl2h option -g to auto-generate)

@section wsbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsbf:BaseFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate)

*/

/* End of ptz.h */
