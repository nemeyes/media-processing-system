/* D:/intelli-vms/ws4d_gsoap/build/WS/wsd.h
   Generated by wsdl2h 1.2.13 from D:/intelli-vms/ws4d_gsoap/WS/wsd.xsd and D:/intelli-vms/ws4d_gsoap/build/WS/DPWS-typemap.dat
   2011-11-08 07:23:44 GMT
   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/


/******************************************************************************\
 *                                                                            *
 * http://schemas.xmlsoap.org/ws/2005/04/discovery                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xsd.h"	// import primitive XSD types.
#import "wsa.h"	// wsa = <http://schemas.xmlsoap.org/ws/2004/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

wsd = "http://schemas.xmlsoap.org/ws/2005/04/discovery"

*/

//gsoap wsd   schema namespace:	http://schemas.xmlsoap.org/ws/2005/04/discovery
//gsoap wsd   schema elementForm:	qualified
//gsoap wsd   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


//  xsd.h: typemap override of type xsd__ID with char* /*ID*/

//  xsd.h: should define type xsd__IDREFS

//  xsd.h: typemap override of type xsd__QName with _QName

//  xsd.h: typemap override of type xsd__anyType with _XML

//  xsd.h: typemap override of type xsd__anyURI with char* /*URI*/

//  xsd.h: typemap override of type xsd__base64Binary with char* /*base64*/

//  xsd.h: typemap override of type xsd__unsignedInt with unsigned int

//  Imported element "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference declared as _wsa__EndpointReference


/// Typedef synonym for struct wsd__HelloType.
typedef struct wsd__HelloType wsd__HelloType;

/// Typedef synonym for struct wsd__ByeType.
typedef struct wsd__ByeType wsd__ByeType;

/// Typedef synonym for struct wsd__ProbeType.
typedef struct wsd__ProbeType wsd__ProbeType;

/// Typedef synonym for struct wsd__ProbeMatchesType.
typedef struct wsd__ProbeMatchesType wsd__ProbeMatchesType;

/// Typedef synonym for struct wsd__ProbeMatchType.
typedef struct wsd__ProbeMatchType wsd__ProbeMatchType;

/// Typedef synonym for struct wsd__ResolveType.
typedef struct wsd__ResolveType wsd__ResolveType;

/// Typedef synonym for struct wsd__ResolveMatchesType.
typedef struct wsd__ResolveMatchesType wsd__ResolveMatchesType;

/// Typedef synonym for struct wsd__ResolveMatchType.
typedef struct wsd__ResolveMatchType wsd__ResolveMatchType;

/// Typedef synonym for struct wsd__ScopesType.
typedef struct wsd__ScopesType wsd__ScopesType;

/// Typedef synonym for struct wsd__SecurityType.
typedef struct wsd__SecurityType wsd__SecurityType;

/// Typedef synonym for struct wsd__SigType.
typedef struct wsd__SigType wsd__SigType;

/// Typedef synonym for struct wsd__AppSequenceType.
typedef struct wsd__AppSequenceType wsd__AppSequenceType;

/// union of values "tns:RelationshipType xs:QName"
typedef char* wsd__OpenRelationshipType;

/// Imported simpleType "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType from typemap D:/intelli-vms/ws4d_gsoap/build/WS/DPWS-typemap.dat.
extern typedef char* wsd__QNameListType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType is a simpleType containing a whitespace separated list of xs:anyURI.
typedef char* wsd__UriListType;

/// union of values "tns:FaultCodeType xs:QName"
typedef char* wsd__FaultCodeOpenType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":RelationshipType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'wsd__RelationshipType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsd__RelationshipType
{
	wsd__RelationshipType__wsd__Suppression,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":Suppression"
};
/// Typedef synonym for enum wsd__RelationshipType.
typedef enum wsd__RelationshipType wsd__RelationshipType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":FaultCodeType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'wsd__FaultCodeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsd__FaultCodeType
{
	wsd__FaultCodeType__wsd__MatchingRuleNotSupported,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":MatchingRuleNotSupported"
};
/// Typedef synonym for enum wsd__FaultCodeType.
typedef enum wsd__FaultCodeType wsd__FaultCodeType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType is a complexType.
struct wsd__HelloType
{
/// Imported element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    _wsa__EndpointReference              wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType                   wsd__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct wsd__ScopesType*              wsd__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType                     wsd__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         wsd__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType is a complexType.
struct wsd__ByeType
{
/// Imported element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    _wsa__EndpointReference              wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType                   wsd__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct wsd__ScopesType*              wsd__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType                     wsd__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int*                        wsd__MetadataVersion           0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType is a complexType.
struct wsd__ProbeType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType                   wsd__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct wsd__ScopesType*              wsd__Scopes                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType is a complexType.
struct wsd__ProbeMatchesType
{
/// Size of array of struct wsd__ProbeMatchType* is 0..unbounded
    int                                  __sizeProbeMatch              ;
/// Array of length 0..unbounded
    struct wsd__ProbeMatchType*          ProbeMatch                     0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchType is a complexType.
struct wsd__ProbeMatchType
{
/// Imported element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    _wsa__EndpointReference              wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType                   wsd__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct wsd__ScopesType*              wsd__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType                     wsd__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         wsd__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType is a complexType.
struct wsd__ResolveType
{
/// Imported element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    _wsa__EndpointReference              wsa__EndpointReference         1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType is a complexType.
struct wsd__ResolveMatchesType
{
/// Element ResolveMatch of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType.
    struct wsd__ResolveMatchType*        ResolveMatch                   0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType is a complexType.
struct wsd__ResolveMatchType
{
/// Imported element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    _wsa__EndpointReference              wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType                   wsd__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct wsd__ScopesType*              wsd__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType                     wsd__XAddrs                    1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         wsd__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType is a complexType.
struct wsd__SecurityType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig.
    struct wsd__SigType*                 wsd__Sig                       0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType is a complexType.
struct wsd__SigType
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// Attribute Scheme of type xs:anyURI.
   @char* /*URI*/                        Scheme                         1;	///< Required attribute.
/// Attribute KeyId of type xs:base64Binary.
   @char* /*base64*/                     KeyId                          0;	///< Optional attribute.
/// Attribute Refs of type xs:IDREFS.
   @xsd__IDREFS                          Refs                           1;	///< Required attribute.
/// Attribute Sig of type xs:base64Binary.
   @char* /*base64*/                     Sig                            1;	///< Required attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType is a complexType with simpleContent.
struct wsd__ScopesType
{
/// __item wraps '"http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType' simpleContent.
    wsd__UriListType                     __item                        ;
/// Attribute MatchBy of type xs:anyURI.
   @char* /*URI*/                        MatchBy                        0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType is a complexType with complexContent restriction of xs:anyType.
struct wsd__AppSequenceType
{
/// Attribute InstanceId of type xs:unsignedInt.
   @unsigned int                         InstanceId                     1;	///< Required attribute.
/// Attribute SequenceId of type xs:anyURI.
   @char* /*URI*/                        SequenceId                     0;	///< Optional attribute.
/// Attribute MessageNumber of type xs:unsignedInt.
   @unsigned int                         MessageNumber                  1;	///< Required attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
typedef struct wsd__HelloType _wsd__Hello;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
typedef struct wsd__ByeType _wsd__Bye;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
typedef struct wsd__ProbeType _wsd__Probe;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatches of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
typedef struct wsd__ProbeMatchesType _wsd__ProbeMatches;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Resolve of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
typedef struct wsd__ResolveType _wsd__Resolve;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatches of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType.
typedef struct wsd__ResolveMatchesType _wsd__ResolveMatches;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType.
typedef wsd__QNameListType _wsd__Types;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType.
typedef struct wsd__ScopesType _wsd__Scopes;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
typedef wsd__UriListType _wsd__XAddrs;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion of type xs:unsignedInt.
typedef unsigned int _wsd__MetadataVersion;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":SupportedMatchingRules of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
typedef wsd__UriListType _wsd__SupportedMatchingRules;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Security of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType.
typedef struct wsd__SecurityType _wsd__Security;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType.
typedef struct wsd__SigType _wsd__Sig;

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequence of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType.
typedef struct wsd__AppSequenceType _wsd__AppSequence;

/// Attribute "http://schemas.xmlsoap.org/ws/2005/04/discovery":Id of simpleType xs:ID.
typedef char* /*ID*/ _wsd__Id;

/* End of D:/intelli-vms/ws4d_gsoap/build/WS/wsd.h */

